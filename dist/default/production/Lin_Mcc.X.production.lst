

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 14 20:44:38 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 1.41
    68                           ; Generated 25/01/2017 GMT
    69                           ; 
    70                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F1825 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000E                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  008C                     	;# 
   130  008E                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  010C                     	;# 
   146  010E                     	;# 
   147  0111                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  0118                     	;# 
   155  0119                     	;# 
   156  011A                     	;# 
   157  011B                     	;# 
   158  011D                     	;# 
   159  011E                     	;# 
   160  018C                     	;# 
   161  018E                     	;# 
   162  0191                     	;# 
   163  0191                     	;# 
   164  0192                     	;# 
   165  0193                     	;# 
   166  0193                     	;# 
   167  0193                     	;# 
   168  0194                     	;# 
   169  0195                     	;# 
   170  0196                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019C                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019F                     	;# 
   179  020C                     	;# 
   180  020E                     	;# 
   181  0211                     	;# 
   182  0211                     	;# 
   183  0212                     	;# 
   184  0212                     	;# 
   185  0213                     	;# 
   186  0213                     	;# 
   187  0214                     	;# 
   188  0214                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  0291                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0295                     	;# 
   202  0295                     	;# 
   203  0296                     	;# 
   204  0298                     	;# 
   205  0298                     	;# 
   206  0299                     	;# 
   207  029A                     	;# 
   208  029B                     	;# 
   209  029C                     	;# 
   210  029D                     	;# 
   211  029E                     	;# 
   212  0311                     	;# 
   213  0311                     	;# 
   214  0312                     	;# 
   215  0313                     	;# 
   216  0318                     	;# 
   217  0318                     	;# 
   218  0319                     	;# 
   219  031A                     	;# 
   220  038C                     	;# 
   221  038E                     	;# 
   222  0391                     	;# 
   223  0392                     	;# 
   224  0393                     	;# 
   225  039A                     	;# 
   226  039C                     	;# 
   227  039D                     	;# 
   228  039E                     	;# 
   229  039F                     	;# 
   230  0415                     	;# 
   231  0416                     	;# 
   232  0417                     	;# 
   233  041C                     	;# 
   234  041D                     	;# 
   235  041E                     	;# 
   236  0FE4                     	;# 
   237  0FE5                     	;# 
   238  0FE6                     	;# 
   239  0FE7                     	;# 
   240  0FE8                     	;# 
   241  0FE9                     	;# 
   242  0FEA                     	;# 
   243  0FEB                     	;# 
   244  0FED                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000E                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  008C                     	;# 
   276  008E                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  010C                     	;# 
   292  010E                     	;# 
   293  0111                     	;# 
   294  0112                     	;# 
   295  0113                     	;# 
   296  0114                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011A                     	;# 
   303  011B                     	;# 
   304  011D                     	;# 
   305  011E                     	;# 
   306  018C                     	;# 
   307  018E                     	;# 
   308  0191                     	;# 
   309  0191                     	;# 
   310  0192                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0193                     	;# 
   314  0194                     	;# 
   315  0195                     	;# 
   316  0196                     	;# 
   317  0199                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  020E                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0216                     	;# 
   340  0217                     	;# 
   341  0217                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0298                     	;# 
   351  0298                     	;# 
   352  0299                     	;# 
   353  029A                     	;# 
   354  029B                     	;# 
   355  029C                     	;# 
   356  029D                     	;# 
   357  029E                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  038C                     	;# 
   367  038E                     	;# 
   368  0391                     	;# 
   369  0392                     	;# 
   370  0393                     	;# 
   371  039A                     	;# 
   372  039C                     	;# 
   373  039D                     	;# 
   374  039E                     	;# 
   375  039F                     	;# 
   376  0415                     	;# 
   377  0416                     	;# 
   378  0417                     	;# 
   379  041C                     	;# 
   380  041D                     	;# 
   381  041E                     	;# 
   382  0FE4                     	;# 
   383  0FE5                     	;# 
   384  0FE6                     	;# 
   385  0FE7                     	;# 
   386  0FE8                     	;# 
   387  0FE9                     	;# 
   388  0FEA                     	;# 
   389  0FEB                     	;# 
   390  0FED                     	;# 
   391  0FEE                     	;# 
   392  0FEF                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000E                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  008C                     	;# 
   422  008E                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  010C                     	;# 
   438  010E                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011A                     	;# 
   449  011B                     	;# 
   450  011D                     	;# 
   451  011E                     	;# 
   452  018C                     	;# 
   453  018E                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0199                     	;# 
   464  019A                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019C                     	;# 
   468  019D                     	;# 
   469  019E                     	;# 
   470  019F                     	;# 
   471  020C                     	;# 
   472  020E                     	;# 
   473  0211                     	;# 
   474  0211                     	;# 
   475  0212                     	;# 
   476  0212                     	;# 
   477  0213                     	;# 
   478  0213                     	;# 
   479  0214                     	;# 
   480  0214                     	;# 
   481  0215                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0216                     	;# 
   485  0216                     	;# 
   486  0217                     	;# 
   487  0217                     	;# 
   488  0291                     	;# 
   489  0291                     	;# 
   490  0292                     	;# 
   491  0293                     	;# 
   492  0294                     	;# 
   493  0295                     	;# 
   494  0295                     	;# 
   495  0296                     	;# 
   496  0298                     	;# 
   497  0298                     	;# 
   498  0299                     	;# 
   499  029A                     	;# 
   500  029B                     	;# 
   501  029C                     	;# 
   502  029D                     	;# 
   503  029E                     	;# 
   504  0311                     	;# 
   505  0311                     	;# 
   506  0312                     	;# 
   507  0313                     	;# 
   508  0318                     	;# 
   509  0318                     	;# 
   510  0319                     	;# 
   511  031A                     	;# 
   512  038C                     	;# 
   513  038E                     	;# 
   514  0391                     	;# 
   515  0392                     	;# 
   516  0393                     	;# 
   517  039A                     	;# 
   518  039C                     	;# 
   519  039D                     	;# 
   520  039E                     	;# 
   521  039F                     	;# 
   522  0415                     	;# 
   523  0416                     	;# 
   524  0417                     	;# 
   525  041C                     	;# 
   526  041D                     	;# 
   527  041E                     	;# 
   528  0FE4                     	;# 
   529  0FE5                     	;# 
   530  0FE6                     	;# 
   531  0FE7                     	;# 
   532  0FE8                     	;# 
   533  0FE9                     	;# 
   534  0FEA                     	;# 
   535  0FEB                     	;# 
   536  0FED                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000E                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001E                     	;# 
   566  001F                     	;# 
   567  008C                     	;# 
   568  008E                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0093                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0097                     	;# 
   575  0098                     	;# 
   576  0099                     	;# 
   577  009A                     	;# 
   578  009B                     	;# 
   579  009B                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  010C                     	;# 
   584  010E                     	;# 
   585  0111                     	;# 
   586  0112                     	;# 
   587  0113                     	;# 
   588  0114                     	;# 
   589  0115                     	;# 
   590  0116                     	;# 
   591  0117                     	;# 
   592  0118                     	;# 
   593  0119                     	;# 
   594  011A                     	;# 
   595  011B                     	;# 
   596  011D                     	;# 
   597  011E                     	;# 
   598  018C                     	;# 
   599  018E                     	;# 
   600  0191                     	;# 
   601  0191                     	;# 
   602  0192                     	;# 
   603  0193                     	;# 
   604  0193                     	;# 
   605  0193                     	;# 
   606  0194                     	;# 
   607  0195                     	;# 
   608  0196                     	;# 
   609  0199                     	;# 
   610  019A                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019C                     	;# 
   614  019D                     	;# 
   615  019E                     	;# 
   616  019F                     	;# 
   617  020C                     	;# 
   618  020E                     	;# 
   619  0211                     	;# 
   620  0211                     	;# 
   621  0212                     	;# 
   622  0212                     	;# 
   623  0213                     	;# 
   624  0213                     	;# 
   625  0214                     	;# 
   626  0214                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0216                     	;# 
   631  0216                     	;# 
   632  0217                     	;# 
   633  0217                     	;# 
   634  0291                     	;# 
   635  0291                     	;# 
   636  0292                     	;# 
   637  0293                     	;# 
   638  0294                     	;# 
   639  0295                     	;# 
   640  0295                     	;# 
   641  0296                     	;# 
   642  0298                     	;# 
   643  0298                     	;# 
   644  0299                     	;# 
   645  029A                     	;# 
   646  029B                     	;# 
   647  029C                     	;# 
   648  029D                     	;# 
   649  029E                     	;# 
   650  0311                     	;# 
   651  0311                     	;# 
   652  0312                     	;# 
   653  0313                     	;# 
   654  0318                     	;# 
   655  0318                     	;# 
   656  0319                     	;# 
   657  031A                     	;# 
   658  038C                     	;# 
   659  038E                     	;# 
   660  0391                     	;# 
   661  0392                     	;# 
   662  0393                     	;# 
   663  039A                     	;# 
   664  039C                     	;# 
   665  039D                     	;# 
   666  039E                     	;# 
   667  039F                     	;# 
   668  0415                     	;# 
   669  0416                     	;# 
   670  0417                     	;# 
   671  041C                     	;# 
   672  041D                     	;# 
   673  041E                     	;# 
   674  0FE4                     	;# 
   675  0FE5                     	;# 
   676  0FE6                     	;# 
   677  0FE7                     	;# 
   678  0FE8                     	;# 
   679  0FE9                     	;# 
   680  0FEA                     	;# 
   681  0FEB                     	;# 
   682  0FED                     	;# 
   683  0FEE                     	;# 
   684  0FEF                     	;# 
   685  0000                     	;# 
   686  0001                     	;# 
   687  0002                     	;# 
   688  0003                     	;# 
   689  0004                     	;# 
   690  0005                     	;# 
   691  0006                     	;# 
   692  0007                     	;# 
   693  0008                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000E                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0013                     	;# 
   702  0015                     	;# 
   703  0016                     	;# 
   704  0016                     	;# 
   705  0017                     	;# 
   706  0018                     	;# 
   707  0019                     	;# 
   708  001A                     	;# 
   709  001B                     	;# 
   710  001C                     	;# 
   711  001E                     	;# 
   712  001F                     	;# 
   713  008C                     	;# 
   714  008E                     	;# 
   715  0091                     	;# 
   716  0092                     	;# 
   717  0093                     	;# 
   718  0095                     	;# 
   719  0096                     	;# 
   720  0097                     	;# 
   721  0098                     	;# 
   722  0099                     	;# 
   723  009A                     	;# 
   724  009B                     	;# 
   725  009B                     	;# 
   726  009C                     	;# 
   727  009D                     	;# 
   728  009E                     	;# 
   729  010C                     	;# 
   730  010E                     	;# 
   731  0111                     	;# 
   732  0112                     	;# 
   733  0113                     	;# 
   734  0114                     	;# 
   735  0115                     	;# 
   736  0116                     	;# 
   737  0117                     	;# 
   738  0118                     	;# 
   739  0119                     	;# 
   740  011A                     	;# 
   741  011B                     	;# 
   742  011D                     	;# 
   743  011E                     	;# 
   744  018C                     	;# 
   745  018E                     	;# 
   746  0191                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0193                     	;# 
   750  0193                     	;# 
   751  0193                     	;# 
   752  0194                     	;# 
   753  0195                     	;# 
   754  0196                     	;# 
   755  0199                     	;# 
   756  019A                     	;# 
   757  019B                     	;# 
   758  019B                     	;# 
   759  019C                     	;# 
   760  019D                     	;# 
   761  019E                     	;# 
   762  019F                     	;# 
   763  020C                     	;# 
   764  020E                     	;# 
   765  0211                     	;# 
   766  0211                     	;# 
   767  0212                     	;# 
   768  0212                     	;# 
   769  0213                     	;# 
   770  0213                     	;# 
   771  0214                     	;# 
   772  0214                     	;# 
   773  0215                     	;# 
   774  0215                     	;# 
   775  0215                     	;# 
   776  0216                     	;# 
   777  0216                     	;# 
   778  0217                     	;# 
   779  0217                     	;# 
   780  0291                     	;# 
   781  0291                     	;# 
   782  0292                     	;# 
   783  0293                     	;# 
   784  0294                     	;# 
   785  0295                     	;# 
   786  0295                     	;# 
   787  0296                     	;# 
   788  0298                     	;# 
   789  0298                     	;# 
   790  0299                     	;# 
   791  029A                     	;# 
   792  029B                     	;# 
   793  029C                     	;# 
   794  029D                     	;# 
   795  029E                     	;# 
   796  0311                     	;# 
   797  0311                     	;# 
   798  0312                     	;# 
   799  0313                     	;# 
   800  0318                     	;# 
   801  0318                     	;# 
   802  0319                     	;# 
   803  031A                     	;# 
   804  038C                     	;# 
   805  038E                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  0393                     	;# 
   809  039A                     	;# 
   810  039C                     	;# 
   811  039D                     	;# 
   812  039E                     	;# 
   813  039F                     	;# 
   814  0415                     	;# 
   815  0416                     	;# 
   816  0417                     	;# 
   817  041C                     	;# 
   818  041D                     	;# 
   819  041E                     	;# 
   820  0FE4                     	;# 
   821  0FE5                     	;# 
   822  0FE6                     	;# 
   823  0FE7                     	;# 
   824  0FE8                     	;# 
   825  0FE9                     	;# 
   826  0FEA                     	;# 
   827  0FEB                     	;# 
   828  0FED                     	;# 
   829  0FEE                     	;# 
   830  0FEF                     	;# 
   831  0000                     	;# 
   832  0001                     	;# 
   833  0002                     	;# 
   834  0003                     	;# 
   835  0004                     	;# 
   836  0005                     	;# 
   837  0006                     	;# 
   838  0007                     	;# 
   839  0008                     	;# 
   840  0009                     	;# 
   841  000A                     	;# 
   842  000B                     	;# 
   843  000C                     	;# 
   844  000E                     	;# 
   845  0011                     	;# 
   846  0012                     	;# 
   847  0013                     	;# 
   848  0015                     	;# 
   849  0016                     	;# 
   850  0016                     	;# 
   851  0017                     	;# 
   852  0018                     	;# 
   853  0019                     	;# 
   854  001A                     	;# 
   855  001B                     	;# 
   856  001C                     	;# 
   857  001E                     	;# 
   858  001F                     	;# 
   859  008C                     	;# 
   860  008E                     	;# 
   861  0091                     	;# 
   862  0092                     	;# 
   863  0093                     	;# 
   864  0095                     	;# 
   865  0096                     	;# 
   866  0097                     	;# 
   867  0098                     	;# 
   868  0099                     	;# 
   869  009A                     	;# 
   870  009B                     	;# 
   871  009B                     	;# 
   872  009C                     	;# 
   873  009D                     	;# 
   874  009E                     	;# 
   875  010C                     	;# 
   876  010E                     	;# 
   877  0111                     	;# 
   878  0112                     	;# 
   879  0113                     	;# 
   880  0114                     	;# 
   881  0115                     	;# 
   882  0116                     	;# 
   883  0117                     	;# 
   884  0118                     	;# 
   885  0119                     	;# 
   886  011A                     	;# 
   887  011B                     	;# 
   888  011D                     	;# 
   889  011E                     	;# 
   890  018C                     	;# 
   891  018E                     	;# 
   892  0191                     	;# 
   893  0191                     	;# 
   894  0192                     	;# 
   895  0193                     	;# 
   896  0193                     	;# 
   897  0193                     	;# 
   898  0194                     	;# 
   899  0195                     	;# 
   900  0196                     	;# 
   901  0199                     	;# 
   902  019A                     	;# 
   903  019B                     	;# 
   904  019B                     	;# 
   905  019C                     	;# 
   906  019D                     	;# 
   907  019E                     	;# 
   908  019F                     	;# 
   909  020C                     	;# 
   910  020E                     	;# 
   911  0211                     	;# 
   912  0211                     	;# 
   913  0212                     	;# 
   914  0212                     	;# 
   915  0213                     	;# 
   916  0213                     	;# 
   917  0214                     	;# 
   918  0214                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0216                     	;# 
   923  0216                     	;# 
   924  0217                     	;# 
   925  0217                     	;# 
   926  0291                     	;# 
   927  0291                     	;# 
   928  0292                     	;# 
   929  0293                     	;# 
   930  0294                     	;# 
   931  0295                     	;# 
   932  0295                     	;# 
   933  0296                     	;# 
   934  0298                     	;# 
   935  0298                     	;# 
   936  0299                     	;# 
   937  029A                     	;# 
   938  029B                     	;# 
   939  029C                     	;# 
   940  029D                     	;# 
   941  029E                     	;# 
   942  0311                     	;# 
   943  0311                     	;# 
   944  0312                     	;# 
   945  0313                     	;# 
   946  0318                     	;# 
   947  0318                     	;# 
   948  0319                     	;# 
   949  031A                     	;# 
   950  038C                     	;# 
   951  038E                     	;# 
   952  0391                     	;# 
   953  0392                     	;# 
   954  0393                     	;# 
   955  039A                     	;# 
   956  039C                     	;# 
   957  039D                     	;# 
   958  039E                     	;# 
   959  039F                     	;# 
   960  0415                     	;# 
   961  0416                     	;# 
   962  0417                     	;# 
   963  041C                     	;# 
   964  041D                     	;# 
   965  041E                     	;# 
   966  0FE4                     	;# 
   967  0FE5                     	;# 
   968  0FE6                     	;# 
   969  0FE7                     	;# 
   970  0FE8                     	;# 
   971  0FE9                     	;# 
   972  0FEA                     	;# 
   973  0FEB                     	;# 
   974  0FED                     	;# 
   975  0FEE                     	;# 
   976  0FEF                     	;# 
   977  0000                     	;# 
   978  0001                     	;# 
   979  0002                     	;# 
   980  0003                     	;# 
   981  0004                     	;# 
   982  0005                     	;# 
   983  0006                     	;# 
   984  0007                     	;# 
   985  0008                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000E                     	;# 
   991  0011                     	;# 
   992  0012                     	;# 
   993  0013                     	;# 
   994  0015                     	;# 
   995  0016                     	;# 
   996  0016                     	;# 
   997  0017                     	;# 
   998  0018                     	;# 
   999  0019                     	;# 
  1000  001A                     	;# 
  1001  001B                     	;# 
  1002  001C                     	;# 
  1003  001E                     	;# 
  1004  001F                     	;# 
  1005  008C                     	;# 
  1006  008E                     	;# 
  1007  0091                     	;# 
  1008  0092                     	;# 
  1009  0093                     	;# 
  1010  0095                     	;# 
  1011  0096                     	;# 
  1012  0097                     	;# 
  1013  0098                     	;# 
  1014  0099                     	;# 
  1015  009A                     	;# 
  1016  009B                     	;# 
  1017  009B                     	;# 
  1018  009C                     	;# 
  1019  009D                     	;# 
  1020  009E                     	;# 
  1021  010C                     	;# 
  1022  010E                     	;# 
  1023  0111                     	;# 
  1024  0112                     	;# 
  1025  0113                     	;# 
  1026  0114                     	;# 
  1027  0115                     	;# 
  1028  0116                     	;# 
  1029  0117                     	;# 
  1030  0118                     	;# 
  1031  0119                     	;# 
  1032  011A                     	;# 
  1033  011B                     	;# 
  1034  011D                     	;# 
  1035  011E                     	;# 
  1036  018C                     	;# 
  1037  018E                     	;# 
  1038  0191                     	;# 
  1039  0191                     	;# 
  1040  0192                     	;# 
  1041  0193                     	;# 
  1042  0193                     	;# 
  1043  0193                     	;# 
  1044  0194                     	;# 
  1045  0195                     	;# 
  1046  0196                     	;# 
  1047  0199                     	;# 
  1048  019A                     	;# 
  1049  019B                     	;# 
  1050  019B                     	;# 
  1051  019C                     	;# 
  1052  019D                     	;# 
  1053  019E                     	;# 
  1054  019F                     	;# 
  1055  020C                     	;# 
  1056  020E                     	;# 
  1057  0211                     	;# 
  1058  0211                     	;# 
  1059  0212                     	;# 
  1060  0212                     	;# 
  1061  0213                     	;# 
  1062  0213                     	;# 
  1063  0214                     	;# 
  1064  0214                     	;# 
  1065  0215                     	;# 
  1066  0215                     	;# 
  1067  0215                     	;# 
  1068  0216                     	;# 
  1069  0216                     	;# 
  1070  0217                     	;# 
  1071  0217                     	;# 
  1072  0291                     	;# 
  1073  0291                     	;# 
  1074  0292                     	;# 
  1075  0293                     	;# 
  1076  0294                     	;# 
  1077  0295                     	;# 
  1078  0295                     	;# 
  1079  0296                     	;# 
  1080  0298                     	;# 
  1081  0298                     	;# 
  1082  0299                     	;# 
  1083  029A                     	;# 
  1084  029B                     	;# 
  1085  029C                     	;# 
  1086  029D                     	;# 
  1087  029E                     	;# 
  1088  0311                     	;# 
  1089  0311                     	;# 
  1090  0312                     	;# 
  1091  0313                     	;# 
  1092  0318                     	;# 
  1093  0318                     	;# 
  1094  0319                     	;# 
  1095  031A                     	;# 
  1096  038C                     	;# 
  1097  038E                     	;# 
  1098  0391                     	;# 
  1099  0392                     	;# 
  1100  0393                     	;# 
  1101  039A                     	;# 
  1102  039C                     	;# 
  1103  039D                     	;# 
  1104  039E                     	;# 
  1105  039F                     	;# 
  1106  0415                     	;# 
  1107  0416                     	;# 
  1108  0417                     	;# 
  1109  041C                     	;# 
  1110  041D                     	;# 
  1111  041E                     	;# 
  1112  0FE4                     	;# 
  1113  0FE5                     	;# 
  1114  0FE6                     	;# 
  1115  0FE7                     	;# 
  1116  0FE8                     	;# 
  1117  0FE9                     	;# 
  1118  0FEA                     	;# 
  1119  0FEB                     	;# 
  1120  0FED                     	;# 
  1121  0FEE                     	;# 
  1122  0FEF                     	;# 
  1123                           
  1124                           	psect	idataBANK0
  1125  05A1                     __pidataBANK0:	
  1126                           
  1127                           ;initializer for _LIN_timeout
  1128  05A1  340A               	retlw	10
  1129                           
  1130                           	psect	stringtext
  1131  04D4                     __pstringtext:	
  1132  04D4                     _scheduleTable:	
  1133  04D4  3400               	retlw	0
  1134  04D5  3400               	retlw	0
  1135  04D6  3401               	retlw	1
  1136  04D7  3400               	retlw	0
  1137  04D8  3464               	retlw	100
  1138  04D9  3442               	retlw	low (_UNLOCK_Data| 0)
  1139  04DA  3401               	retlw	1
  1140  04DB  3400               	retlw	0
  1141  04DC  3401               	retlw	1
  1142  04DD  3400               	retlw	0
  1143  04DE  3414               	retlw	20
  1144  04DF  3441               	retlw	low (_RSSI_Data| 0)
  1145  04E0  3402               	retlw	2
  1146  04E1  3401               	retlw	1
  1147  04E2  3408               	retlw	8
  1148  04E3  3464               	retlw	100
  1149  04E4  3400               	retlw	0
  1150  04E5  34BC               	retlw	low (_LFRX_Data| 0)
  1151  04E6                     __end_of_scheduleTable:	
  1152                           
  1153                           	psect	nvBANK0
  1154  0058                     __pnvBANK0:	
  1155  0058                     _TMR0_InterruptHandler:	
  1156  0058                     	ds	2
  1157  005A                     _schedule:	
  1158  005A                     	ds	2
  1159  005C                     _LIN_processData:	
  1160  005C                     	ds	2
  1161  005E                     _EUSART_RxDefaultInterruptHandler:	
  1162  005E                     	ds	2
  1163  0060                     _EUSART_TxDefaultInterruptHandler:	
  1164  0060                     	ds	2
  1165  0062                     _eusartTxBufferRemaining:	
  1166  0062                     	ds	1
  1167  0063                     _timer0ReloadVal:	
  1168  0063                     	ds	1
  1169  0064                     _LIN_enablePeriodTx:	
  1170  0064                     	ds	1
  1171  0065                     _scheduleLength:	
  1172  0065                     	ds	1
  1173                           
  1174                           	psect	nvBANK1
  1175  00CD                     __pnvBANK1:	
  1176  00CD                     _EUSART_ErrorHandler:	
  1177  00CD                     	ds	2
  1178  00CF                     _EUSART_OverrunErrorHandler:	
  1179  00CF                     	ds	2
  1180  00D1                     _EUSART_FramingErrorHandler:	
  1181  00D1                     	ds	2
  1182  0011                     _PIR1bits	set	17
  1183  000B                     _INTCONbits	set	11
  1184  0015                     _TMR0	set	21
  1185  0097                     _WDTCON	set	151
  1186  0098                     _OSCTUNE	set	152
  1187  0099                     _OSCCON	set	153
  1188  0095                     _OPTION_REGbits	set	149
  1189  008E                     _TRISC	set	142
  1190  008C                     _TRISA	set	140
  1191  0095                     _OPTION_REG	set	149
  1192  0091                     _PIE1bits	set	145
  1193  0116                     _BORCON	set	278
  1194  011E                     _APFCON1	set	286
  1195  011D                     _APFCON0	set	285
  1196  010E                     _LATC	set	270
  1197  010C                     _LATA	set	268
  1198  0199                     _RCREG	set	409
  1199  019A                     _TXREG	set	410
  1200  019C                     _SPBRGH	set	412
  1201  019B                     _SPBRGL	set	411
  1202  019E                     _TXSTA	set	414
  1203  019D                     _RCSTA	set	413
  1204  019F                     _BAUDCON	set	415
  1205  018C                     _ANSELA	set	396
  1206  018E                     _ANSELC	set	398
  1207  019D                     _RCSTAbits	set	413
  1208  019E                     _TXSTAbits	set	414
  1209  020E                     _WPUC	set	526
  1210  020C                     _WPUA	set	524
  1211                           
  1212                           ; #config settings
  1213  0000                     
  1214                           	psect	cinit
  1215  0030                     start_initialization:	
  1216  0030                     __initialization:	
  1217                           
  1218                           ; Initialize objects allocated to BANK0
  1219  0030  3185  25A1  3180   	fcall	__pidataBANK0	;fetch initializer
  1220  0033  00E6               	movwf	__pdataBANK0& (0+127)
  1221                           
  1222                           ; Clear objects allocated to BANK0
  1223  0034  3020               	movlw	low __pbssBANK0
  1224  0035  0084               	movwf	4
  1225  0036  3000               	movlw	high __pbssBANK0
  1226  0037  0085               	movwf	5
  1227  0038  3023               	movlw	35
  1228  0039  3185  255D  3180   	fcall	clear_ram0
  1229                           
  1230                           ; Clear objects allocated to BANK1
  1231  003C  30A0               	movlw	low __pbssBANK1
  1232  003D  0084               	movwf	4
  1233  003E  3000               	movlw	high __pbssBANK1
  1234  003F  0085               	movwf	5
  1235  0040  3024               	movlw	36
  1236  0041  3185  255D         	fcall	clear_ram0
  1237  0043                     end_of_initialization:	
  1238                           ;End of C runtime variable initialization code
  1239                           
  1240  0043                     __end_of__initialization:	
  1241  0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1242  0044  0020               	movlb	0
  1243  0045  3184  2CE6         	ljmp	_main	;jump to C main() function
  1244                           
  1245                           	psect	bssBANK0
  1246  0020                     __pbssBANK0:	
  1247  0020                     _eusartRxStatusBuffer:	
  1248  0020                     	ds	8
  1249  0028                     _eusartRxLastError:	
  1250  0028                     	ds	1
  1251  0029                     _eusartRxCount:	
  1252  0029                     	ds	1
  1253  002A                     _eusartRxTail:	
  1254  002A                     	ds	1
  1255  002B                     _eusartRxHead:	
  1256  002B                     	ds	1
  1257  002C                     _eusartTxTail:	
  1258  002C                     	ds	1
  1259  002D                     _eusartTxHead:	
  1260  002D                     	ds	1
  1261  002E                     LIN_sendPeriodicTx@scheduleIndex:	
  1262  002E                     	ds	1
  1263  002F                     LIN_receivePacket@rxIndex:	
  1264  002F                     	ds	1
  1265  0030                     LIN_handler@LIN_state:	
  1266  0030                     	ds	1
  1267  0031                     _LIN_periodCallBack:	
  1268  0031                     	ds	1
  1269  0032                     _LIN_timerCallBack:	
  1270  0032                     	ds	1
  1271  0033                     _LIN_timerRunning:	
  1272  0033                     	ds	1
  1273  0034                     _LIN_period:	
  1274  0034                     	ds	1
  1275  0035                     _LIN_txReady:	
  1276  0035                     	ds	1
  1277  0036                     _LIN_packet:	
  1278  0036                     	ds	11
  1279  0041                     _RSSI_Data:	
  1280  0041                     	ds	1
  1281  0042                     _UNLOCK_Data:	
  1282  0042                     	ds	1
  1283                           
  1284                           	psect	dataBANK0
  1285  0066                     __pdataBANK0:	
  1286  0066                     _LIN_timeout:	
  1287  0066                     	ds	1
  1288                           
  1289                           	psect	bssBANK1
  1290  00A0                     __pbssBANK1:	
  1291  00A0                     _eusartRxBuffer:	
  1292  00A0                     	ds	8
  1293  00A8                     _eusartTxBuffer:	
  1294  00A8                     	ds	8
  1295  00B0                     _LIN_rxPacket:	
  1296  00B0                     	ds	12
  1297  00BC                     _LFRX_Data:	
  1298  00BC                     	ds	8
  1299                           
  1300                           	psect	clrtext
  1301  055D                     clear_ram0:	
  1302                           ;	Called with FSR0 containing the base address, and
  1303                           ;	WREG with the size to clear
  1304                           
  1305  055D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1306  055E                     clrloop0:	
  1307  055E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1308  055F  3101               	addfsr 0,1
  1309  0560  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1310  0561  2D5E               	goto	clrloop0	;have we reached the end yet?
  1311  0562  3400               	retlw	0	;all done for this memory range, return
  1312                           
  1313                           	psect	cstackBANK1
  1314  00C4                     __pcstackBANK1:	
  1315  00C4                     processLIN@tempRxData:	
  1316                           
  1317                           ; 8 bytes @ 0x0
  1318  00C4                     	ds	8
  1319  00CC                     processLIN@cmd:	
  1320                           
  1321                           ; 1 bytes @ 0x8
  1322  00CC                     	ds	1
  1323                           
  1324                           	psect	cstackCOMMON
  1325  0070                     __pcstackCOMMON:	
  1326  0070                     ?_processLIN:	
  1327  0070                     ?_LIN_getPacket:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ?_LIN_stopTimer:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ?_LIN_setTimerHandler:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_LIN_startPeriod:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ?_LIN_calcParity:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ??_LIN_calcParity:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_LIN_disableRx:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ?_LIN_sendPacket:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_LIN_startTimer:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_LIN_enableRx:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_EUSART_is_rx_ready:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_LIN_receivePacket:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_EUSART_Read:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_LIN_sendBreak:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_EUSART_Write:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ?_TMR0_WriteTimer:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_LIN_sendPeriodicTx:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?_TMR0_DefaultInterruptHandler:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ??_TMR0_DefaultInterruptHandler:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ?_OSCILLATOR_Initialize:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_WDT_Initialize:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ?_EUSART_Initialize:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ?_EUSART_Receive_ISR:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?_EUSART_Transmit_ISR:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ??_EUSART_Transmit_ISR:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ?_EUSART_DefaultErrorHandler:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_EUSART_RxDataHandler:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ??_EUSART_RxDataHandler:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_LIN_Master_Initialize:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?_LIN_handler:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_LIN_timerHandler:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_TMR0_Initialize:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ?_TMR0_ISR:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_PIN_MANAGER_Initialize:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_SYSTEM_Initialize:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_INTERRUPT_InterruptManager:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ?_main:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?i1_LIN_getChecksum:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?i1_LIN_stopTimer:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ??i1_LIN_stopTimer:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ?___wmul:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0070                     i1LIN_getChecksum@data:	
  1463                           ; 2 bytes @ 0x0
  1464                           
  1465  0070                     ___wmul@multiplier:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468                           
  1469                           ; 2 bytes @ 0x0
  1470  0070                     	ds	1
  1471  0071                     ??_EUSART_Receive_ISR:	
  1472  0071                     ??_EUSART_DefaultErrorHandler:	
  1473                           ; 1 bytes @ 0x1
  1474                           
  1475  0071                     ??i1_LIN_getChecksum:	
  1476                           ; 1 bytes @ 0x1
  1477                           
  1478  0071                     LIN_calcParity@CMD:	
  1479                           ; 1 bytes @ 0x1
  1480                           
  1481                           
  1482                           ; 1 bytes @ 0x1
  1483  0071                     	ds	1
  1484  0072                     LIN_calcParity@PID:	
  1485  0072                     i1LIN_getChecksum@length:	
  1486                           ; 1 bytes @ 0x2
  1487                           
  1488  0072                     ___wmul@multiplicand:	
  1489                           ; 1 bytes @ 0x2
  1490                           
  1491                           
  1492                           ; 2 bytes @ 0x2
  1493  0072                     	ds	1
  1494  0073                     i1LIN_getChecksum@i:	
  1495                           
  1496                           ; 1 bytes @ 0x3
  1497  0073                     	ds	1
  1498  0074                     ??___wmul:	
  1499  0074                     ___wmul@product:	
  1500                           ; 1 bytes @ 0x4
  1501                           
  1502  0074                     i1LIN_getChecksum@checksum:	
  1503                           ; 2 bytes @ 0x4
  1504                           
  1505                           
  1506                           ; 2 bytes @ 0x4
  1507  0074                     	ds	2
  1508  0076                     ?_LIN_queuePacket:	
  1509  0076                     LIN_queuePacket@data:	
  1510                           ; 1 bytes @ 0x6
  1511                           
  1512                           
  1513                           ; 1 bytes @ 0x6
  1514  0076                     	ds	1
  1515  0077                     ??_LIN_queuePacket:	
  1516                           
  1517                           ; 1 bytes @ 0x7
  1518  0077                     	ds	4
  1519  007B                     ??_LIN_sendPeriodicTx:	
  1520                           
  1521                           ; 1 bytes @ 0xB
  1522  007B                     	ds	3
  1523  007E                     ??_TMR0_ISR:	
  1524                           
  1525                           	psect	cstackBANK0
  1526  0043                     __pcstackBANK0:	
  1527                           ; 1 bytes @ 0xE
  1528                           
  1529  0043                     LIN_queuePacket@cmd:	
  1530                           
  1531                           ; 1 bytes @ 0x0
  1532  0043                     	ds	1
  1533  0044                     LIN_queuePacket@i:	
  1534                           
  1535                           ; 1 bytes @ 0x1
  1536  0044                     	ds	1
  1537  0045                     LIN_queuePacket@tempSchedule:	
  1538                           
  1539                           ; 2 bytes @ 0x2
  1540  0045                     	ds	2
  1541  0047                     LIN_sendPeriodicTx@periodicTx:	
  1542                           
  1543                           ; 2 bytes @ 0x4
  1544  0047                     	ds	2
  1545  0049                     ??_LIN_timerHandler:	
  1546                           
  1547                           ; 1 bytes @ 0x6
  1548  0049                     	ds	1
  1549  004A                     ??_INTERRUPT_InterruptManager:	
  1550                           
  1551                           ; 1 bytes @ 0x7
  1552  004A                     	ds	1
  1553  004B                     ??_LIN_stopTimer:	
  1554  004B                     ??_LIN_startPeriod:	
  1555                           ; 1 bytes @ 0x8
  1556                           
  1557  004B                     ?_LIN_getChecksum:	
  1558                           ; 1 bytes @ 0x8
  1559                           
  1560  004B                     ??_LIN_disableRx:	
  1561                           ; 1 bytes @ 0x8
  1562                           
  1563  004B                     ?_memset:	
  1564                           ; 1 bytes @ 0x8
  1565                           
  1566  004B                     ??_LIN_enableRx:	
  1567                           ; 1 bytes @ 0x8
  1568                           
  1569  004B                     ??_EUSART_is_rx_ready:	
  1570                           ; 1 bytes @ 0x8
  1571                           
  1572  004B                     ??_EUSART_Read:	
  1573                           ; 1 bytes @ 0x8
  1574                           
  1575  004B                     ??_LIN_sendBreak:	
  1576                           ; 1 bytes @ 0x8
  1577                           
  1578  004B                     ??_EUSART_Write:	
  1579                           ; 1 bytes @ 0x8
  1580                           
  1581  004B                     ??_TMR0_WriteTimer:	
  1582                           ; 1 bytes @ 0x8
  1583                           
  1584  004B                     ?_TMR0_SetInterruptHandler:	
  1585                           ; 1 bytes @ 0x8
  1586                           
  1587  004B                     ??_OSCILLATOR_Initialize:	
  1588                           ; 1 bytes @ 0x8
  1589                           
  1590  004B                     ??_WDT_Initialize:	
  1591                           ; 1 bytes @ 0x8
  1592                           
  1593  004B                     ?_EUSART_SetRxInterruptHandler:	
  1594                           ; 1 bytes @ 0x8
  1595                           
  1596  004B                     ?_EUSART_SetTxInterruptHandler:	
  1597                           ; 1 bytes @ 0x8
  1598                           
  1599  004B                     ?_EUSART_SetFramingErrorHandler:	
  1600                           ; 1 bytes @ 0x8
  1601                           
  1602  004B                     ?_EUSART_SetOverrunErrorHandler:	
  1603                           ; 1 bytes @ 0x8
  1604                           
  1605  004B                     ?_EUSART_SetErrorHandler:	
  1606                           ; 1 bytes @ 0x8
  1607                           
  1608  004B                     ??_PIN_MANAGER_Initialize:	
  1609                           ; 1 bytes @ 0x8
  1610                           
  1611  004B                     LIN_getChecksum@data:	
  1612                           ; 1 bytes @ 0x8
  1613                           
  1614  004B                     TMR0_WriteTimer@timerVal:	
  1615                           ; 1 bytes @ 0x8
  1616                           
  1617  004B                     TMR0_SetInterruptHandler@InterruptHandler:	
  1618                           ; 1 bytes @ 0x8
  1619                           
  1620  004B                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1621                           ; 2 bytes @ 0x8
  1622                           
  1623  004B                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1624                           ; 2 bytes @ 0x8
  1625                           
  1626  004B                     EUSART_SetErrorHandler@interruptHandler:	
  1627                           ; 2 bytes @ 0x8
  1628                           
  1629  004B                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1630                           ; 2 bytes @ 0x8
  1631                           
  1632  004B                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1633                           ; 2 bytes @ 0x8
  1634                           
  1635  004B                     memset@c:	
  1636                           ; 2 bytes @ 0x8
  1637                           
  1638                           
  1639                           ; 2 bytes @ 0x8
  1640  004B                     	ds	1
  1641  004C                     ??_LIN_getChecksum:	
  1642  004C                     ??_LIN_startTimer:	
  1643                           ; 1 bytes @ 0x9
  1644                           
  1645  004C                     EUSART_Read@readValue:	
  1646                           ; 1 bytes @ 0x9
  1647                           
  1648  004C                     EUSART_Write@txData:	
  1649                           ; 1 bytes @ 0x9
  1650                           
  1651                           
  1652                           ; 1 bytes @ 0x9
  1653  004C                     	ds	1
  1654  004D                     ?_LIN_init:	
  1655  004D                     ??_LIN_setTimerHandler:	
  1656                           ; 1 bytes @ 0xA
  1657                           
  1658  004D                     ??_LIN_sendPacket:	
  1659                           ; 1 bytes @ 0xA
  1660                           
  1661  004D                     ??_TMR0_SetInterruptHandler:	
  1662                           ; 1 bytes @ 0xA
  1663                           
  1664  004D                     ??_EUSART_Initialize:	
  1665                           ; 1 bytes @ 0xA
  1666                           
  1667  004D                     ??_EUSART_SetRxInterruptHandler:	
  1668                           ; 1 bytes @ 0xA
  1669                           
  1670  004D                     ??_EUSART_SetTxInterruptHandler:	
  1671                           ; 1 bytes @ 0xA
  1672                           
  1673  004D                     ??_EUSART_SetFramingErrorHandler:	
  1674                           ; 1 bytes @ 0xA
  1675                           
  1676  004D                     ??_EUSART_SetOverrunErrorHandler:	
  1677                           ; 1 bytes @ 0xA
  1678                           
  1679  004D                     ??_EUSART_SetErrorHandler:	
  1680                           ; 1 bytes @ 0xA
  1681                           
  1682  004D                     ??_TMR0_Initialize:	
  1683                           ; 1 bytes @ 0xA
  1684                           
  1685  004D                     LIN_getChecksum@length:	
  1686                           ; 1 bytes @ 0xA
  1687                           
  1688  004D                     LIN_startTimer@timeout:	
  1689                           ; 1 bytes @ 0xA
  1690                           
  1691  004D                     LIN_init@table:	
  1692                           ; 1 bytes @ 0xA
  1693                           
  1694  004D                     memset@n:	
  1695                           ; 2 bytes @ 0xA
  1696                           
  1697                           
  1698                           ; 2 bytes @ 0xA
  1699  004D                     	ds	1
  1700  004E                     LIN_sendPacket@i:	
  1701  004E                     LIN_getChecksum@i:	
  1702                           ; 1 bytes @ 0xB
  1703                           
  1704                           
  1705                           ; 1 bytes @ 0xB
  1706  004E                     	ds	1
  1707  004F                     ??_memset:	
  1708  004F                     LIN_init@processData:	
  1709                           ; 1 bytes @ 0xC
  1710                           
  1711  004F                     LIN_getChecksum@checksum:	
  1712                           ; 2 bytes @ 0xC
  1713                           
  1714                           
  1715                           ; 2 bytes @ 0xC
  1716  004F                     	ds	1
  1717  0050                     memset@p:	
  1718                           
  1719                           ; 1 bytes @ 0xD
  1720  0050                     	ds	1
  1721  0051                     ??_LIN_init:	
  1722  0051                     ??_LIN_receivePacket:	
  1723                           ; 1 bytes @ 0xE
  1724                           
  1725  0051                     memset@p1:	
  1726                           ; 1 bytes @ 0xE
  1727                           
  1728                           
  1729                           ; 1 bytes @ 0xE
  1730  0051                     	ds	1
  1731  0052                     ??_LIN_getPacket:	
  1732  0052                     LIN_init@tableLength:	
  1733                           ; 1 bytes @ 0xF
  1734                           
  1735                           
  1736                           ; 1 bytes @ 0xF
  1737  0052                     	ds	1
  1738  0053                     ??_LIN_Master_Initialize:	
  1739  0053                     ??_SYSTEM_Initialize:	
  1740                           ; 1 bytes @ 0x10
  1741                           
  1742  0053                     LIN_getPacket@data:	
  1743                           ; 1 bytes @ 0x10
  1744                           
  1745                           
  1746                           ; 1 bytes @ 0x10
  1747  0053                     	ds	1
  1748  0054                     LIN_getPacket@cmd:	
  1749                           
  1750                           ; 1 bytes @ 0x11
  1751  0054                     	ds	1
  1752  0055                     ??_processLIN:	
  1753                           
  1754                           ; 1 bytes @ 0x12
  1755  0055                     	ds	1
  1756  0056                     ??_LIN_handler:	
  1757                           
  1758                           ; 1 bytes @ 0x13
  1759  0056                     	ds	1
  1760  0057                     ??_main:	
  1761                           
  1762                           ; 1 bytes @ 0x14
  1763  0057                     	ds	1
  1764                           
  1765                           	psect	maintext
  1766  04E6                     __pmaintext:	
  1767 ;;
  1768 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1769 ;;
  1770 ;; *************** function _main *****************
  1771 ;; Defined at:
  1772 ;;		line 49 in file "main.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : B1F/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1788 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1790 ;;Total ram usage:        1 bytes
  1791 ;; Hardware stack levels required when called:   11
  1792 ;; This function calls:
  1793 ;;		_LIN_handler
  1794 ;;		_SYSTEM_Initialize
  1795 ;; This function is called by:
  1796 ;;		Startup code after reset
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _main
  1802  04E6                     _main:	
  1803                           
  1804                           ;main.c: 52: SYSTEM_Initialize();
  1805                           
  1806                           ;incstack = 0
  1807                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1808  04E6  3184  24F8  3184   	fcall	_SYSTEM_Initialize
  1809                           
  1810                           ;main.c: 58: (INTCONbits.GIE = 1);
  1811  04E9  178B               	bsf	11,7	;volatile
  1812                           
  1813                           ;main.c: 61: (INTCONbits.PEIE = 1);
  1814  04EA  170B               	bsf	11,6	;volatile
  1815  04EB                     L1:	
  1816                           
  1817                           ;main.c: 68: RSSI_Data[0] =0xff;
  1818  04EB  30FF               	movlw	255
  1819  04EC  0020               	movlb	0	; select bank0
  1820  04ED  00D7               	movwf	??_main
  1821  04EE  0857               	movf	??_main,w
  1822  04EF  00C1               	movwf	_RSSI_Data
  1823                           
  1824                           ;main.c: 69: RSSI_Data[0] = 0xff;
  1825  04F0  30FF               	movlw	255
  1826  04F1  00D7               	movwf	??_main
  1827  04F2  0857               	movf	??_main,w
  1828  04F3  00C1               	movwf	_RSSI_Data
  1829                           
  1830                           ;main.c: 72: {
  1831                           ;main.c: 73: LIN_handler();
  1832                           
  1833                           ;main.c: 71: while (1)
  1834  04F4  3181  21EB  3184   	fcall	_LIN_handler
  1835  04F7  2CEB               	goto	L1
  1836  04F8                     __end_of_main:	
  1837                           ;main.c: 75: RSSI_Data[0]=0xff;
  1838                           
  1839                           ;main.c: 74: RSSI_Data[0] = 0xff;
  1840                           
  1841                           
  1842                           	psect	text1
  1843  04F8                     __ptext1:	
  1844 ;; *************** function _SYSTEM_Initialize *****************
  1845 ;; Defined at:
  1846 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:   10
  1867 ;; This function calls:
  1868 ;;		_EUSART_Initialize
  1869 ;;		_LIN_Master_Initialize
  1870 ;;		_OSCILLATOR_Initialize
  1871 ;;		_PIN_MANAGER_Initialize
  1872 ;;		_TMR0_Initialize
  1873 ;;		_WDT_Initialize
  1874 ;; This function is called by:
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           
  1880                           ;psect for function _SYSTEM_Initialize
  1881  04F8                     _SYSTEM_Initialize:	
  1882                           
  1883                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1887  04F8  3184  2494  3184   	fcall	_PIN_MANAGER_Initialize
  1888                           
  1889                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1890  04FB  3185  2556  3184   	fcall	_OSCILLATOR_Initialize
  1891                           
  1892                           ;mcc.c: 55: WDT_Initialize();
  1893  04FE  3185  2584  3184   	fcall	_WDT_Initialize
  1894                           
  1895                           ;mcc.c: 56: TMR0_Initialize();
  1896  0501  3184  24AA  3184   	fcall	_TMR0_Initialize
  1897                           
  1898                           ;mcc.c: 57: EUSART_Initialize();
  1899  0504  3182  225A  3184   	fcall	_EUSART_Initialize
  1900                           
  1901                           ;mcc.c: 58: LIN_Master_Initialize();
  1902  0507  3185  2526         	fcall	_LIN_Master_Initialize
  1903  0509  0008               	return
  1904  050A                     __end_of_SYSTEM_Initialize:	
  1905                           
  1906                           	psect	text2
  1907  0584                     __ptext2:	
  1908 ;; *************** function _WDT_Initialize *****************
  1909 ;; Defined at:
  1910 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    6
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_SYSTEM_Initialize
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _WDT_Initialize
  1940  0584                     _WDT_Initialize:	
  1941                           
  1942                           ;mcc.c: 74: WDTCON = 0x16;
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _WDT_Initialize: [wreg]
  1946  0584  3016               	movlw	22
  1947  0585  0021               	movlb	1	; select bank1
  1948  0586  0097               	movwf	23	;volatile
  1949  0587  0008               	return
  1950  0588                     __end_of_WDT_Initialize:	
  1951                           
  1952                           	psect	text3
  1953  04AA                     __ptext3:	
  1954 ;; *************** function _TMR0_Initialize *****************
  1955 ;; Defined at:
  1956 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0, pclath, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1973 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1974 ;;Total ram usage:        1 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    7
  1977 ;; This function calls:
  1978 ;;		_TMR0_SetInterruptHandler
  1979 ;; This function is called by:
  1980 ;;		_SYSTEM_Initialize
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           
  1985                           ;psect for function _TMR0_Initialize
  1986  04AA                     _TMR0_Initialize:	
  1987                           
  1988                           ;tmr0.c: 69: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 & 0x3F));
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1992  04AA  0021               	movlb	1	; select bank1
  1993  04AB  0815               	movf	21,w	;volatile
  1994  04AC  39C0               	andlw	192
  1995  04AD  3812               	iorlw	18
  1996  04AE  0095               	movwf	21	;volatile
  1997                           
  1998                           ;tmr0.c: 72: TMR0 = 0x06;
  1999  04AF  3006               	movlw	6
  2000  04B0  0020               	movlb	0	; select bank0
  2001  04B1  0095               	movwf	21	;volatile
  2002                           
  2003                           ;tmr0.c: 75: timer0ReloadVal= 6;
  2004  04B2  3006               	movlw	6
  2005  04B3  00CD               	movwf	??_TMR0_Initialize
  2006  04B4  084D               	movf	??_TMR0_Initialize,w
  2007  04B5  00E3               	movwf	_timer0ReloadVal	;volatile
  2008                           
  2009                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  2010  04B6  110B               	bcf	11,2	;volatile
  2011                           
  2012                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  2013  04B7  168B               	bsf	11,5	;volatile
  2014                           
  2015                           ;tmr0.c: 84: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2016  04B8  30A2               	movlw	low _TMR0_DefaultInterruptHandler
  2017  04B9  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2018  04BA  3005               	movlw	high _TMR0_DefaultInterruptHandler
  2019  04BB  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2020  04BC  3185  2563         	fcall	_TMR0_SetInterruptHandler
  2021  04BE  0008               	return
  2022  04BF                     __end_of_TMR0_Initialize:	
  2023                           
  2024                           	psect	text4
  2025  0494                     __ptext4:	
  2026 ;; *************** function _PIN_MANAGER_Initialize *****************
  2027 ;; Defined at:
  2028 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    6
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_SYSTEM_Initialize
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _PIN_MANAGER_Initialize
  2058  0494                     _PIN_MANAGER_Initialize:	
  2059                           
  2060                           ;pin_manager.c: 62: LATA = 0x00;
  2061                           
  2062                           ;incstack = 0
  2063                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2064  0494  0022               	movlb	2	; select bank2
  2065  0495  018C               	clrf	12	;volatile
  2066                           
  2067                           ;pin_manager.c: 63: LATC = 0x00;
  2068  0496  018E               	clrf	14	;volatile
  2069                           
  2070                           ;pin_manager.c: 68: TRISA = 0x3F;
  2071  0497  303F               	movlw	63
  2072  0498  0021               	movlb	1	; select bank1
  2073  0499  008C               	movwf	12	;volatile
  2074                           
  2075                           ;pin_manager.c: 69: TRISC = 0x3F;
  2076  049A  303F               	movlw	63
  2077  049B  008E               	movwf	14	;volatile
  2078                           
  2079                           ;pin_manager.c: 74: ANSELC = 0x0F;
  2080  049C  300F               	movlw	15
  2081  049D  0023               	movlb	3	; select bank3
  2082  049E  008E               	movwf	14	;volatile
  2083                           
  2084                           ;pin_manager.c: 75: ANSELA = 0x17;
  2085  049F  3017               	movlw	23
  2086  04A0  008C               	movwf	12	;volatile
  2087                           
  2088                           ;pin_manager.c: 80: WPUA = 0x00;
  2089  04A1  0024               	movlb	4	; select bank4
  2090  04A2  018C               	clrf	12	;volatile
  2091                           
  2092                           ;pin_manager.c: 81: WPUC = 0x00;
  2093  04A3  018E               	clrf	14	;volatile
  2094                           
  2095                           ;pin_manager.c: 82: OPTION_REGbits.nWPUEN = 1;
  2096  04A4  0021               	movlb	1	; select bank1
  2097  04A5  1795               	bsf	21,7	;volatile
  2098                           
  2099                           ;pin_manager.c: 89: APFCON0 = 0x00;
  2100  04A6  0022               	movlb	2	; select bank2
  2101  04A7  019D               	clrf	29	;volatile
  2102                           
  2103                           ;pin_manager.c: 90: APFCON1 = 0x00;
  2104  04A8  019E               	clrf	30	;volatile
  2105  04A9  0008               	return
  2106  04AA                     __end_of_PIN_MANAGER_Initialize:	
  2107                           
  2108                           	psect	text5
  2109  0556                     __ptext5:	
  2110 ;; *************** function _OSCILLATOR_Initialize *****************
  2111 ;; Defined at:
  2112 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    6
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_SYSTEM_Initialize
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _OSCILLATOR_Initialize
  2142  0556                     _OSCILLATOR_Initialize:	
  2143                           
  2144                           ;mcc.c: 64: OSCCON = 0x70;
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2148  0556  3070               	movlw	112
  2149  0557  0021               	movlb	1	; select bank1
  2150  0558  0099               	movwf	25	;volatile
  2151                           
  2152                           ;mcc.c: 66: OSCTUNE = 0x00;
  2153  0559  0198               	clrf	24	;volatile
  2154                           
  2155                           ;mcc.c: 68: BORCON = 0x00;
  2156  055A  0022               	movlb	2	; select bank2
  2157  055B  0196               	clrf	22	;volatile
  2158  055C  0008               	return
  2159  055D                     __end_of_OSCILLATOR_Initialize:	
  2160                           
  2161                           	psect	text6
  2162  0526                     __ptext6:	
  2163 ;; *************** function _LIN_Master_Initialize *****************
  2164 ;; Defined at:
  2165 ;;		line 43 in file "mcc_generated_files/LINDrivers/lin_app.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, pclath, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    9
  2186 ;; This function calls:
  2187 ;;		_LIN_init
  2188 ;; This function is called by:
  2189 ;;		_SYSTEM_Initialize
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _LIN_Master_Initialize
  2195  0526                     _LIN_Master_Initialize:	
  2196                           
  2197                           ;lin_app.c: 45: LIN_init((sizeof(scheduleTable)/sizeof(lin_cmd_packet_t)), scheduleTable
      +                          , processLIN);
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _LIN_Master_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2201  0526  30D4               	movlw	low (_scheduleTable| (0+32768))
  2202  0527  0020               	movlb	0	; select bank0
  2203  0528  00CD               	movwf	LIN_init@table
  2204  0529  3084               	movlw	high (_scheduleTable| (0+32768))
  2205  052A  00CE               	movwf	LIN_init@table+1
  2206  052B  30BF               	movlw	low _processLIN
  2207  052C  00CF               	movwf	LIN_init@processData
  2208  052D  3004               	movlw	high _processLIN
  2209  052E  00D0               	movwf	LIN_init@processData+1
  2210  052F  3003               	movlw	3
  2211  0530  3184  2466         	fcall	_LIN_init
  2212  0532  0008               	return
  2213  0533                     __end_of_LIN_Master_Initialize:	
  2214                           
  2215                           	psect	text7
  2216  0466                     __ptext7:	
  2217 ;; *************** function _LIN_init *****************
  2218 ;; Defined at:
  2219 ;;		line 60 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  tableLength     1    wreg     unsigned char 
  2222 ;;  table           2   10[BANK0 ] const PTR const struct .
  2223 ;;		 -> scheduleTable(18), 
  2224 ;;  processData     2   12[BANK0 ] PTR FTN()void 
  2225 ;;		 -> processLIN(1), 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  tableLength     1   15[BANK0 ] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2237 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2241 ;;Total ram usage:        6 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    8
  2244 ;; This function calls:
  2245 ;;		_LIN_setTimerHandler
  2246 ;;		_LIN_startPeriod
  2247 ;;		_LIN_stopTimer
  2248 ;; This function is called by:
  2249 ;;		_LIN_Master_Initialize
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function _LIN_init
  2255  0466                     _LIN_init:	
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2259                           ;LIN_init@tableLength stored from wreg
  2260  0466  0020               	movlb	0	; select bank0
  2261  0467  00D2               	movwf	LIN_init@tableLength
  2262                           
  2263                           ;lin_master.c: 61: schedule = table;
  2264  0468  084E               	movf	LIN_init@table+1,w
  2265  0469  00DB               	movwf	_schedule+1
  2266  046A  084D               	movf	LIN_init@table,w
  2267  046B  00DA               	movwf	_schedule
  2268                           
  2269                           ;lin_master.c: 62: scheduleLength = tableLength;
  2270  046C  0852               	movf	LIN_init@tableLength,w
  2271  046D  00D1               	movwf	??_LIN_init
  2272  046E  0851               	movf	??_LIN_init,w
  2273  046F  00E5               	movwf	_scheduleLength
  2274                           
  2275                           ;lin_master.c: 63: LIN_processData = processData;
  2276  0470  0850               	movf	LIN_init@processData+1,w
  2277  0471  00DD               	movwf	_LIN_processData+1
  2278  0472  084F               	movf	LIN_init@processData,w
  2279  0473  00DC               	movwf	_LIN_processData
  2280                           
  2281                           ;lin_master.c: 64: LIN_stopTimer();
  2282  0474  3185  2588  3184   	fcall	_LIN_stopTimer
  2283                           
  2284                           ;lin_master.c: 65: LIN_setTimerHandler();
  2285  0477  3185  254E  3184   	fcall	_LIN_setTimerHandler
  2286                           
  2287                           ;lin_master.c: 67: LIN_startPeriod();
  2288  047A  3185  258C         	fcall	_LIN_startPeriod
  2289  047C  0008               	return
  2290  047D                     __end_of_LIN_init:	
  2291                           
  2292                           	psect	text8
  2293  0588                     __ptext8:	
  2294 ;; *************** function _LIN_stopTimer *****************
  2295 ;; Defined at:
  2296 ;;		line 268 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		status,2
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;Total ram usage:        0 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    6
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_LIN_init
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _LIN_stopTimer
  2326  0588                     _LIN_stopTimer:	
  2327                           
  2328                           ;lin_master.c: 270: LIN_timerCallBack = 0;
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _LIN_stopTimer: [status,2]
  2332  0588  0020               	movlb	0	; select bank0
  2333  0589  01B2               	clrf	_LIN_timerCallBack	;volatile
  2334                           
  2335                           ;lin_master.c: 271: LIN_timerRunning = 0;
  2336  058A  01B3               	clrf	_LIN_timerRunning
  2337  058B  0008               	return
  2338  058C                     __end_of_LIN_stopTimer:	
  2339                           
  2340                           	psect	text9
  2341  058C                     __ptext9:	
  2342 ;; *************** function _LIN_startPeriod *****************
  2343 ;; Defined at:
  2344 ;;		line 274 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		None
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    6
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_LIN_init
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _LIN_startPeriod
  2374  058C                     _LIN_startPeriod:	
  2375                           
  2376                           ;lin_master.c: 275: LIN_enablePeriodTx = 1;
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in _LIN_startPeriod: []
  2380  058C  0020               	movlb	0	; select bank0
  2381  058D  01E4               	clrf	_LIN_enablePeriodTx
  2382  058E  0AE4               	incf	_LIN_enablePeriodTx,f
  2383  058F  0008               	return
  2384  0590                     __end_of_LIN_startPeriod:	
  2385                           
  2386                           	psect	text10
  2387  054E                     __ptext10:	
  2388 ;; *************** function _LIN_setTimerHandler *****************
  2389 ;; Defined at:
  2390 ;;		line 264 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2408 ;;Total ram usage:        0 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    7
  2411 ;; This function calls:
  2412 ;;		_TMR0_SetInterruptHandler
  2413 ;; This function is called by:
  2414 ;;		_LIN_init
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function _LIN_setTimerHandler
  2420  054E                     _LIN_setTimerHandler:	
  2421                           
  2422                           ;lin_master.c: 265: TMR0_SetInterruptHandler(LIN_timerHandler);
  2423                           
  2424                           ;incstack = 0
  2425                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  2426  054E  30F5               	movlw	low _LIN_timerHandler
  2427  054F  0020               	movlb	0	; select bank0
  2428  0550  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2429  0551  3003               	movlw	high _LIN_timerHandler
  2430  0552  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2431  0553  3185  2563         	fcall	_TMR0_SetInterruptHandler
  2432  0555  0008               	return
  2433  0556                     __end_of_LIN_setTimerHandler:	
  2434                           
  2435                           	psect	text11
  2436  0563                     __ptext11:	
  2437 ;; *************** function _TMR0_SetInterruptHandler *****************
  2438 ;; Defined at:
  2439 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  InterruptHan    2    8[BANK0 ] PTR FTN()void 
  2442 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2457 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2458 ;;Total ram usage:        2 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    6
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_LIN_setTimerHandler
  2465 ;;		_TMR0_Initialize
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _TMR0_SetInterruptHandler
  2471  0563                     _TMR0_SetInterruptHandler:	
  2472                           
  2473                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2477  0563  0020               	movlb	0	; select bank0
  2478  0564  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2479  0565  00D9               	movwf	_TMR0_InterruptHandler+1
  2480  0566  084B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2481  0567  00D8               	movwf	_TMR0_InterruptHandler
  2482  0568  0008               	return
  2483  0569                     __end_of_TMR0_SetInterruptHandler:	
  2484                           
  2485                           	psect	text12
  2486  025A                     __ptext12:	
  2487 ;; *************** function _EUSART_Initialize *****************
  2488 ;; Defined at:
  2489 ;;		line 85 in file "mcc_generated_files/eusart.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;Total ram usage:        1 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    7
  2510 ;; This function calls:
  2511 ;;		_EUSART_SetErrorHandler
  2512 ;;		_EUSART_SetFramingErrorHandler
  2513 ;;		_EUSART_SetOverrunErrorHandler
  2514 ;;		_EUSART_SetRxInterruptHandler
  2515 ;;		_EUSART_SetTxInterruptHandler
  2516 ;; This function is called by:
  2517 ;;		_SYSTEM_Initialize
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _EUSART_Initialize
  2523  025A                     _EUSART_Initialize:	
  2524                           
  2525                           ;eusart.c: 88: PIE1bits.RCIE = 0;
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2529  025A  0021               	movlb	1	; select bank1
  2530  025B  1291               	bcf	17,5	;volatile
  2531                           
  2532                           ;eusart.c: 89: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2533  025C  309D               	movlw	low _EUSART_Receive_ISR
  2534  025D  0020               	movlb	0	; select bank0
  2535  025E  00CB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  2536  025F  3002               	movlw	high _EUSART_Receive_ISR
  2537  0260  00CC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  2538  0261  3185  256F  3182   	fcall	_EUSART_SetRxInterruptHandler
  2539                           
  2540                           ;eusart.c: 90: PIE1bits.TXIE = 0;
  2541  0264  0021               	movlb	1	; select bank1
  2542  0265  1211               	bcf	17,4	;volatile
  2543                           
  2544                           ;eusart.c: 91: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  2545  0266  3013               	movlw	low _EUSART_Transmit_ISR
  2546  0267  0020               	movlb	0	; select bank0
  2547  0268  00CB               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  2548  0269  3004               	movlw	high _EUSART_Transmit_ISR
  2549  026A  00CC               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  2550  026B  3185  2569  3182   	fcall	_EUSART_SetTxInterruptHandler
  2551                           
  2552                           ;eusart.c: 95: BAUDCON = 0x08;
  2553  026E  3008               	movlw	8
  2554  026F  0023               	movlb	3	; select bank3
  2555  0270  009F               	movwf	31	;volatile
  2556                           
  2557                           ;eusart.c: 98: RCSTA = 0x90;
  2558  0271  3090               	movlw	144
  2559  0272  009D               	movwf	29	;volatile
  2560                           
  2561                           ;eusart.c: 101: TXSTA = 0x24;
  2562  0273  3024               	movlw	36
  2563  0274  009E               	movwf	30	;volatile
  2564                           
  2565                           ;eusart.c: 104: SPBRGL = 0xCF;
  2566  0275  30CF               	movlw	207
  2567  0276  009B               	movwf	27	;volatile
  2568                           
  2569                           ;eusart.c: 107: SPBRGH = 0x00;
  2570  0277  019C               	clrf	28	;volatile
  2571                           
  2572                           ;eusart.c: 110: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  2573  0278  30A3               	movlw	low _EUSART_DefaultFramingErrorHandler
  2574  0279  0020               	movlb	0	; select bank0
  2575  027A  00CB               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2576  027B  3005               	movlw	high _EUSART_DefaultFramingErrorHandler
  2577  027C  00CC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2578  027D  3185  253C  3182   	fcall	_EUSART_SetFramingErrorHandler
  2579                           
  2580                           ;eusart.c: 111: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  2581  0280  3094               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2582  0281  0020               	movlb	0	; select bank0
  2583  0282  00CB               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2584  0283  3005               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2585  0284  00CC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2586  0285  3185  2533  3182   	fcall	_EUSART_SetOverrunErrorHandler
  2587                           
  2588                           ;eusart.c: 112: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  2589  0288  309E               	movlw	low _EUSART_DefaultErrorHandler
  2590  0289  0020               	movlb	0	; select bank0
  2591  028A  00CB               	movwf	EUSART_SetErrorHandler@interruptHandler
  2592  028B  3005               	movlw	high _EUSART_DefaultErrorHandler
  2593  028C  00CC               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2594  028D  3185  2545         	fcall	_EUSART_SetErrorHandler
  2595                           
  2596                           ;eusart.c: 114: eusartRxLastError.status = 0;
  2597  028F  0020               	movlb	0	; select bank0
  2598  0290  01A8               	clrf	_eusartRxLastError	;volatile
  2599                           
  2600                           ;eusart.c: 117: eusartTxHead = 0;
  2601  0291  01AD               	clrf	_eusartTxHead	;volatile
  2602                           
  2603                           ;eusart.c: 118: eusartTxTail = 0;
  2604  0292  01AC               	clrf	_eusartTxTail	;volatile
  2605                           
  2606                           ;eusart.c: 119: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2607  0293  3008               	movlw	8
  2608  0294  00CD               	movwf	??_EUSART_Initialize
  2609  0295  084D               	movf	??_EUSART_Initialize,w
  2610  0296  00E2               	movwf	_eusartTxBufferRemaining	;volatile
  2611                           
  2612                           ;eusart.c: 121: eusartRxHead = 0;
  2613  0297  01AB               	clrf	_eusartRxHead	;volatile
  2614                           
  2615                           ;eusart.c: 122: eusartRxTail = 0;
  2616  0298  01AA               	clrf	_eusartRxTail	;volatile
  2617                           
  2618                           ;eusart.c: 123: eusartRxCount = 0;
  2619  0299  01A9               	clrf	_eusartRxCount	;volatile
  2620                           
  2621                           ;eusart.c: 126: PIE1bits.RCIE = 1;
  2622  029A  0021               	movlb	1	; select bank1
  2623  029B  1691               	bsf	17,5	;volatile
  2624  029C  0008               	return
  2625  029D                     __end_of_EUSART_Initialize:	
  2626                           
  2627                           	psect	text13
  2628  0569                     __ptext13:	
  2629 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2630 ;; Defined at:
  2631 ;;		line 273 in file "mcc_generated_files/eusart.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2634 ;;		 -> EUSART_Transmit_ISR(1), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;Total ram usage:        2 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    6
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_EUSART_Initialize
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _EUSART_SetTxInterruptHandler
  2662  0569                     _EUSART_SetTxInterruptHandler:	
  2663                           
  2664                           ;eusart.c: 274: EUSART_TxDefaultInterruptHandler = interruptHandler;
  2665                           
  2666                           ;incstack = 0
  2667                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2668  0569  0020               	movlb	0	; select bank0
  2669  056A  084C               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  2670  056B  00E1               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2671  056C  084B               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  2672  056D  00E0               	movwf	_EUSART_TxDefaultInterruptHandler
  2673  056E  0008               	return
  2674  056F                     __end_of_EUSART_SetTxInterruptHandler:	
  2675                           
  2676                           	psect	text14
  2677  056F                     __ptext14:	
  2678 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2679 ;; Defined at:
  2680 ;;		line 277 in file "mcc_generated_files/eusart.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2683 ;;		 -> EUSART_Receive_ISR(1), 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2699 ;;Total ram usage:        2 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    6
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_EUSART_Initialize
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _EUSART_SetRxInterruptHandler
  2711  056F                     _EUSART_SetRxInterruptHandler:	
  2712                           
  2713                           ;eusart.c: 278: EUSART_RxDefaultInterruptHandler = interruptHandler;
  2714                           
  2715                           ;incstack = 0
  2716                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2717  056F  0020               	movlb	0	; select bank0
  2718  0570  084C               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  2719  0571  00DF               	movwf	_EUSART_RxDefaultInterruptHandler+1
  2720  0572  084B               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  2721  0573  00DE               	movwf	_EUSART_RxDefaultInterruptHandler
  2722  0574  0008               	return
  2723  0575                     __end_of_EUSART_SetRxInterruptHandler:	
  2724                           
  2725                           	psect	text15
  2726  0533                     __ptext15:	
  2727 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2728 ;; Defined at:
  2729 ;;		line 265 in file "mcc_generated_files/eusart.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2732 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;Total ram usage:        2 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    6
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_EUSART_Initialize
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _EUSART_SetOverrunErrorHandler
  2760  0533                     _EUSART_SetOverrunErrorHandler:	
  2761                           
  2762                           ;eusart.c: 266: EUSART_OverrunErrorHandler = interruptHandler;
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2766  0533  0020               	movlb	0	; select bank0
  2767  0534  084C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2768  0535  0021               	movlb	1	; select bank1
  2769  0536  00D0               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  2770  0537  0020               	movlb	0	; select bank0
  2771  0538  084B               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2772  0539  0021               	movlb	1	; select bank1
  2773  053A  00CF               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2774  053B  0008               	return
  2775  053C                     __end_of_EUSART_SetOverrunErrorHandler:	
  2776                           
  2777                           	psect	text16
  2778  053C                     __ptext16:	
  2779 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2780 ;; Defined at:
  2781 ;;		line 261 in file "mcc_generated_files/eusart.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2784 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;Total ram usage:        2 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    6
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_EUSART_Initialize
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _EUSART_SetFramingErrorHandler
  2812  053C                     _EUSART_SetFramingErrorHandler:	
  2813                           
  2814                           ;eusart.c: 262: EUSART_FramingErrorHandler = interruptHandler;
  2815                           
  2816                           ;incstack = 0
  2817                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2818  053C  0020               	movlb	0	; select bank0
  2819  053D  084C               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2820  053E  0021               	movlb	1	; select bank1
  2821  053F  00D2               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  2822  0540  0020               	movlb	0	; select bank0
  2823  0541  084B               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2824  0542  0021               	movlb	1	; select bank1
  2825  0543  00D1               	movwf	_EUSART_FramingErrorHandler^(0+128)
  2826  0544  0008               	return
  2827  0545                     __end_of_EUSART_SetFramingErrorHandler:	
  2828                           
  2829                           	psect	text17
  2830  0545                     __ptext17:	
  2831 ;; *************** function _EUSART_SetErrorHandler *****************
  2832 ;; Defined at:
  2833 ;;		line 269 in file "mcc_generated_files/eusart.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  2836 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2851 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    6
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_EUSART_Initialize
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function _EUSART_SetErrorHandler
  2864  0545                     _EUSART_SetErrorHandler:	
  2865                           
  2866                           ;eusart.c: 270: EUSART_ErrorHandler = interruptHandler;
  2867                           
  2868                           ;incstack = 0
  2869                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2870  0545  0020               	movlb	0	; select bank0
  2871  0546  084C               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2872  0547  0021               	movlb	1	; select bank1
  2873  0548  00CE               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2874  0549  0020               	movlb	0	; select bank0
  2875  054A  084B               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2876  054B  0021               	movlb	1	; select bank1
  2877  054C  00CD               	movwf	_EUSART_ErrorHandler^(0+128)
  2878  054D  0008               	return
  2879  054E                     __end_of_EUSART_SetErrorHandler:	
  2880                           
  2881                           	psect	text18
  2882  01EB                     __ptext18:	
  2883 ;; *************** function _LIN_handler *****************
  2884 ;; Defined at:
  2885 ;;		line 106 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      enum E119
  2892 ;; Registers used:
  2893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;Total ram usage:        1 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    9
  2906 ;; This function calls:
  2907 ;;		Absolute function
  2908 ;;		_EUSART_is_rx_ready
  2909 ;;		_LIN_disableRx
  2910 ;;		_LIN_enableRx
  2911 ;;		_LIN_receivePacket
  2912 ;;		_LIN_sendPacket
  2913 ;;		_LIN_startTimer
  2914 ;;		_memset
  2915 ;;		_processLIN
  2916 ;; This function is called by:
  2917 ;;		_main
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           
  2922                           ;psect for function _LIN_handler
  2923  01EB                     _LIN_handler:	
  2924                           
  2925                           ;lin_master.c: 107: static lin_state_t LIN_state = LIN_IDLE;
  2926                           ;lin_master.c: 110: switch(LIN_state){
  2927                           
  2928                           ;incstack = 0
  2929                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2930  01EB  2A4A               	goto	l2459
  2931  01EC                     l2417:	
  2932                           ;lin_master.c: 111: case LIN_IDLE:
  2933                           
  2934                           
  2935                           ;lin_master.c: 112: if(LIN_txReady == 1){
  2936  01EC  0020               	movlb	0	; select bank0
  2937  01ED  0335               	decf	_LIN_txReady,w
  2938  01EE  1D03               	btfss	3,2
  2939  01EF  0008               	return
  2940                           
  2941                           ;lin_master.c: 113: LIN_txReady = 0;
  2942  01F0  01B5               	clrf	_LIN_txReady
  2943                           
  2944                           ;lin_master.c: 114: LIN_disableRx();
  2945  01F1  3185  257F  3181   	fcall	_LIN_disableRx
  2946                           
  2947                           ;lin_master.c: 116: LIN_sendPacket();
  2948  01F4  3183  2303  3181   	fcall	_LIN_sendPacket
  2949                           
  2950                           ;lin_master.c: 117: memset(LIN_packet.rawPacket, 0, sizeof(LIN_packet.rawPacket));
  2951  01F7  3000               	movlw	0
  2952  01F8  0020               	movlb	0	; select bank0
  2953  01F9  00CB               	movwf	memset@c
  2954  01FA  00CC               	movwf	memset@c+1
  2955  01FB  300B               	movlw	11
  2956  01FC  00CD               	movwf	memset@n
  2957  01FD  3000               	movlw	0
  2958  01FE  00CE               	movwf	memset@n+1
  2959  01FF  3036               	movlw	(low (_LIN_packet| 0))& (0+255)
  2960  0200  3184  2430         	fcall	_memset
  2961                           
  2962                           ;lin_master.c: 118: LIN_state = LIN_TX_IP;
  2963  0202  0020               	movlb	0	; select bank0
  2964  0203  01B0               	clrf	LIN_handler@LIN_state
  2965  0204  0AB0               	incf	LIN_handler@LIN_state,f
  2966                           
  2967                           ;lin_master.c: 121: }
  2968                           ;lin_master.c: 122: break;
  2969                           
  2970                           ;lin_master.c: 119: } else {
  2971  0205  0008               	return
  2972  0206                     l124:	
  2973                           ;lin_master.c: 123: case LIN_TX_IP:
  2974                           
  2975                           
  2976                           ;lin_master.c: 125: if(PIE1bits.TXIE == 0){
  2977  0206  0021               	movlb	1	; select bank1
  2978  0207  1A11               	btfsc	17,4	;volatile
  2979  0208  0008               	return
  2980                           
  2981                           ;lin_master.c: 126: if(TXSTAbits.TRMT == 1){
  2982  0209  0023               	movlb	3	; select bank3
  2983  020A  1C9E               	btfss	30,1	;volatile
  2984  020B  0008               	return
  2985                           
  2986                           ;lin_master.c: 128: if(LIN_rxPacket.rxLength > 0){
  2987  020C  0021               	movlb	1	; select bank1
  2988  020D  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  2989  020E  1903               	btfsc	3,2
  2990  020F  2A1C               	goto	l2437
  2991                           
  2992                           ;lin_master.c: 130: LIN_startTimer(LIN_rxPacket.timeout);
  2993  0210  083B               	movf	(_LIN_rxPacket^(0+128)+11),w
  2994  0211  3185  250A  3181   	fcall	_LIN_startTimer
  2995                           
  2996                           ;lin_master.c: 131: LIN_enableRx();
  2997  0214  3185  257A         	fcall	_LIN_enableRx
  2998                           
  2999                           ;lin_master.c: 132: LIN_state = LIN_RX_IP;
  3000  0216  3002               	movlw	2
  3001  0217  0020               	movlb	0	; select bank0
  3002  0218  00D6               	movwf	??_LIN_handler
  3003  0219  0856               	movf	??_LIN_handler,w
  3004  021A  00B0               	movwf	LIN_handler@LIN_state
  3005                           
  3006                           ;lin_master.c: 133: } else {
  3007  021B  0008               	return
  3008  021C                     l2437:	
  3009                           
  3010                           ;lin_master.c: 134: LIN_state = LIN_IDLE;
  3011  021C  0020               	movlb	0	; select bank0
  3012  021D  01B0               	clrf	LIN_handler@LIN_state
  3013                           
  3014                           ;lin_master.c: 135: }
  3015                           ;lin_master.c: 136: }
  3016                           ;lin_master.c: 137: }
  3017                           ;lin_master.c: 138: break;
  3018  021E  0008               	return
  3019  021F                     l2439:	
  3020                           ;lin_master.c: 139: case LIN_RX_IP:
  3021                           
  3022                           
  3023                           ;lin_master.c: 141: if(LIN_timerRunning == 0){
  3024  021F  0833               	movf	_LIN_timerRunning,w
  3025  0220  1D03               	btfss	3,2
  3026  0221  2A2E               	goto	l2445
  3027                           
  3028                           ;lin_master.c: 143: LIN_state = LIN_IDLE;
  3029  0222  01B0               	clrf	LIN_handler@LIN_state
  3030                           
  3031                           ;lin_master.c: 144: memset(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3032  0223  3000               	movlw	0
  3033  0224  00CB               	movwf	memset@c
  3034  0225  00CC               	movwf	memset@c+1
  3035  0226  300C               	movlw	12
  3036  0227  00CD               	movwf	memset@n
  3037  0228  3000               	movlw	0
  3038  0229  00CE               	movwf	memset@n+1
  3039  022A  30B0               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3040  022B  3184  2430         	fcall	_memset
  3041                           
  3042                           ;lin_master.c: 145: } else if(EUSART_is_rx_ready()){
  3043  022D  0008               	return
  3044  022E                     l2445:	
  3045  022E  3185  259B  3181   	fcall	_EUSART_is_rx_ready
  3046  0231  3A00               	xorlw	0
  3047  0232  1903               	skipnz
  3048  0233  0008               	return
  3049                           
  3050                           ;lin_master.c: 146: if(LIN_receivePacket() == 1){
  3051  0234  3182  22D3  3181   	fcall	_LIN_receivePacket
  3052  0237  3A01               	xorlw	1
  3053  0238  1D03               	skipz
  3054  0239  0008               	return
  3055                           
  3056                           ;lin_master.c: 148: LIN_disableRx();
  3057  023A  3185  257F         	fcall	_LIN_disableRx
  3058                           
  3059                           ;lin_master.c: 149: LIN_state = LIN_RX_RDY;
  3060  023C  3003               	movlw	3
  3061  023D  0020               	movlb	0	; select bank0
  3062  023E  00D6               	movwf	??_LIN_handler
  3063  023F  0856               	movf	??_LIN_handler,w
  3064  0240  00B0               	movwf	LIN_handler@LIN_state
  3065                           
  3066                           ;lin_master.c: 150: }
  3067                           ;lin_master.c: 151: }
  3068                           ;lin_master.c: 152: break;
  3069  0241  0008               	return
  3070  0242                     l2453:	
  3071                           ;lin_master.c: 153: case LIN_RX_RDY:
  3072                           
  3073                           
  3074                           ;lin_master.c: 155: LIN_processData();
  3075  0242  085D               	movf	_LIN_processData+1,w
  3076  0243  008A               	movwf	10
  3077  0244  085C               	movf	_LIN_processData,w
  3078  0245  000A               	callw
  3079  0246  3181               	pagesel	$
  3080                           
  3081                           ;lin_master.c: 156: LIN_state = LIN_IDLE;
  3082  0247  0020               	movlb	0	; select bank0
  3083  0248  01B0               	clrf	LIN_handler@LIN_state
  3084                           
  3085                           ;lin_master.c: 158: }
  3086                           
  3087                           ;lin_master.c: 157: break;
  3088  0249  0008               	return
  3089  024A                     l2459:	
  3090  024A  0020               	movlb	0	; select bank0
  3091  024B  0830               	movf	LIN_handler@LIN_state,w
  3092                           
  3093                           ; Switch size 1, requested type "space"
  3094                           ; Number of cases is 4, Range of values is 0 to 3
  3095                           ; switch strategies available:
  3096                           ; Name         Instructions Cycles
  3097                           ; simple_byte           13     7 (average)
  3098                           ; direct_byte           14     6 (fixed)
  3099                           ; jumptable            260     6 (fixed)
  3100                           ;	Chosen strategy is simple_byte
  3101  024C  3A00               	xorlw	0	; case 0
  3102  024D  1903               	skipnz
  3103  024E  29EC               	goto	l2417
  3104  024F  3A01               	xorlw	1	; case 1
  3105  0250  1903               	skipnz
  3106  0251  2A06               	goto	l124
  3107  0252  3A03               	xorlw	3	; case 2
  3108  0253  1903               	skipnz
  3109  0254  2A1F               	goto	l2439
  3110  0255  3A01               	xorlw	1	; case 3
  3111  0256  1903               	skipnz
  3112  0257  2A42               	goto	l2453
  3113  0258  2A59               	goto	l135
  3114  0259                     l135:	
  3115                           ;lin_master.c: 159: return LIN_state;
  3116                           ;	Return value of _LIN_handler is never used
  3117                           
  3118  0259  0008               	return
  3119  025A                     __end_of_LIN_handler:	
  3120                           
  3121                           	psect	text19
  3122  04BF                     __ptext19:	
  3123 ;; *************** function _processLIN *****************
  3124 ;; Defined at:
  3125 ;;		line 49 in file "mcc_generated_files/LINDrivers/lin_app.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  tempRxData      8    0[BANK1 ] unsigned char [8]
  3130 ;;  cmd             1    8[BANK1 ] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;Total ram usage:       10 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    8
  3147 ;; This function calls:
  3148 ;;		_LIN_getPacket
  3149 ;; This function is called by:
  3150 ;;		_LIN_Master_Initialize
  3151 ;;		_LIN_handler
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _processLIN
  3157  04BF                     _processLIN:	
  3158                           
  3159                           ;lin_app.c: 50: uint8_t tempRxData[8];
  3160                           ;lin_app.c: 51: uint8_t cmd;
  3161                           ;lin_app.c: 53: cmd = LIN_getPacket(tempRxData);
  3162                           
  3163                           ;incstack = 0
  3164                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3165  04BF  30C4               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3166  04C0  3183  23AC  3184   	fcall	_LIN_getPacket
  3167  04C3  0020               	movlb	0	; select bank0
  3168  04C4  00D5               	movwf	??_processLIN
  3169  04C5  0855               	movf	??_processLIN,w
  3170  04C6  0021               	movlb	1	; select bank1
  3171  04C7  00CC               	movwf	processLIN@cmd^(0+128)
  3172                           
  3173                           ;lin_app.c: 63: }
  3174                           
  3175                           ;lin_app.c: 62: break;
  3176                           
  3177                           ;lin_app.c: 61: default:
  3178                           
  3179                           ;lin_app.c: 60: break;
  3180                           
  3181                           ;lin_app.c: 59: case LFRX:
  3182                           
  3183                           ;lin_app.c: 58: break;
  3184                           
  3185                           ;lin_app.c: 57: case RSSI:
  3186                           
  3187                           ;lin_app.c: 56: break;
  3188                           
  3189                           ;lin_app.c: 55: case UNLOCK:
  3190                           
  3191                           ;lin_app.c: 54: switch(cmd){
  3192  04C8  084C               	movf	processLIN@cmd^(0+128),w
  3193                           
  3194                           ; Switch size 1, requested type "space"
  3195                           ; Number of cases is 3, Range of values is 0 to 2
  3196                           ; switch strategies available:
  3197                           ; Name         Instructions Cycles
  3198                           ; simple_byte           10     6 (average)
  3199                           ; direct_byte           12     6 (fixed)
  3200                           ; jumptable            260     6 (fixed)
  3201                           ;	Chosen strategy is simple_byte
  3202  04C9  3A00               	xorlw	0	; case 0
  3203  04CA  1903               	skipnz
  3204  04CB  2CD3               	goto	l26
  3205  04CC  3A01               	xorlw	1	; case 1
  3206  04CD  1903               	skipnz
  3207  04CE  2CD3               	goto	l26
  3208  04CF  3A03               	xorlw	3	; case 2
  3209  04D0  1903               	skipnz
  3210  04D1  2CD3               	goto	l26
  3211  04D2  2CD3               	goto	l26
  3212  04D3                     l26:	
  3213  04D3  0008               	return
  3214  04D4                     __end_of_processLIN:	
  3215                           
  3216                           	psect	text20
  3217  03AC                     __ptext20:	
  3218 ;; *************** function _LIN_getPacket *****************
  3219 ;; Defined at:
  3220 ;;		line 201 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  data            1    wreg     PTR unsigned char 
  3223 ;;		 -> processLIN@tempRxData(8), 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  data            1   16[BANK0 ] PTR unsigned char 
  3226 ;;		 -> processLIN@tempRxData(8), 
  3227 ;;  cmd             1   17[BANK0 ] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      unsigned char 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3240 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3241 ;;Total ram usage:        3 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    7
  3244 ;; This function calls:
  3245 ;;		_memset
  3246 ;; This function is called by:
  3247 ;;		_processLIN
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _LIN_getPacket
  3253  03AC                     _LIN_getPacket:	
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _LIN_getPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3257                           ;LIN_getPacket@data stored from wreg
  3258  03AC  0020               	movlb	0	; select bank0
  3259  03AD  00D3               	movwf	LIN_getPacket@data
  3260                           
  3261                           ;lin_master.c: 202: uint8_t cmd = LIN_rxPacket.cmd & 0x3F;
  3262  03AE  0021               	movlb	1	; select bank1
  3263  03AF  0830               	movf	_LIN_rxPacket^(0+128),w
  3264  03B0  393F               	andlw	63
  3265  03B1  0020               	movlb	0	; select bank0
  3266  03B2  00D2               	movwf	??_LIN_getPacket
  3267  03B3  0852               	movf	??_LIN_getPacket,w
  3268  03B4  00D4               	movwf	LIN_getPacket@cmd
  3269                           
  3270                           ;lin_master.c: 204: __builtin_memcpy(data,LIN_rxPacket.data,sizeof(LIN_rxPacket.data));
  3271  03B5  0853               	movf	LIN_getPacket@data,w
  3272  03B6  0086               	movwf	6
  3273  03B7  0187               	clrf	7
  3274  03B8  3002               	movlw	2
  3275  03B9  3EB0               	addlw	(low (_LIN_rxPacket| 0))& (0+255)
  3276  03BA  0084               	movwf	4
  3277  03BB  0185               	clrf	5
  3278  03BC  3008               	movlw	8
  3279  03BD  0020               	movlb	0	; select bank0
  3280  03BE  00D2               	movwf	??_LIN_getPacket
  3281  03BF                     u158m0:	
  3282  03BF  0012               	moviw fsr0++
  3283  03C0  001E               	movwi fsr1++
  3284  03C1  0BD2               	decfsz	??_LIN_getPacket,f
  3285  03C2  2BBF               	goto	u158m0
  3286                           
  3287                           ;lin_master.c: 205: memset(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3288  03C3  3000               	movlw	0
  3289  03C4  0020               	movlb	0	; select bank0
  3290  03C5  00CB               	movwf	memset@c
  3291  03C6  00CC               	movwf	memset@c+1
  3292  03C7  300C               	movlw	12
  3293  03C8  00CD               	movwf	memset@n
  3294  03C9  3000               	movlw	0
  3295  03CA  00CE               	movwf	memset@n+1
  3296  03CB  30B0               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3297  03CC  3184  2430         	fcall	_memset
  3298                           
  3299                           ;lin_master.c: 207: return cmd;
  3300  03CE  0020               	movlb	0	; select bank0
  3301  03CF  0854               	movf	LIN_getPacket@cmd,w
  3302  03D0  0008               	return
  3303  03D1                     __end_of_LIN_getPacket:	
  3304                           
  3305                           	psect	text21
  3306  0430                     __ptext21:	
  3307 ;; *************** function _memset *****************
  3308 ;; Defined at:
  3309 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  p1              1    wreg     PTR void 
  3312 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3313 ;;  c               2    8[BANK0 ] int 
  3314 ;;  n               2   10[BANK0 ] unsigned int 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  p1              1   14[BANK0 ] PTR void 
  3317 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3318 ;;  p               1   13[BANK0 ] PTR unsigned char 
  3319 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      PTR void 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3329 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;Total ram usage:        7 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    6
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_LIN_handler
  3340 ;;		_LIN_getPacket
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           
  3345                           ;psect for function _memset
  3346  0430                     _memset:	
  3347                           
  3348                           ;incstack = 0
  3349                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3350                           ;memset@p1 stored from wreg
  3351  0430  0020               	movlb	0	; select bank0
  3352  0431  00D1               	movwf	memset@p1
  3353  0432  0851               	movf	memset@p1,w
  3354  0433  00CF               	movwf	??_memset
  3355  0434  084F               	movf	??_memset,w
  3356  0435  00D0               	movwf	memset@p
  3357  0436                     l1943:	
  3358  0436  3001               	movlw	1
  3359  0437  02CD               	subwf	memset@n,f
  3360  0438  3000               	movlw	0
  3361  0439  3BCE               	subwfb	memset@n+1,f
  3362  043A  0A4D               	incf	memset@n,w
  3363  043B  1903               	btfsc	3,2
  3364  043C  0A4E               	incf	memset@n+1,w
  3365  043D  1903               	btfsc	3,2
  3366  043E  0008               	return
  3367  043F  084B               	movf	memset@c,w
  3368  0440  00CF               	movwf	??_memset
  3369  0441  0850               	movf	memset@p,w
  3370  0442  0086               	movwf	6
  3371  0443  0187               	clrf	7
  3372  0444  084F               	movf	??_memset,w
  3373  0445  0081               	movwf	1
  3374  0446  3001               	movlw	1
  3375  0447  00CF               	movwf	??_memset
  3376  0448  084F               	movf	??_memset,w
  3377  0449  07D0               	addwf	memset@p,f
  3378  044A  2C36               	goto	l1943
  3379  044B                     __end_of_memset:	
  3380                           ;	Return value of _memset is never used
  3381                           
  3382                           
  3383                           	psect	text22
  3384  050A                     __ptext22:	
  3385 ;; *************** function _LIN_startTimer *****************
  3386 ;; Defined at:
  3387 ;;		line 241 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  timeout         1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  timeout         1   10[BANK0 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;Total ram usage:        2 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    7
  3408 ;; This function calls:
  3409 ;;		_TMR0_WriteTimer
  3410 ;; This function is called by:
  3411 ;;		_LIN_handler
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function _LIN_startTimer
  3417  050A                     _LIN_startTimer:	
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  3421                           ;LIN_startTimer@timeout stored from wreg
  3422  050A  0020               	movlb	0	; select bank0
  3423  050B  00CD               	movwf	LIN_startTimer@timeout
  3424                           
  3425                           ;lin_master.c: 242: LIN_timeout = timeout;
  3426  050C  084D               	movf	LIN_startTimer@timeout,w
  3427  050D  00CC               	movwf	??_LIN_startTimer
  3428  050E  084C               	movf	??_LIN_startTimer,w
  3429  050F  00E6               	movwf	_LIN_timeout
  3430                           
  3431                           ;lin_master.c: 243: TMR0_WriteTimer(0);
  3432  0510  3000               	movlw	0
  3433  0511  3185  2575         	fcall	_TMR0_WriteTimer
  3434                           
  3435                           ;lin_master.c: 244: __nop();
  3436  0513  0000               	nop
  3437                           
  3438                           ;lin_master.c: 245: LIN_timerRunning = 1;
  3439  0514  0020               	movlb	0	; select bank0
  3440  0515  01B3               	clrf	_LIN_timerRunning
  3441  0516  0AB3               	incf	_LIN_timerRunning,f
  3442  0517  0008               	return
  3443  0518                     __end_of_LIN_startTimer:	
  3444                           
  3445                           	psect	text23
  3446  0575                     __ptext23:	
  3447 ;; *************** function _TMR0_WriteTimer *****************
  3448 ;; Defined at:
  3449 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  timerVal        1    wreg     unsigned char 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  timerVal        1    8[BANK0 ] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3464 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3466 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;Total ram usage:        1 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    6
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_LIN_startTimer
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _TMR0_WriteTimer
  3479  0575                     _TMR0_WriteTimer:	
  3480                           
  3481                           ;incstack = 0
  3482                           ; Regs used in _TMR0_WriteTimer: [wreg]
  3483                           ;TMR0_WriteTimer@timerVal stored from wreg
  3484  0575  0020               	movlb	0	; select bank0
  3485  0576  00CB               	movwf	TMR0_WriteTimer@timerVal
  3486                           
  3487                           ;tmr0.c: 99: TMR0 = timerVal;
  3488  0577  084B               	movf	TMR0_WriteTimer@timerVal,w
  3489  0578  0095               	movwf	21	;volatile
  3490  0579  0008               	return
  3491  057A                     __end_of_TMR0_WriteTimer:	
  3492                           
  3493                           	psect	text24
  3494  0303                     __ptext24:	
  3495 ;; *************** function _LIN_sendPacket *****************
  3496 ;; Defined at:
  3497 ;;		line 180 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  i               1   11[BANK0 ] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;Total ram usage:        2 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    7
  3518 ;; This function calls:
  3519 ;;		_EUSART_Write
  3520 ;;		_LIN_sendBreak
  3521 ;; This function is called by:
  3522 ;;		_LIN_handler
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _LIN_sendPacket
  3528  0303                     _LIN_sendPacket:	
  3529                           
  3530                           ;lin_master.c: 183: LIN_sendBreak();
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3534  0303  3185  2598  3183   	fcall	_LIN_sendBreak
  3535                           
  3536                           ;lin_master.c: 184: EUSART_Write(0x00);
  3537  0306  3000               	movlw	0
  3538  0307  3183  23D1  3183   	fcall	_EUSART_Write
  3539                           
  3540                           ;lin_master.c: 186: EUSART_Write(0x55);
  3541  030A  3055               	movlw	85
  3542  030B  3183  23D1  3183   	fcall	_EUSART_Write
  3543                           
  3544                           ;lin_master.c: 188: EUSART_Write(LIN_packet.PID);
  3545  030E  0020               	movlb	0	; select bank0
  3546  030F  0836               	movf	_LIN_packet,w
  3547  0310  3183  23D1  3183   	fcall	_EUSART_Write
  3548                           
  3549                           ;lin_master.c: 190: if(LIN_rxPacket.rxLength == 0){
  3550  0313  0021               	movlb	1	; select bank1
  3551  0314  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  3552  0315  1D03               	btfss	3,2
  3553  0316  0008               	return
  3554                           
  3555                           ;lin_master.c: 193: for(uint8_t i = 0; i < LIN_packet.length; i++){
  3556  0317  0020               	movlb	0	; select bank0
  3557  0318  01CE               	clrf	LIN_sendPacket@i
  3558  0319                     l1695:	
  3559  0319  0840               	movf	_LIN_packet+10,w
  3560  031A  024E               	subwf	LIN_sendPacket@i,w
  3561  031B  1803               	btfsc	3,0
  3562  031C  2B2C               	goto	l1697
  3563                           
  3564                           ;lin_master.c: 194: EUSART_Write(LIN_packet.data[i]);
  3565  031D  084E               	movf	LIN_sendPacket@i,w
  3566  031E  3E01               	addlw	1
  3567  031F  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  3568  0320  0086               	movwf	6
  3569  0321  0187               	clrf	7
  3570  0322  0801               	movf	1,w
  3571  0323  3183  23D1  3183   	fcall	_EUSART_Write
  3572  0326  3001               	movlw	1
  3573  0327  0020               	movlb	0	; select bank0
  3574  0328  00CD               	movwf	??_LIN_sendPacket
  3575  0329  084D               	movf	??_LIN_sendPacket,w
  3576  032A  07CE               	addwf	LIN_sendPacket@i,f
  3577  032B  2B19               	goto	l1695
  3578  032C                     l1697:	
  3579                           
  3580                           ;lin_master.c: 195: }
  3581                           ;lin_master.c: 197: EUSART_Write(LIN_packet.checksum);
  3582  032C  083F               	movf	_LIN_packet+9,w
  3583  032D  3183  23D1         	fcall	_EUSART_Write
  3584  032F  0008               	return
  3585  0330                     __end_of_LIN_sendPacket:	
  3586                           
  3587                           	psect	text25
  3588  0598                     __ptext25:	
  3589 ;; *************** function _LIN_sendBreak *****************
  3590 ;; Defined at:
  3591 ;;		line 294 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;		None
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;		None
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      void 
  3598 ;; Registers used:
  3599 ;;		None
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;Total ram usage:        0 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    6
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_LIN_sendPacket
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _LIN_sendBreak
  3621  0598                     _LIN_sendBreak:	
  3622                           
  3623                           ;lin_master.c: 295: TXSTAbits.SENDB = 1;
  3624                           
  3625                           ;incstack = 0
  3626                           ; Regs used in _LIN_sendBreak: []
  3627  0598  0023               	movlb	3	; select bank3
  3628  0599  159E               	bsf	30,3	;volatile
  3629  059A  0008               	return
  3630  059B                     __end_of_LIN_sendBreak:	
  3631                           
  3632                           	psect	text26
  3633  03D1                     __ptext26:	
  3634 ;; *************** function _EUSART_Write *****************
  3635 ;; Defined at:
  3636 ;;		line 170 in file "mcc_generated_files/eusart.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  txData          1    wreg     unsigned char 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  txData          1    9[BANK0 ] unsigned char 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3652 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3653 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3654 ;;Total ram usage:        2 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    6
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_LIN_sendPacket
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           
  3665                           ;psect for function _EUSART_Write
  3666  03D1                     _EUSART_Write:	
  3667                           
  3668                           ;incstack = 0
  3669                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3670                           ;EUSART_Write@txData stored from wreg
  3671  03D1  0020               	movlb	0	; select bank0
  3672  03D2  00CC               	movwf	EUSART_Write@txData
  3673  03D3                     l1611:	
  3674                           ;eusart.c: 173: {
  3675                           
  3676                           ;eusart.c: 172: while(0 == eusartTxBufferRemaining)
  3677                           
  3678  03D3  0862               	movf	_eusartTxBufferRemaining,w	;volatile
  3679  03D4  1903               	btfsc	3,2
  3680  03D5  2BD3               	goto	l1611
  3681                           
  3682                           ;eusart.c: 174: }
  3683                           ;eusart.c: 176: if(0 == PIE1bits.TXIE)
  3684  03D6  0021               	movlb	1	; select bank1
  3685  03D7  1A11               	btfsc	17,4	;volatile
  3686  03D8  2BDE               	goto	l439
  3687                           
  3688                           ;eusart.c: 177: {
  3689                           ;eusart.c: 178: TXREG = txData;
  3690  03D9  0020               	movlb	0	; select bank0
  3691  03DA  084C               	movf	EUSART_Write@txData,w
  3692  03DB  0023               	movlb	3	; select bank3
  3693  03DC  009A               	movwf	26	;volatile
  3694                           
  3695                           ;eusart.c: 179: }
  3696  03DD  2BF2               	goto	l1625
  3697  03DE                     l439:	
  3698                           
  3699                           ;eusart.c: 180: else
  3700                           ;eusart.c: 181: {
  3701                           ;eusart.c: 182: PIE1bits.TXIE = 0;
  3702  03DE  1211               	bcf	17,4	;volatile
  3703                           
  3704                           ;eusart.c: 183: eusartTxBuffer[eusartTxHead++] = txData;
  3705  03DF  0020               	movlb	0	; select bank0
  3706  03E0  084C               	movf	EUSART_Write@txData,w
  3707  03E1  00CB               	movwf	??_EUSART_Write
  3708  03E2  082D               	movf	_eusartTxHead,w
  3709  03E3  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3710  03E4  0086               	movwf	6
  3711  03E5  0187               	clrf	7
  3712  03E6  084B               	movf	??_EUSART_Write,w
  3713  03E7  0081               	movwf	1
  3714  03E8  3001               	movlw	1
  3715  03E9  00CB               	movwf	??_EUSART_Write
  3716  03EA  084B               	movf	??_EUSART_Write,w
  3717  03EB  07AD               	addwf	_eusartTxHead,f	;volatile
  3718                           
  3719                           ;eusart.c: 184: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3720  03EC  3008               	movlw	8
  3721  03ED  022D               	subwf	_eusartTxHead,w	;volatile
  3722  03EE  1803               	btfsc	3,0
  3723                           
  3724                           ;eusart.c: 185: {
  3725                           ;eusart.c: 186: eusartTxHead = 0;
  3726  03EF  01AD               	clrf	_eusartTxHead	;volatile
  3727                           
  3728                           ;eusart.c: 187: }
  3729                           ;eusart.c: 188: eusartTxBufferRemaining--;
  3730  03F0  3001               	movlw	1
  3731  03F1  02E2               	subwf	_eusartTxBufferRemaining,f	;volatile
  3732  03F2                     l1625:	
  3733                           
  3734                           ;eusart.c: 189: }
  3735                           ;eusart.c: 190: PIE1bits.TXIE = 1;
  3736  03F2  0021               	movlb	1	; select bank1
  3737  03F3  1611               	bsf	17,4	;volatile
  3738  03F4  0008               	return
  3739  03F5                     __end_of_EUSART_Write:	
  3740                           
  3741                           	psect	text27
  3742  02D3                     __ptext27:	
  3743 ;; *************** function _LIN_receivePacket *****************
  3744 ;; Defined at:
  3745 ;;		line 162 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      unsigned char 
  3752 ;; Registers used:
  3753 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;Total ram usage:        2 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    7
  3766 ;; This function calls:
  3767 ;;		_EUSART_Read
  3768 ;;		_LIN_getChecksum
  3769 ;; This function is called by:
  3770 ;;		_LIN_handler
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _LIN_receivePacket
  3776  02D3                     _LIN_receivePacket:	
  3777                           
  3778                           ;lin_master.c: 163: static uint8_t rxIndex = 0;
  3779                           ;lin_master.c: 165: if(rxIndex < LIN_rxPacket.rxLength){
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _LIN_receivePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3783  02D3  0021               	movlb	1	; select bank1
  3784  02D4  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  3785  02D5  0020               	movlb	0	; select bank0
  3786  02D6  022F               	subwf	LIN_receivePacket@rxIndex,w
  3787  02D7  1803               	skipnc
  3788  02D8  2AEB               	goto	l1721
  3789                           
  3790                           ;lin_master.c: 167: LIN_rxPacket.data[rxIndex++] = EUSART_Read();
  3791  02D9  3183  2385  3182   	fcall	_EUSART_Read
  3792  02DC  0020               	movlb	0	; select bank0
  3793  02DD  00D1               	movwf	??_LIN_receivePacket
  3794  02DE  082F               	movf	LIN_receivePacket@rxIndex,w
  3795  02DF  3E02               	addlw	2
  3796  02E0  3EB0               	addlw	(low (_LIN_rxPacket| 0))& (0+255)
  3797  02E1  0086               	movwf	6
  3798  02E2  0187               	clrf	7
  3799  02E3  0851               	movf	??_LIN_receivePacket,w
  3800  02E4  0081               	movwf	1
  3801  02E5  3001               	movlw	1
  3802  02E6  00D1               	movwf	??_LIN_receivePacket
  3803  02E7  0851               	movf	??_LIN_receivePacket,w
  3804  02E8  07AF               	addwf	LIN_receivePacket@rxIndex,f
  3805                           
  3806                           ;lin_master.c: 168: __nop();
  3807  02E9  0000               	nop
  3808                           
  3809                           ;lin_master.c: 169: } else {
  3810  02EA  2B01               	goto	l1729
  3811  02EB                     l1721:	
  3812                           
  3813                           ;lin_master.c: 170: rxIndex = 0;
  3814  02EB  0020               	movlb	0	; select bank0
  3815  02EC  01AF               	clrf	LIN_receivePacket@rxIndex
  3816                           
  3817                           ;lin_master.c: 172: if(EUSART_Read() == LIN_getChecksum(LIN_rxPacket.rxLength, LIN_rxPac
      +                          ket.data))
  3818  02ED  30B2               	movlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  3819  02EE  00D1               	movwf	??_LIN_receivePacket
  3820  02EF  0851               	movf	??_LIN_receivePacket,w
  3821  02F0  00CB               	movwf	LIN_getChecksum@data
  3822  02F1  0021               	movlb	1	; select bank1
  3823  02F2  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  3824  02F3  3183  2330  3182   	fcall	_LIN_getChecksum
  3825  02F6  0020               	movlb	0	; select bank0
  3826  02F7  00D2               	movwf	??_LIN_receivePacket+1
  3827  02F8  3183  2385  3182   	fcall	_EUSART_Read
  3828  02FB  0020               	movlb	0	; select bank0
  3829  02FC  0652               	xorwf	??_LIN_receivePacket+1,w
  3830  02FD  1D03               	skipz
  3831  02FE  2B01               	goto	l1729
  3832                           
  3833                           ;lin_master.c: 173: return 1;
  3834  02FF  3001               	movlw	1
  3835  0300  0008               	return
  3836  0301                     l1729:	
  3837                           
  3838                           ;lin_master.c: 175: }
  3839                           ;lin_master.c: 177: return 0;
  3840  0301  3000               	movlw	0
  3841  0302  0008               	return
  3842  0303                     __end_of_LIN_receivePacket:	
  3843                           
  3844                           	psect	text28
  3845  0330                     __ptext28:	
  3846 ;; *************** function _LIN_getChecksum *****************
  3847 ;; Defined at:
  3848 ;;		line 228 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  length          1    wreg     unsigned char 
  3851 ;;  data            1    8[BANK0 ] PTR unsigned char 
  3852 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  length          1   10[BANK0 ] unsigned char 
  3855 ;;  i               1   11[BANK0 ] unsigned char 
  3856 ;;  checksum        2   12[BANK0 ] unsigned int 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      unsigned char 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3866 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3868 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3869 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;Total ram usage:        6 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    6
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_LIN_receivePacket
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           
  3881                           ;psect for function _LIN_getChecksum
  3882  0330                     _LIN_getChecksum:	
  3883                           
  3884                           ;incstack = 0
  3885                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  3886                           ;LIN_getChecksum@length stored from wreg
  3887  0330  0020               	movlb	0	; select bank0
  3888  0331  00CD               	movwf	LIN_getChecksum@length
  3889                           
  3890                           ;lin_master.c: 229: uint16_t checksum = 0;
  3891  0332  01CF               	clrf	LIN_getChecksum@checksum
  3892  0333  01D0               	clrf	LIN_getChecksum@checksum+1
  3893                           
  3894                           ;lin_master.c: 231: for (uint8_t i = 0; i < length; i++){
  3895  0334  01CE               	clrf	LIN_getChecksum@i
  3896  0335                     l1579:	
  3897  0335  084D               	movf	LIN_getChecksum@length,w
  3898  0336  024E               	subwf	LIN_getChecksum@i,w
  3899  0337  1803               	btfsc	3,0
  3900  0338  2B57               	goto	l162
  3901                           
  3902                           ;lin_master.c: 232: checksum = checksum + *data++;
  3903  0339  084B               	movf	LIN_getChecksum@data,w
  3904  033A  0086               	movwf	6
  3905  033B  0187               	clrf	7
  3906  033C  0801               	movf	1,w
  3907  033D  074F               	addwf	LIN_getChecksum@checksum,w
  3908  033E  00CF               	movwf	LIN_getChecksum@checksum
  3909  033F  0850               	movf	LIN_getChecksum@checksum+1,w
  3910  0340  1803               	skipnc
  3911  0341  0A50               	incf	LIN_getChecksum@checksum+1,w
  3912  0342  00D0               	movwf	LIN_getChecksum@checksum+1
  3913  0343  3001               	movlw	1
  3914  0344  00CC               	movwf	??_LIN_getChecksum
  3915  0345  084C               	movf	??_LIN_getChecksum,w
  3916  0346  07CB               	addwf	LIN_getChecksum@data,f
  3917                           
  3918                           ;lin_master.c: 233: if(checksum > 0xFF)
  3919  0347  3001               	movlw	1
  3920  0348  0250               	subwf	LIN_getChecksum@checksum+1,w
  3921  0349  3000               	movlw	0
  3922  034A  1903               	skipnz
  3923  034B  024F               	subwf	LIN_getChecksum@checksum,w
  3924  034C  1C03               	skipc
  3925  034D  2B52               	goto	l1577
  3926                           
  3927                           ;lin_master.c: 234: checksum -= 0xFF;
  3928  034E  30FF               	movlw	255
  3929  034F  02CF               	subwf	LIN_getChecksum@checksum,f
  3930  0350  3000               	movlw	0
  3931  0351  3BD0               	subwfb	LIN_getChecksum@checksum+1,f
  3932  0352                     l1577:	
  3933  0352  3001               	movlw	1
  3934  0353  00CC               	movwf	??_LIN_getChecksum
  3935  0354  084C               	movf	??_LIN_getChecksum,w
  3936  0355  07CE               	addwf	LIN_getChecksum@i,f
  3937  0356  2B35               	goto	l1579
  3938  0357                     l162:	
  3939                           
  3940                           ;lin_master.c: 235: }
  3941                           ;lin_master.c: 236: checksum = ~checksum;
  3942  0357  09CF               	comf	LIN_getChecksum@checksum,f
  3943  0358  09D0               	comf	LIN_getChecksum@checksum+1,f
  3944                           
  3945                           ;lin_master.c: 238: return (uint8_t)checksum;
  3946  0359  084F               	movf	LIN_getChecksum@checksum,w
  3947  035A  0008               	return
  3948  035B                     __end_of_LIN_getChecksum:	
  3949                           
  3950                           	psect	text29
  3951  0385                     __ptext29:	
  3952 ;; *************** function _EUSART_Read *****************
  3953 ;; Defined at:
  3954 ;;		line 148 in file "mcc_generated_files/eusart.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  readValue       1    9[BANK0 ] unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      unsigned char 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3970 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3971 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3972 ;;Total ram usage:        2 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    6
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_LIN_receivePacket
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           
  3983                           ;psect for function _EUSART_Read
  3984  0385                     _EUSART_Read:	
  3985                           
  3986                           ;eusart.c: 150: uint8_t readValue = 0;
  3987                           
  3988                           ;incstack = 0
  3989                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  3990  0385  0020               	movlb	0	; select bank0
  3991  0386  01CC               	clrf	EUSART_Read@readValue
  3992  0387                     l1587:	
  3993                           ;eusart.c: 153: {
  3994                           
  3995                           ;eusart.c: 152: while(0 == eusartRxCount)
  3996                           
  3997  0387  0829               	movf	_eusartRxCount,w	;volatile
  3998  0388  1903               	btfsc	3,2
  3999  0389  2B87               	goto	l1587
  4000                           
  4001                           ;eusart.c: 154: }
  4002                           ;eusart.c: 156: eusartRxLastError = eusartRxStatusBuffer[eusartRxTail];
  4003  038A  082A               	movf	_eusartRxTail,w	;volatile
  4004  038B  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4005  038C  0086               	movwf	6
  4006  038D  0187               	clrf	7
  4007  038E  0801               	movf	1,w
  4008  038F  00CB               	movwf	??_EUSART_Read
  4009  0390  084B               	movf	??_EUSART_Read,w
  4010  0391  00A8               	movwf	_eusartRxLastError	;volatile
  4011                           
  4012                           ;eusart.c: 158: readValue = eusartRxBuffer[eusartRxTail++];
  4013  0392  082A               	movf	_eusartRxTail,w
  4014  0393  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4015  0394  0086               	movwf	6
  4016  0395  0187               	clrf	7
  4017  0396  0801               	movf	1,w
  4018  0397  00CB               	movwf	??_EUSART_Read
  4019  0398  084B               	movf	??_EUSART_Read,w
  4020  0399  00CC               	movwf	EUSART_Read@readValue
  4021  039A  3001               	movlw	1
  4022  039B  00CB               	movwf	??_EUSART_Read
  4023  039C  084B               	movf	??_EUSART_Read,w
  4024  039D  07AA               	addwf	_eusartRxTail,f	;volatile
  4025                           
  4026                           ;eusart.c: 159: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4027  039E  3008               	movlw	8
  4028  039F  022A               	subwf	_eusartRxTail,w	;volatile
  4029  03A0  1803               	btfsc	3,0
  4030                           
  4031                           ;eusart.c: 160: {
  4032                           ;eusart.c: 161: eusartRxTail = 0;
  4033  03A1  01AA               	clrf	_eusartRxTail	;volatile
  4034                           
  4035                           ;eusart.c: 162: }
  4036                           ;eusart.c: 163: PIE1bits.RCIE = 0;
  4037  03A2  0021               	movlb	1	; select bank1
  4038  03A3  1291               	bcf	17,5	;volatile
  4039                           
  4040                           ;eusart.c: 164: eusartRxCount--;
  4041  03A4  3001               	movlw	1
  4042  03A5  0020               	movlb	0	; select bank0
  4043  03A6  02A9               	subwf	_eusartRxCount,f	;volatile
  4044                           
  4045                           ;eusart.c: 165: PIE1bits.RCIE = 1;
  4046  03A7  0021               	movlb	1	; select bank1
  4047  03A8  1691               	bsf	17,5	;volatile
  4048                           
  4049                           ;eusart.c: 167: return readValue;
  4050  03A9  0020               	movlb	0	; select bank0
  4051  03AA  084C               	movf	EUSART_Read@readValue,w
  4052  03AB  0008               	return
  4053  03AC                     __end_of_EUSART_Read:	
  4054                           
  4055                           	psect	text30
  4056  057A                     __ptext30:	
  4057 ;; *************** function _LIN_enableRx *****************
  4058 ;; Defined at:
  4059 ;;		line 284 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		None
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;Total ram usage:        0 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    6
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_LIN_handler
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           
  4088                           ;psect for function _LIN_enableRx
  4089  057A                     _LIN_enableRx:	
  4090                           
  4091                           ;lin_master.c: 285: RCSTAbits.CREN = 1;
  4092                           
  4093                           ;incstack = 0
  4094                           ; Regs used in _LIN_enableRx: []
  4095  057A  0023               	movlb	3	; select bank3
  4096  057B  161D               	bsf	29,4	;volatile
  4097                           
  4098                           ;lin_master.c: 286: PIE1bits.RCIE = 1;
  4099  057C  0021               	movlb	1	; select bank1
  4100  057D  1691               	bsf	17,5	;volatile
  4101  057E  0008               	return
  4102  057F                     __end_of_LIN_enableRx:	
  4103                           
  4104                           	psect	text31
  4105  057F                     __ptext31:	
  4106 ;; *************** function _LIN_disableRx *****************
  4107 ;; Defined at:
  4108 ;;		line 289 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		None
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4126 ;;Total ram usage:        0 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    6
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_LIN_handler
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           
  4137                           ;psect for function _LIN_disableRx
  4138  057F                     _LIN_disableRx:	
  4139                           
  4140                           ;lin_master.c: 290: RCSTAbits.CREN = 0;
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in _LIN_disableRx: []
  4144  057F  0023               	movlb	3	; select bank3
  4145  0580  121D               	bcf	29,4	;volatile
  4146                           
  4147                           ;lin_master.c: 291: PIE1bits.RCIE = 0;
  4148  0581  0021               	movlb	1	; select bank1
  4149  0582  1291               	bcf	17,5	;volatile
  4150  0583  0008               	return
  4151  0584                     __end_of_LIN_disableRx:	
  4152                           
  4153                           	psect	text32
  4154  059B                     __ptext32:	
  4155 ;; *************** function _EUSART_is_rx_ready *****************
  4156 ;; Defined at:
  4157 ;;		line 134 in file "mcc_generated_files/eusart.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      unsigned char 
  4164 ;; Registers used:
  4165 ;;		wreg
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    6
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_LIN_handler
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           
  4186                           ;psect for function _EUSART_is_rx_ready
  4187  059B                     _EUSART_is_rx_ready:	
  4188                           
  4189                           ;eusart.c: 136: return eusartRxCount;
  4190                           
  4191                           ;incstack = 0
  4192                           ; Regs used in _EUSART_is_rx_ready: [wreg]
  4193  059B  0020               	movlb	0	; select bank0
  4194  059C  0829               	movf	_eusartRxCount,w	;volatile
  4195  059D  0008               	return
  4196  059E                     __end_of_EUSART_is_rx_ready:	
  4197                           
  4198                           	psect	intentry
  4199  0004                     __pintentry:	
  4200 ;; *************** function _INTERRUPT_InterruptManager *****************
  4201 ;; Defined at:
  4202 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4220 ;;Total ram usage:        1 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    5
  4223 ;; This function calls:
  4224 ;;		Absolute function
  4225 ;;		_EUSART_Receive_ISR
  4226 ;;		_EUSART_Transmit_ISR
  4227 ;;		_TMR0_ISR
  4228 ;; This function is called by:
  4229 ;;		Interrupt level 1
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233  0004                     _INTERRUPT_InterruptManager:	
  4234                           
  4235                           ;incstack = 0
  4236  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4237                           
  4238                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4239  0005  3180               	pagesel	$
  4240  0006  0020               	movlb	0	; select bank0
  4241  0007  087F               	movf	127,w
  4242  0008  00CA               	movwf	??_INTERRUPT_InterruptManager
  4243                           
  4244                           ;interrupt_manager.c: 55: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  4245  0009  1A8B               	btfsc	11,5	;volatile
  4246  000A  1D0B               	btfss	11,2	;volatile
  4247  000B  2810               	goto	i1l331
  4248                           
  4249                           ;interrupt_manager.c: 56: {
  4250                           ;interrupt_manager.c: 57: TMR0_ISR();
  4251  000C  3185  2518  3180   	fcall	_TMR0_ISR
  4252                           
  4253                           ;interrupt_manager.c: 58: }
  4254  000F  2829               	goto	i1l339
  4255  0010                     i1l331:	
  4256                           
  4257                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  4258  0010  1F0B               	btfss	11,6	;volatile
  4259  0011  2829               	goto	i1l339
  4260                           
  4261                           ;interrupt_manager.c: 60: {
  4262                           ;interrupt_manager.c: 61: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4263  0012  0021               	movlb	1	; select bank1
  4264  0013  1E11               	btfss	17,4	;volatile
  4265  0014  281E               	goto	i1l334
  4266  0015  0020               	movlb	0	; select bank0
  4267  0016  1E11               	btfss	17,4	;volatile
  4268  0017  281E               	goto	i1l334
  4269                           
  4270                           ;interrupt_manager.c: 62: {
  4271                           ;interrupt_manager.c: 63: EUSART_TxDefaultInterruptHandler();
  4272  0018  0861               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4273  0019  008A               	movwf	10
  4274  001A  0860               	movf	_EUSART_TxDefaultInterruptHandler,w
  4275  001B  000A               	callw
  4276  001C  3180               	pagesel	$
  4277                           
  4278                           ;interrupt_manager.c: 64: }
  4279  001D  2829               	goto	i1l339
  4280  001E                     i1l334:	
  4281                           
  4282                           ;interrupt_manager.c: 65: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  4283  001E  0021               	movlb	1	; select bank1
  4284  001F  1E91               	btfss	17,5	;volatile
  4285  0020  2829               	goto	i1l339
  4286  0021  0020               	movlb	0	; select bank0
  4287  0022  1E91               	btfss	17,5	;volatile
  4288  0023  2829               	goto	i1l339
  4289                           
  4290                           ;interrupt_manager.c: 66: {
  4291                           ;interrupt_manager.c: 67: EUSART_RxDefaultInterruptHandler();
  4292  0024  085F               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4293  0025  008A               	movwf	10
  4294  0026  085E               	movf	_EUSART_RxDefaultInterruptHandler,w
  4295  0027  000A               	callw
  4296  0028  3180               	pagesel	$
  4297  0029                     i1l339:	
  4298                           ;interrupt_manager.c: 74: else
  4299                           ;interrupt_manager.c: 75: {
  4300                           
  4301                           ;interrupt_manager.c: 72: }
  4302                           ;interrupt_manager.c: 73: }
  4303                           
  4304                           ;interrupt_manager.c: 69: else
  4305                           ;interrupt_manager.c: 70: {
  4306                           
  4307                           ;interrupt_manager.c: 68: }
  4308                           
  4309  0029  0020               	movlb	0	; select bank0
  4310  002A  084A               	movf	??_INTERRUPT_InterruptManager,w
  4311  002B  00FF               	movwf	127
  4312  002C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4313  002D  0009               	retfie
  4314  002E                     __end_of_INTERRUPT_InterruptManager:	
  4315                           
  4316                           	psect	text34
  4317  0518                     __ptext34:	
  4318 ;; *************** function _TMR0_ISR *****************
  4319 ;; Defined at:
  4320 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    4
  4341 ;; This function calls:
  4342 ;;		Absolute function
  4343 ;;		_LIN_timerHandler
  4344 ;;		_TMR0_DefaultInterruptHandler
  4345 ;; This function is called by:
  4346 ;;		_INTERRUPT_InterruptManager
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           
  4351                           ;psect for function _TMR0_ISR
  4352  0518                     _TMR0_ISR:	
  4353                           
  4354                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4358  0518  110B               	bcf	11,2	;volatile
  4359                           
  4360                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  4361  0519  0020               	movlb	0	; select bank0
  4362  051A  0863               	movf	_timer0ReloadVal,w	;volatile
  4363  051B  0095               	movwf	21	;volatile
  4364                           
  4365                           ;tmr0.c: 116: if(TMR0_InterruptHandler)
  4366  051C  0858               	movf	_TMR0_InterruptHandler,w
  4367  051D  0459               	iorwf	_TMR0_InterruptHandler+1,w
  4368  051E  1903               	btfsc	3,2
  4369  051F  0008               	return
  4370                           
  4371                           ;tmr0.c: 117: {
  4372                           ;tmr0.c: 118: TMR0_InterruptHandler();
  4373  0520  0859               	movf	_TMR0_InterruptHandler+1,w
  4374  0521  008A               	movwf	10
  4375  0522  0858               	movf	_TMR0_InterruptHandler,w
  4376  0523  000A               	callw
  4377  0524  3185               	pagesel	$
  4378  0525  0008               	return
  4379  0526                     __end_of_TMR0_ISR:	
  4380                           
  4381                           	psect	text35
  4382  03F5                     __ptext35:	
  4383 ;; *************** function _LIN_timerHandler *****************
  4384 ;; Defined at:
  4385 ;;		line 248 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;Total ram usage:        1 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    3
  4406 ;; This function calls:
  4407 ;;		_LIN_sendPeriodicTx
  4408 ;;		i1_LIN_stopTimer
  4409 ;; This function is called by:
  4410 ;;		_LIN_setTimerHandler
  4411 ;;		_TMR0_ISR
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           
  4416                           ;psect for function _LIN_timerHandler
  4417  03F5                     _LIN_timerHandler:	
  4418                           
  4419                           ;lin_master.c: 250: if(LIN_timerRunning == 1){
  4420                           
  4421                           ;incstack = 0
  4422                           ; Regs used in _LIN_timerHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4423  03F5  0020               	movlb	0	; select bank0
  4424  03F6  0333               	decf	_LIN_timerRunning,w
  4425  03F7  1D03               	btfss	3,2
  4426  03F8  2C04               	goto	i1l1739
  4427                           
  4428                           ;lin_master.c: 251: if (++LIN_timerCallBack >= LIN_timeout){
  4429  03F9  3001               	movlw	1
  4430  03FA  00C9               	movwf	??_LIN_timerHandler
  4431  03FB  0849               	movf	??_LIN_timerHandler,w
  4432  03FC  07B2               	addwf	_LIN_timerCallBack,f	;volatile
  4433  03FD  0866               	movf	_LIN_timeout,w
  4434  03FE  0232               	subwf	_LIN_timerCallBack,w	;volatile
  4435  03FF  1C03               	skipc
  4436  0400  2C04               	goto	i1l1739
  4437                           
  4438                           ;lin_master.c: 253: LIN_stopTimer();
  4439  0401  3185  2590  3183   	fcall	i1_LIN_stopTimer
  4440  0404                     i1l1739:	
  4441                           
  4442                           ;lin_master.c: 254: }
  4443                           ;lin_master.c: 255: }
  4444                           ;lin_master.c: 256: if(LIN_enablePeriodTx == 1){
  4445  0404  0020               	movlb	0	; select bank0
  4446  0405  0364               	decf	_LIN_enablePeriodTx,w
  4447  0406  1D03               	btfss	3,2
  4448  0407  0008               	return
  4449                           
  4450                           ;lin_master.c: 257: if(++LIN_periodCallBack >= LIN_period){
  4451  0408  3001               	movlw	1
  4452  0409  00C9               	movwf	??_LIN_timerHandler
  4453  040A  0849               	movf	??_LIN_timerHandler,w
  4454  040B  07B1               	addwf	_LIN_periodCallBack,f	;volatile
  4455  040C  0834               	movf	_LIN_period,w
  4456  040D  0231               	subwf	_LIN_periodCallBack,w	;volatile
  4457  040E  1C03               	skipc
  4458  040F  0008               	return
  4459                           
  4460                           ;lin_master.c: 258: LIN_sendPeriodicTx();
  4461  0410  3180  20FE         	fcall	_LIN_sendPeriodicTx
  4462  0412  0008               	return
  4463  0413                     __end_of_LIN_timerHandler:	
  4464                           
  4465                           	psect	text36
  4466  05A2                     __ptext36:	
  4467 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4468 ;; Defined at:
  4469 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		None
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;Total ram usage:        0 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_TMR0_Initialize
  4493 ;;		_TMR0_ISR
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function _TMR0_DefaultInterruptHandler
  4499  05A2                     _TMR0_DefaultInterruptHandler:	
  4500                           
  4501                           ;incstack = 0
  4502                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4503  05A2  0008               	return
  4504  05A3                     __end_of_TMR0_DefaultInterruptHandler:	
  4505                           
  4506                           	psect	text37
  4507  0590                     __ptext37:	
  4508 ;; *************** function i1_LIN_stopTimer *****************
  4509 ;; Defined at:
  4510 ;;		line 268 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		status,2
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		_LIN_timerHandler
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function i1_LIN_stopTimer
  4539  0590                     i1_LIN_stopTimer:	
  4540                           
  4541                           ;lin_master.c: 270: LIN_timerCallBack = 0;
  4542                           
  4543                           ;incstack = 0
  4544                           ; Regs used in i1_LIN_stopTimer: [status,2]
  4545  0590  0020               	movlb	0	; select bank0
  4546  0591  01B2               	clrf	_LIN_timerCallBack	;volatile
  4547                           
  4548                           ;lin_master.c: 271: LIN_timerRunning = 0;
  4549  0592  01B3               	clrf	_LIN_timerRunning
  4550  0593  0008               	return
  4551  0594                     __end_ofi1_LIN_stopTimer:	
  4552                           
  4553                           	psect	text38
  4554  00FE                     __ptext38:	
  4555 ;; *************** function _LIN_sendPeriodicTx *****************
  4556 ;; Defined at:
  4557 ;;		line 298 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  periodicTx      2    4[BANK0 ] PTR const struct .
  4562 ;;		 -> ROM(8192), scheduleTable(18), 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;Total ram usage:        5 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    2
  4579 ;; This function calls:
  4580 ;;		_LIN_queuePacket
  4581 ;;		___wmul
  4582 ;; This function is called by:
  4583 ;;		_LIN_timerHandler
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function _LIN_sendPeriodicTx
  4589  00FE                     _LIN_sendPeriodicTx:	
  4590                           
  4591                           ;lin_master.c: 299: static volatile uint8_t scheduleIndex = 0;
  4592                           ;lin_master.c: 300: const lin_cmd_packet_t* periodicTx;
  4593                           ;lin_master.c: 302: LIN_periodCallBack = 0;
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in _LIN_sendPeriodicTx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4597  00FE  0020               	movlb	0	; select bank0
  4598  00FF  01B1               	clrf	_LIN_periodCallBack	;volatile
  4599                           
  4600                           ;lin_master.c: 303: periodicTx = schedule + scheduleIndex;
  4601  0100  082E               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  4602  0101  00FB               	movwf	??_LIN_sendPeriodicTx
  4603  0102  01FC               	clrf	??_LIN_sendPeriodicTx+1
  4604  0103  087B               	movf	??_LIN_sendPeriodicTx,w
  4605  0104  00F0               	movwf	___wmul@multiplier
  4606  0105  087C               	movf	??_LIN_sendPeriodicTx+1,w
  4607  0106  00F1               	movwf	___wmul@multiplier+1
  4608  0107  3006               	movlw	6
  4609  0108  00F2               	movwf	___wmul@multiplicand
  4610  0109  3000               	movlw	0
  4611  010A  00F3               	movwf	___wmul@multiplicand+1
  4612  010B  3184  244B  3180   	fcall	___wmul
  4613  010E  0870               	movf	?___wmul,w
  4614  010F  0020               	movlb	0	; select bank0
  4615  0110  075A               	addwf	_schedule,w
  4616  0111  00C7               	movwf	LIN_sendPeriodicTx@periodicTx
  4617  0112  0871               	movf	?___wmul+1,w
  4618  0113  3D5B               	addwfc	_schedule+1,w
  4619  0114  00C8               	movwf	LIN_sendPeriodicTx@periodicTx+1
  4620                           
  4621                           ;lin_master.c: 305: if(periodicTx->period > 0){
  4622  0115  0848               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  4623  0116  00FC               	movwf	??_LIN_sendPeriodicTx+1
  4624  0117  0847               	movf	LIN_sendPeriodicTx@periodicTx,w
  4625  0118  00FB               	movwf	??_LIN_sendPeriodicTx
  4626  0119  3004               	movlw	4
  4627  011A  077B               	addwf	??_LIN_sendPeriodicTx,w
  4628  011B  0084               	movwf	4
  4629  011C  087C               	movf	??_LIN_sendPeriodicTx+1,w
  4630  011D  1803               	skipnc
  4631  011E  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  4632  011F  0085               	movwf	5
  4633  0120  0012               	moviw fsr0++
  4634  0121  1903               	btfsc	3,2
  4635  0122  293A               	goto	i1l1637
  4636                           
  4637                           ;lin_master.c: 306: LIN_queuePacket(periodicTx->cmd, periodicTx->data);
  4638  0123  0848               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  4639  0124  00FC               	movwf	??_LIN_sendPeriodicTx+1
  4640  0125  0847               	movf	LIN_sendPeriodicTx@periodicTx,w
  4641  0126  00FB               	movwf	??_LIN_sendPeriodicTx
  4642  0127  3005               	movlw	5
  4643  0128  077B               	addwf	??_LIN_sendPeriodicTx,w
  4644  0129  0084               	movwf	4
  4645  012A  087C               	movf	??_LIN_sendPeriodicTx+1,w
  4646  012B  1803               	skipnc
  4647  012C  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  4648  012D  0085               	movwf	5
  4649  012E  0800               	movf	0,w	;code access
  4650  012F  00FD               	movwf	??_LIN_sendPeriodicTx+2
  4651  0130  087D               	movf	??_LIN_sendPeriodicTx+2,w
  4652  0131  00F6               	movwf	LIN_queuePacket@data
  4653  0132  0847               	movf	LIN_sendPeriodicTx@periodicTx,w
  4654  0133  0084               	movwf	4
  4655  0134  0848               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  4656  0135  0085               	movwf	5
  4657  0136  0800               	movf	0,w	;code access
  4658  0137  3180  2047  3180   	fcall	_LIN_queuePacket
  4659  013A                     i1l1637:	
  4660                           ;lin_master.c: 307: }
  4661                           ;lin_master.c: 309: do{
  4662                           
  4663                           
  4664                           ;lin_master.c: 310: if(++scheduleIndex >= scheduleLength){
  4665  013A  3001               	movlw	1
  4666  013B  00FB               	movwf	??_LIN_sendPeriodicTx
  4667  013C  087B               	movf	??_LIN_sendPeriodicTx,w
  4668  013D  0020               	movlb	0	; select bank0
  4669  013E  07AE               	addwf	LIN_sendPeriodicTx@scheduleIndex,f	;volatile
  4670  013F  0865               	movf	_scheduleLength,w
  4671  0140  022E               	subwf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  4672  0141  1803               	btfsc	3,0
  4673                           
  4674                           ;lin_master.c: 311: scheduleIndex = 0;
  4675  0142  01AE               	clrf	LIN_sendPeriodicTx@scheduleIndex	;volatile
  4676                           
  4677                           ;lin_master.c: 312: }
  4678                           ;lin_master.c: 313: periodicTx = schedule + scheduleIndex;
  4679  0143  082E               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  4680  0144  00FB               	movwf	??_LIN_sendPeriodicTx
  4681  0145  01FC               	clrf	??_LIN_sendPeriodicTx+1
  4682  0146  087B               	movf	??_LIN_sendPeriodicTx,w
  4683  0147  00F0               	movwf	___wmul@multiplier
  4684  0148  087C               	movf	??_LIN_sendPeriodicTx+1,w
  4685  0149  00F1               	movwf	___wmul@multiplier+1
  4686  014A  3006               	movlw	6
  4687  014B  00F2               	movwf	___wmul@multiplicand
  4688  014C  3000               	movlw	0
  4689  014D  00F3               	movwf	___wmul@multiplicand+1
  4690  014E  3184  244B  3180   	fcall	___wmul
  4691  0151  0870               	movf	?___wmul,w
  4692  0152  0020               	movlb	0	; select bank0
  4693  0153  075A               	addwf	_schedule,w
  4694  0154  00C7               	movwf	LIN_sendPeriodicTx@periodicTx
  4695  0155  0871               	movf	?___wmul+1,w
  4696  0156  3D5B               	addwfc	_schedule+1,w
  4697  0157  00C8               	movwf	LIN_sendPeriodicTx@periodicTx+1
  4698                           
  4699                           ;lin_master.c: 314: } while(periodicTx->period == 0);
  4700  0158  0848               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  4701  0159  00FC               	movwf	??_LIN_sendPeriodicTx+1
  4702  015A  0847               	movf	LIN_sendPeriodicTx@periodicTx,w
  4703  015B  00FB               	movwf	??_LIN_sendPeriodicTx
  4704  015C  3004               	movlw	4
  4705  015D  077B               	addwf	??_LIN_sendPeriodicTx,w
  4706  015E  0084               	movwf	4
  4707  015F  087C               	movf	??_LIN_sendPeriodicTx+1,w
  4708  0160  1803               	skipnc
  4709  0161  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  4710  0162  0085               	movwf	5
  4711  0163  0012               	moviw fsr0++
  4712  0164  1903               	btfsc	3,2
  4713  0165  293A               	goto	i1l1637
  4714                           
  4715                           ;lin_master.c: 316: LIN_period = periodicTx->period;
  4716  0166  0848               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  4717  0167  00FC               	movwf	??_LIN_sendPeriodicTx+1
  4718  0168  0847               	movf	LIN_sendPeriodicTx@periodicTx,w
  4719  0169  00FB               	movwf	??_LIN_sendPeriodicTx
  4720  016A  3004               	movlw	4
  4721  016B  077B               	addwf	??_LIN_sendPeriodicTx,w
  4722  016C  0084               	movwf	4
  4723  016D  087C               	movf	??_LIN_sendPeriodicTx+1,w
  4724  016E  1803               	skipnc
  4725  016F  0A7C               	incf	??_LIN_sendPeriodicTx+1,w
  4726  0170  0085               	movwf	5
  4727  0171  0800               	movf	0,w	;code access
  4728  0172  00FD               	movwf	??_LIN_sendPeriodicTx+2
  4729  0173  087D               	movf	??_LIN_sendPeriodicTx+2,w
  4730  0174  00B4               	movwf	_LIN_period
  4731  0175  0008               	return
  4732  0176                     __end_of_LIN_sendPeriodicTx:	
  4733                           
  4734                           	psect	text39
  4735  044B                     __ptext39:	
  4736 ;; *************** function ___wmul *****************
  4737 ;; Defined at:
  4738 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  multiplier      2    0[COMMON] unsigned int 
  4741 ;;  multiplicand    2    2[COMMON] unsigned int 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  product         2    4[COMMON] unsigned int 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  2    0[COMMON] unsigned int 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;Total ram usage:        6 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_LIN_sendPeriodicTx
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function ___wmul
  4768  044B                     ___wmul:	
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4772  044B  01F4               	clrf	___wmul@product
  4773  044C  01F5               	clrf	___wmul@product+1
  4774  044D                     i1l1539:	
  4775  044D  1C70               	btfss	___wmul@multiplier,0
  4776  044E  2C53               	goto	i1l591
  4777  044F  0872               	movf	___wmul@multiplicand,w
  4778  0450  07F4               	addwf	___wmul@product,f
  4779  0451  0873               	movf	___wmul@multiplicand+1,w
  4780  0452  3DF5               	addwfc	___wmul@product+1,f
  4781  0453                     i1l591:	
  4782  0453  3001               	movlw	1
  4783  0454                     u114_25:	
  4784  0454  35F2               	lslf	___wmul@multiplicand,f
  4785  0455  0DF3               	rlf	___wmul@multiplicand+1,f
  4786  0456  0B89               	decfsz	9,f
  4787  0457  2C54               	goto	u114_25
  4788  0458  3001               	movlw	1
  4789  0459                     u115_25:	
  4790  0459  36F1               	lsrf	___wmul@multiplier+1,f
  4791  045A  0CF0               	rrf	___wmul@multiplier,f
  4792  045B  0B89               	decfsz	9,f
  4793  045C  2C59               	goto	u115_25
  4794  045D  0870               	movf	___wmul@multiplier,w
  4795  045E  0471               	iorwf	___wmul@multiplier+1,w
  4796  045F  1D03               	btfss	3,2
  4797  0460  2C4D               	goto	i1l1539
  4798  0461  0875               	movf	___wmul@product+1,w
  4799  0462  00F1               	movwf	?___wmul+1
  4800  0463  0874               	movf	___wmul@product,w
  4801  0464  00F0               	movwf	?___wmul
  4802  0465  0008               	return
  4803  0466                     __end_of___wmul:	
  4804                           
  4805                           	psect	text40
  4806  0047                     __ptext40:	
  4807 ;; *************** function _LIN_queuePacket *****************
  4808 ;; Defined at:
  4809 ;;		line 70 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  cmd             1    wreg     unsigned char 
  4812 ;;  data            1    6[COMMON] PTR unsigned char 
  4813 ;;		 -> LFRX_Data(8), RSSI_Data(1), UNLOCK_Data(1), 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  cmd             1    0[BANK0 ] unsigned char 
  4816 ;;  i               1    1[BANK0 ] unsigned char 
  4817 ;;  tempSchedule    2    2[BANK0 ] PTR const struct .
  4818 ;;		 -> ROM(8192), scheduleTable(18), 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4828 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;Total ram usage:        9 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    1
  4835 ;; This function calls:
  4836 ;;		_LIN_calcParity
  4837 ;;		i1_LIN_getChecksum
  4838 ;; This function is called by:
  4839 ;;		_LIN_sendPeriodicTx
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           
  4844                           ;psect for function _LIN_queuePacket
  4845  0047                     _LIN_queuePacket:	
  4846                           
  4847                           ;incstack = 0
  4848                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4849                           ;LIN_queuePacket@cmd stored from wreg
  4850  0047  0020               	movlb	0	; select bank0
  4851  0048  00C3               	movwf	LIN_queuePacket@cmd
  4852                           
  4853                           ;lin_master.c: 71: const lin_cmd_packet_t* tempSchedule = schedule;
  4854  0049  085B               	movf	_schedule+1,w
  4855  004A  00C6               	movwf	LIN_queuePacket@tempSchedule+1
  4856  004B  085A               	movf	_schedule,w
  4857  004C  00C5               	movwf	LIN_queuePacket@tempSchedule
  4858                           
  4859                           ;lin_master.c: 73: for(uint8_t i = 0; i < scheduleLength; i++){
  4860  004D  01C4               	clrf	LIN_queuePacket@i
  4861  004E                     i1l1509:	
  4862  004E  0865               	movf	_scheduleLength,w
  4863  004F  0244               	subwf	LIN_queuePacket@i,w
  4864  0050  1803               	btfsc	3,0
  4865  0051  2863               	goto	i1l1511
  4866                           
  4867                           ;lin_master.c: 74: if(cmd == tempSchedule->cmd){
  4868  0052  0845               	movf	LIN_queuePacket@tempSchedule,w
  4869  0053  0084               	movwf	4
  4870  0054  0846               	movf	LIN_queuePacket@tempSchedule+1,w
  4871  0055  0085               	movwf	5
  4872  0056  0800               	movf	0,w	;code access
  4873  0057  0643               	xorwf	LIN_queuePacket@cmd,w
  4874  0058  1903               	btfsc	3,2
  4875  0059  2863               	goto	i1l1511
  4876                           
  4877                           ;lin_master.c: 76: }
  4878                           ;lin_master.c: 77: tempSchedule++;
  4879                           
  4880                           ;lin_master.c: 75: break;
  4881  005A  3006               	movlw	6
  4882  005B  07C5               	addwf	LIN_queuePacket@tempSchedule,f
  4883  005C  3000               	movlw	0
  4884  005D  3DC6               	addwfc	LIN_queuePacket@tempSchedule+1,f
  4885  005E  3001               	movlw	1
  4886  005F  00F7               	movwf	??_LIN_queuePacket
  4887  0060  0877               	movf	??_LIN_queuePacket,w
  4888  0061  07C4               	addwf	LIN_queuePacket@i,f
  4889  0062  284E               	goto	i1l1509
  4890  0063                     i1l1511:	
  4891                           
  4892                           ;lin_master.c: 78: }
  4893                           ;lin_master.c: 81: LIN_packet.PID = LIN_calcParity(tempSchedule->cmd);
  4894  0063  0845               	movf	LIN_queuePacket@tempSchedule,w
  4895  0064  0084               	movwf	4
  4896  0065  0846               	movf	LIN_queuePacket@tempSchedule+1,w
  4897  0066  0085               	movwf	5
  4898  0067  0800               	movf	0,w	;code access
  4899  0068  3181  2176  3180   	fcall	_LIN_calcParity
  4900  006B  00F7               	movwf	??_LIN_queuePacket
  4901  006C  0877               	movf	??_LIN_queuePacket,w
  4902  006D  0020               	movlb	0	; select bank0
  4903  006E  00B6               	movwf	_LIN_packet
  4904                           
  4905                           ;lin_master.c: 83: if(tempSchedule->type == TRANSMIT){
  4906  006F  0846               	movf	LIN_queuePacket@tempSchedule+1,w
  4907  0070  00F8               	movwf	??_LIN_queuePacket+1
  4908  0071  0845               	movf	LIN_queuePacket@tempSchedule,w
  4909  0072  00F7               	movwf	??_LIN_queuePacket
  4910  0073  3001               	movlw	1
  4911  0074  0777               	addwf	??_LIN_queuePacket,w
  4912  0075  0084               	movwf	4
  4913  0076  0878               	movf	??_LIN_queuePacket+1,w
  4914  0077  1803               	skipnc
  4915  0078  0A78               	incf	??_LIN_queuePacket+1,w
  4916  0079  0085               	movwf	5
  4917  007A  0012               	moviw fsr0++
  4918  007B  1D03               	btfss	3,2
  4919  007C  28CF               	goto	i1l1525
  4920                           
  4921                           ;lin_master.c: 86: if(tempSchedule->length > 0){
  4922  007D  0846               	movf	LIN_queuePacket@tempSchedule+1,w
  4923  007E  00F8               	movwf	??_LIN_queuePacket+1
  4924  007F  0845               	movf	LIN_queuePacket@tempSchedule,w
  4925  0080  00F7               	movwf	??_LIN_queuePacket
  4926  0081  3002               	movlw	2
  4927  0082  0777               	addwf	??_LIN_queuePacket,w
  4928  0083  0084               	movwf	4
  4929  0084  0878               	movf	??_LIN_queuePacket+1,w
  4930  0085  1803               	skipnc
  4931  0086  0A78               	incf	??_LIN_queuePacket+1,w
  4932  0087  0085               	movwf	5
  4933  0088  0012               	moviw fsr0++
  4934  0089  1903               	btfsc	3,2
  4935  008A  28BB               	goto	i1l111
  4936                           
  4937                           ;lin_master.c: 87: LIN_packet.length = tempSchedule->length;
  4938  008B  0846               	movf	LIN_queuePacket@tempSchedule+1,w
  4939  008C  00F8               	movwf	??_LIN_queuePacket+1
  4940  008D  0845               	movf	LIN_queuePacket@tempSchedule,w
  4941  008E  00F7               	movwf	??_LIN_queuePacket
  4942  008F  3002               	movlw	2
  4943  0090  0777               	addwf	??_LIN_queuePacket,w
  4944  0091  0084               	movwf	4
  4945  0092  0878               	movf	??_LIN_queuePacket+1,w
  4946  0093  1803               	skipnc
  4947  0094  0A78               	incf	??_LIN_queuePacket+1,w
  4948  0095  0085               	movwf	5
  4949  0096  0800               	movf	0,w	;code access
  4950  0097  00F9               	movwf	??_LIN_queuePacket+2
  4951  0098  0879               	movf	??_LIN_queuePacket+2,w
  4952  0099  00C0               	movwf	_LIN_packet+10
  4953                           
  4954                           ;lin_master.c: 88: __builtin_memcpy(LIN_packet.data,data,tempSchedule->length);
  4955  009A  3001               	movlw	1
  4956  009B  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  4957  009C  0086               	movwf	6
  4958  009D  0187               	clrf	7
  4959  009E  0020               	movlb	0	; select bank0
  4960  009F  0846               	movf	LIN_queuePacket@tempSchedule+1,w
  4961  00A0  00F8               	movwf	??_LIN_queuePacket+1
  4962  00A1  0845               	movf	LIN_queuePacket@tempSchedule,w
  4963  00A2  00F7               	movwf	??_LIN_queuePacket
  4964  00A3  3002               	movlw	2
  4965  00A4  0777               	addwf	??_LIN_queuePacket,w
  4966  00A5  0084               	movwf	4
  4967  00A6  0878               	movf	??_LIN_queuePacket+1,w
  4968  00A7  1803               	skipnc
  4969  00A8  0A78               	incf	??_LIN_queuePacket+1,w
  4970  00A9  0085               	movwf	5
  4971  00AA  0800               	movf	0,w	;code access
  4972  00AB  00F9               	movwf	??_LIN_queuePacket+2
  4973  00AC  01FA               	clrf	??_LIN_queuePacket+3
  4974  00AD  0876               	movf	LIN_queuePacket@data,w
  4975  00AE  0084               	movwf	4
  4976  00AF  0185               	clrf	5
  4977  00B0                     u111_2m0:	
  4978  00B0  0012               	moviw fsr0++
  4979  00B1  001E               	movwi fsr1++
  4980  00B2  3001               	movlw	1
  4981  00B3  02F9               	subwf	??_LIN_queuePacket+2,f
  4982  00B4  3000               	movlw	0
  4983  00B5  3BFA               	subwfb	??_LIN_queuePacket+3,f
  4984  00B6  087A               	movf	??_LIN_queuePacket+3,w
  4985  00B7  0479               	iorwf	??_LIN_queuePacket+2,w
  4986  00B8  1D03               	btfss	3,2
  4987  00B9  28B0               	goto	u111_2m0
  4988  00BA  28C1               	goto	i1l1523
  4989  00BB                     i1l111:	
  4990                           ;lin_master.c: 89: } else {
  4991                           
  4992                           
  4993                           ;lin_master.c: 90: LIN_packet.length = 1;
  4994  00BB  01C0               	clrf	_LIN_packet+10
  4995  00BC  0AC0               	incf	_LIN_packet+10,f
  4996                           
  4997                           ;lin_master.c: 91: LIN_packet.data[0] = 0xAA;
  4998  00BD  30AA               	movlw	170
  4999  00BE  00F7               	movwf	??_LIN_queuePacket
  5000  00BF  0877               	movf	??_LIN_queuePacket,w
  5001  00C0  00B7               	movwf	_LIN_packet+1
  5002  00C1                     i1l1523:	
  5003                           
  5004                           ;lin_master.c: 92: }
  5005                           ;lin_master.c: 95: LIN_packet.checksum = LIN_getChecksum(LIN_packet.length, LIN_packet.d
      +                          ata);
  5006  00C1  3037               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  5007  00C2  00F7               	movwf	??_LIN_queuePacket
  5008  00C3  0877               	movf	??_LIN_queuePacket,w
  5009  00C4  00F0               	movwf	i1LIN_getChecksum@data
  5010  00C5  0020               	movlb	0	; select bank0
  5011  00C6  0840               	movf	_LIN_packet+10,w
  5012  00C7  3183  235B  3180   	fcall	i1_LIN_getChecksum
  5013  00CA  00F8               	movwf	??_LIN_queuePacket+1
  5014  00CB  0878               	movf	??_LIN_queuePacket+1,w
  5015  00CC  0020               	movlb	0	; select bank0
  5016  00CD  00BF               	movwf	_LIN_packet+9
  5017                           
  5018                           ;lin_master.c: 97: } else {
  5019  00CE  28FA               	goto	i1l1527
  5020  00CF                     i1l1525:	
  5021                           
  5022                           ;lin_master.c: 98: LIN_rxPacket.rxLength = tempSchedule->length;
  5023  00CF  0846               	movf	LIN_queuePacket@tempSchedule+1,w
  5024  00D0  00F8               	movwf	??_LIN_queuePacket+1
  5025  00D1  0845               	movf	LIN_queuePacket@tempSchedule,w
  5026  00D2  00F7               	movwf	??_LIN_queuePacket
  5027  00D3  3002               	movlw	2
  5028  00D4  0777               	addwf	??_LIN_queuePacket,w
  5029  00D5  0084               	movwf	4
  5030  00D6  0878               	movf	??_LIN_queuePacket+1,w
  5031  00D7  1803               	skipnc
  5032  00D8  0A78               	incf	??_LIN_queuePacket+1,w
  5033  00D9  0085               	movwf	5
  5034  00DA  0800               	movf	0,w	;code access
  5035  00DB  00F9               	movwf	??_LIN_queuePacket+2
  5036  00DC  0879               	movf	??_LIN_queuePacket+2,w
  5037  00DD  0021               	movlb	1	; select bank1
  5038  00DE  00B1               	movwf	(_LIN_rxPacket^(0+128)+1)
  5039                           
  5040                           ;lin_master.c: 99: LIN_rxPacket.cmd = tempSchedule->cmd;
  5041  00DF  0020               	movlb	0	; select bank0
  5042  00E0  0845               	movf	LIN_queuePacket@tempSchedule,w
  5043  00E1  0084               	movwf	4
  5044  00E2  0846               	movf	LIN_queuePacket@tempSchedule+1,w
  5045  00E3  0085               	movwf	5
  5046  00E4  0800               	movf	0,w	;code access
  5047  00E5  00F7               	movwf	??_LIN_queuePacket
  5048  00E6  0877               	movf	??_LIN_queuePacket,w
  5049  00E7  0021               	movlb	1	; select bank1
  5050  00E8  00B0               	movwf	_LIN_rxPacket^(0+128)
  5051                           
  5052                           ;lin_master.c: 100: LIN_rxPacket.timeout = tempSchedule->timeout;
  5053  00E9  0020               	movlb	0	; select bank0
  5054  00EA  0846               	movf	LIN_queuePacket@tempSchedule+1,w
  5055  00EB  00F8               	movwf	??_LIN_queuePacket+1
  5056  00EC  0845               	movf	LIN_queuePacket@tempSchedule,w
  5057  00ED  00F7               	movwf	??_LIN_queuePacket
  5058  00EE  3003               	movlw	3
  5059  00EF  0777               	addwf	??_LIN_queuePacket,w
  5060  00F0  0084               	movwf	4
  5061  00F1  0878               	movf	??_LIN_queuePacket+1,w
  5062  00F2  1803               	skipnc
  5063  00F3  0A78               	incf	??_LIN_queuePacket+1,w
  5064  00F4  0085               	movwf	5
  5065  00F5  0800               	movf	0,w	;code access
  5066  00F6  00F9               	movwf	??_LIN_queuePacket+2
  5067  00F7  0879               	movf	??_LIN_queuePacket+2,w
  5068  00F8  0021               	movlb	1	; select bank1
  5069  00F9  00BB               	movwf	(_LIN_rxPacket^(0+128)+11)
  5070  00FA                     i1l1527:	
  5071                           
  5072                           ;lin_master.c: 101: }
  5073                           ;lin_master.c: 103: LIN_txReady = 1;
  5074  00FA  0020               	movlb	0	; select bank0
  5075  00FB  01B5               	clrf	_LIN_txReady
  5076  00FC  0AB5               	incf	_LIN_txReady,f
  5077  00FD  0008               	return
  5078  00FE                     __end_of_LIN_queuePacket:	
  5079                           
  5080                           	psect	text41
  5081  035B                     __ptext41:	
  5082 ;; *************** function i1_LIN_getChecksum *****************
  5083 ;; Defined at:
  5084 ;;		line 228 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  length          1    wreg     unsigned char 
  5087 ;;  data            1    0[COMMON] PTR unsigned char 
  5088 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  length          1    2[COMMON] unsigned char 
  5091 ;;  LIN_getCheck    2    4[COMMON] unsigned int 
  5092 ;;  LIN_getCheck    1    3[COMMON] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      unsigned char 
  5095 ;; Registers used:
  5096 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5102 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;Total ram usage:        6 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_LIN_queuePacket
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           
  5116                           ;psect for function i1_LIN_getChecksum
  5117  035B                     i1_LIN_getChecksum:	
  5118                           
  5119                           ;incstack = 0
  5120                           ; Regs used in i1_LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  5121                           ;i1LIN_getChecksum@length stored from wreg
  5122  035B  00F2               	movwf	i1LIN_getChecksum@length
  5123                           
  5124                           ;lin_master.c: 229: uint16_t checksum = 0;
  5125  035C  01F4               	clrf	i1LIN_getChecksum@checksum
  5126  035D  01F5               	clrf	i1LIN_getChecksum@checksum+1
  5127                           
  5128                           ;lin_master.c: 231: for (uint8_t i = 0; i < length; i++){
  5129  035E  01F3               	clrf	i1LIN_getChecksum@i
  5130  035F                     i1l1485:	
  5131  035F  0872               	movf	i1LIN_getChecksum@length,w
  5132  0360  0273               	subwf	i1LIN_getChecksum@i,w
  5133  0361  1803               	btfsc	3,0
  5134  0362  2B81               	goto	i1l162
  5135                           
  5136                           ;lin_master.c: 232: checksum = checksum + *data++;
  5137  0363  0870               	movf	i1LIN_getChecksum@data,w
  5138  0364  0086               	movwf	6
  5139  0365  0187               	clrf	7
  5140  0366  0801               	movf	1,w
  5141  0367  0774               	addwf	i1LIN_getChecksum@checksum,w
  5142  0368  00F4               	movwf	i1LIN_getChecksum@checksum
  5143  0369  0875               	movf	i1LIN_getChecksum@checksum+1,w
  5144  036A  1803               	skipnc
  5145  036B  0A75               	incf	i1LIN_getChecksum@checksum+1,w
  5146  036C  00F5               	movwf	i1LIN_getChecksum@checksum+1
  5147  036D  3001               	movlw	1
  5148  036E  00F1               	movwf	??i1_LIN_getChecksum
  5149  036F  0871               	movf	??i1_LIN_getChecksum,w
  5150  0370  07F0               	addwf	i1LIN_getChecksum@data,f
  5151                           
  5152                           ;lin_master.c: 233: if(checksum > 0xFF)
  5153  0371  3001               	movlw	1
  5154  0372  0275               	subwf	i1LIN_getChecksum@checksum+1,w
  5155  0373  3000               	movlw	0
  5156  0374  1903               	skipnz
  5157  0375  0274               	subwf	i1LIN_getChecksum@checksum,w
  5158  0376  1C03               	skipc
  5159  0377  2B7C               	goto	i1l1483
  5160                           
  5161                           ;lin_master.c: 234: checksum -= 0xFF;
  5162  0378  30FF               	movlw	255
  5163  0379  02F4               	subwf	i1LIN_getChecksum@checksum,f
  5164  037A  3000               	movlw	0
  5165  037B  3BF5               	subwfb	i1LIN_getChecksum@checksum+1,f
  5166  037C                     i1l1483:	
  5167  037C  3001               	movlw	1
  5168  037D  00F1               	movwf	??i1_LIN_getChecksum
  5169  037E  0871               	movf	??i1_LIN_getChecksum,w
  5170  037F  07F3               	addwf	i1LIN_getChecksum@i,f
  5171  0380  2B5F               	goto	i1l1485
  5172  0381                     i1l162:	
  5173                           
  5174                           ;lin_master.c: 235: }
  5175                           ;lin_master.c: 236: checksum = ~checksum;
  5176  0381  09F4               	comf	i1LIN_getChecksum@checksum,f
  5177  0382  09F5               	comf	i1LIN_getChecksum@checksum+1,f
  5178                           
  5179                           ;lin_master.c: 238: return (uint8_t)checksum;
  5180  0383  0874               	movf	i1LIN_getChecksum@checksum,w
  5181  0384  0008               	return
  5182  0385                     __end_ofi1_LIN_getChecksum:	
  5183                           
  5184                           	psect	text42
  5185  0176                     __ptext42:	
  5186 ;; *************** function _LIN_calcParity *****************
  5187 ;; Defined at:
  5188 ;;		line 210 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  CMD             1    wreg     unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  CMD             1    1[COMMON] unsigned char 
  5193 ;;  PID             1    2[COMMON] struct .
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      unsigned char 
  5196 ;; Registers used:
  5197 ;;		wreg, status,0
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5204 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;Total ram usage:        3 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_LIN_queuePacket
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           
  5217                           ;psect for function _LIN_calcParity
  5218  0176                     _LIN_calcParity:	
  5219                           
  5220                           ;incstack = 0
  5221                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  5222                           ;LIN_calcParity@CMD stored from wreg
  5223  0176  00F1               	movwf	LIN_calcParity@CMD
  5224                           
  5225                           ;lin_master.c: 211: lin_pid_t PID;
  5226                           ;lin_master.c: 212: PID.rawPID = CMD;
  5227  0177  0871               	movf	LIN_calcParity@CMD,w
  5228  0178  00F0               	movwf	??_LIN_calcParity
  5229  0179  0870               	movf	??_LIN_calcParity,w
  5230  017A  00F2               	movwf	LIN_calcParity@PID
  5231                           
  5232                           ;lin_master.c: 217: PID.P0 = PID.ID0 ^ PID.ID1;
  5233  017B  1CF2               	btfss	LIN_calcParity@PID,1
  5234  017C  297F               	goto	u79_20
  5235  017D  3001               	movlw	1
  5236  017E  2980               	goto	u79_22
  5237  017F                     u79_20:	
  5238  017F  3000               	movlw	0
  5239  0180                     u79_22:	
  5240  0180  00F0               	movwf	??_LIN_calcParity
  5241  0181  1C72               	btfss	LIN_calcParity@PID,0
  5242  0182  2985               	goto	u80_20
  5243  0183  3001               	movlw	1
  5244  0184  2986               	goto	u80_22
  5245  0185                     u80_20:	
  5246  0185  3000               	movlw	0
  5247  0186                     u80_22:	
  5248  0186  0670               	xorwf	??_LIN_calcParity,w
  5249  0187  1903               	btfsc	3,2
  5250  0188  298B               	goto	u81_20
  5251  0189  1772               	bsf	LIN_calcParity@PID,6
  5252  018A  298C               	goto	u82_24
  5253  018B                     u81_20:	
  5254  018B  1372               	bcf	LIN_calcParity@PID,6
  5255  018C                     u82_24:	
  5256                           
  5257                           ;lin_master.c: 218: PID.P0 = PID.P0 ^ PID.ID2;
  5258  018C  1D72               	btfss	LIN_calcParity@PID,2
  5259  018D  2990               	goto	u83_20
  5260  018E  3001               	movlw	1
  5261  018F  2991               	goto	u83_22
  5262  0190                     u83_20:	
  5263  0190  3000               	movlw	0
  5264  0191                     u83_22:	
  5265  0191  00F0               	movwf	??_LIN_calcParity
  5266  0192  1F72               	btfss	LIN_calcParity@PID,6
  5267  0193  2996               	goto	u84_20
  5268  0194  3001               	movlw	1
  5269  0195  2997               	goto	u84_22
  5270  0196                     u84_20:	
  5271  0196  3000               	movlw	0
  5272  0197                     u84_22:	
  5273  0197  0670               	xorwf	??_LIN_calcParity,w
  5274  0198  1903               	btfsc	3,2
  5275  0199  299C               	goto	u85_20
  5276  019A  1772               	bsf	LIN_calcParity@PID,6
  5277  019B  299D               	goto	u86_24
  5278  019C                     u85_20:	
  5279  019C  1372               	bcf	LIN_calcParity@PID,6
  5280  019D                     u86_24:	
  5281                           
  5282                           ;lin_master.c: 219: PID.P0 = PID.P0 ^ PID.ID4;
  5283  019D  1E72               	btfss	LIN_calcParity@PID,4
  5284  019E  29A1               	goto	u87_20
  5285  019F  3001               	movlw	1
  5286  01A0  29A2               	goto	u87_22
  5287  01A1                     u87_20:	
  5288  01A1  3000               	movlw	0
  5289  01A2                     u87_22:	
  5290  01A2  00F0               	movwf	??_LIN_calcParity
  5291  01A3  1F72               	btfss	LIN_calcParity@PID,6
  5292  01A4  29A7               	goto	u88_20
  5293  01A5  3001               	movlw	1
  5294  01A6  29A8               	goto	u88_22
  5295  01A7                     u88_20:	
  5296  01A7  3000               	movlw	0
  5297  01A8                     u88_22:	
  5298  01A8  0670               	xorwf	??_LIN_calcParity,w
  5299  01A9  1903               	btfsc	3,2
  5300  01AA  29AD               	goto	u89_20
  5301  01AB  1772               	bsf	LIN_calcParity@PID,6
  5302  01AC  29AE               	goto	u90_24
  5303  01AD                     u89_20:	
  5304  01AD  1372               	bcf	LIN_calcParity@PID,6
  5305  01AE                     u90_24:	
  5306                           
  5307                           ;lin_master.c: 220: PID.P1 = PID.ID1 ^ PID.ID3;
  5308  01AE  1DF2               	btfss	LIN_calcParity@PID,3
  5309  01AF  29B2               	goto	u91_20
  5310  01B0  3001               	movlw	1
  5311  01B1  29B3               	goto	u91_22
  5312  01B2                     u91_20:	
  5313  01B2  3000               	movlw	0
  5314  01B3                     u91_22:	
  5315  01B3  00F0               	movwf	??_LIN_calcParity
  5316  01B4  1CF2               	btfss	LIN_calcParity@PID,1
  5317  01B5  29B8               	goto	u92_20
  5318  01B6  3001               	movlw	1
  5319  01B7  29B9               	goto	u92_22
  5320  01B8                     u92_20:	
  5321  01B8  3000               	movlw	0
  5322  01B9                     u92_22:	
  5323  01B9  0670               	xorwf	??_LIN_calcParity,w
  5324  01BA  1903               	btfsc	3,2
  5325  01BB  29BE               	goto	u93_20
  5326  01BC  17F2               	bsf	LIN_calcParity@PID,7
  5327  01BD  29BF               	goto	u94_24
  5328  01BE                     u93_20:	
  5329  01BE  13F2               	bcf	LIN_calcParity@PID,7
  5330  01BF                     u94_24:	
  5331                           
  5332                           ;lin_master.c: 221: PID.P1 = PID.P1 ^ PID.ID4;
  5333  01BF  1E72               	btfss	LIN_calcParity@PID,4
  5334  01C0  29C3               	goto	u95_20
  5335  01C1  3001               	movlw	1
  5336  01C2  29C4               	goto	u95_22
  5337  01C3                     u95_20:	
  5338  01C3  3000               	movlw	0
  5339  01C4                     u95_22:	
  5340  01C4  00F0               	movwf	??_LIN_calcParity
  5341  01C5  1FF2               	btfss	LIN_calcParity@PID,7
  5342  01C6  29C9               	goto	u96_20
  5343  01C7  3001               	movlw	1
  5344  01C8  29CA               	goto	u96_22
  5345  01C9                     u96_20:	
  5346  01C9  3000               	movlw	0
  5347  01CA                     u96_22:	
  5348  01CA  0670               	xorwf	??_LIN_calcParity,w
  5349  01CB  1903               	btfsc	3,2
  5350  01CC  29CF               	goto	u97_20
  5351  01CD  17F2               	bsf	LIN_calcParity@PID,7
  5352  01CE  29D0               	goto	u98_24
  5353  01CF                     u97_20:	
  5354  01CF  13F2               	bcf	LIN_calcParity@PID,7
  5355  01D0                     u98_24:	
  5356                           
  5357                           ;lin_master.c: 222: PID.P1 = PID.P1 ^ PID.ID5;
  5358  01D0  1EF2               	btfss	LIN_calcParity@PID,5
  5359  01D1  29D4               	goto	u99_20
  5360  01D2  3001               	movlw	1
  5361  01D3  29D5               	goto	u99_22
  5362  01D4                     u99_20:	
  5363  01D4  3000               	movlw	0
  5364  01D5                     u99_22:	
  5365  01D5  00F0               	movwf	??_LIN_calcParity
  5366  01D6  1FF2               	btfss	LIN_calcParity@PID,7
  5367  01D7  29DA               	goto	u100_20
  5368  01D8  3001               	movlw	1
  5369  01D9  29DB               	goto	u100_22
  5370  01DA                     u100_20:	
  5371  01DA  3000               	movlw	0
  5372  01DB                     u100_22:	
  5373  01DB  0670               	xorwf	??_LIN_calcParity,w
  5374  01DC  1903               	btfsc	3,2
  5375  01DD  29E0               	goto	u101_20
  5376  01DE  17F2               	bsf	LIN_calcParity@PID,7
  5377  01DF  29E1               	goto	i1l1465
  5378  01E0                     u101_20:	
  5379  01E0  13F2               	bcf	LIN_calcParity@PID,7
  5380  01E1                     i1l1465:	
  5381                           
  5382                           ;lin_master.c: 223: PID.P1 = ~PID.P1;
  5383  01E1  1003               	clrc
  5384  01E2  1FF2               	btfss	LIN_calcParity@PID,7
  5385  01E3  1403               	setc
  5386  01E4  1C03               	btfss	3,0
  5387  01E5  29E8               	goto	u103_20
  5388  01E6  17F2               	bsf	LIN_calcParity@PID,7
  5389  01E7  29E9               	goto	i1l1467
  5390  01E8                     u103_20:	
  5391  01E8  13F2               	bcf	LIN_calcParity@PID,7
  5392  01E9                     i1l1467:	
  5393                           
  5394                           ;lin_master.c: 225: return PID.rawPID;
  5395  01E9  0872               	movf	LIN_calcParity@PID,w
  5396  01EA  0008               	return
  5397  01EB                     __end_of_LIN_calcParity:	
  5398                           
  5399                           	psect	text43
  5400  0413                     __ptext43:	
  5401 ;; *************** function _EUSART_Transmit_ISR *****************
  5402 ;; Defined at:
  5403 ;;		line 194 in file "mcc_generated_files/eusart.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5421 ;;Total ram usage:        1 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_EUSART_Initialize
  5427 ;;		_INTERRUPT_InterruptManager
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           
  5432                           ;psect for function _EUSART_Transmit_ISR
  5433  0413                     _EUSART_Transmit_ISR:	
  5434                           
  5435                           ;eusart.c: 198: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  5436                           
  5437                           ;incstack = 0
  5438                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5439  0413  3008               	movlw	8
  5440  0414  0020               	movlb	0	; select bank0
  5441  0415  0262               	subwf	_eusartTxBufferRemaining,w	;volatile
  5442  0416  1803               	skipnc
  5443  0417  2C2D               	goto	i1l445
  5444                           
  5445                           ;eusart.c: 199: {
  5446                           ;eusart.c: 200: TXREG = eusartTxBuffer[eusartTxTail++];
  5447  0418  082C               	movf	_eusartTxTail,w
  5448  0419  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5449  041A  0086               	movwf	6
  5450  041B  0187               	clrf	7
  5451  041C  0801               	movf	1,w
  5452  041D  0023               	movlb	3	; select bank3
  5453  041E  009A               	movwf	26	;volatile
  5454  041F  3001               	movlw	1
  5455  0420  00F0               	movwf	??_EUSART_Transmit_ISR
  5456  0421  0870               	movf	??_EUSART_Transmit_ISR,w
  5457  0422  0020               	movlb	0	; select bank0
  5458  0423  07AC               	addwf	_eusartTxTail,f	;volatile
  5459                           
  5460                           ;eusart.c: 201: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  5461  0424  3008               	movlw	8
  5462  0425  022C               	subwf	_eusartTxTail,w	;volatile
  5463  0426  1803               	btfsc	3,0
  5464                           
  5465                           ;eusart.c: 202: {
  5466                           ;eusart.c: 203: eusartTxTail = 0;
  5467  0427  01AC               	clrf	_eusartTxTail	;volatile
  5468                           
  5469                           ;eusart.c: 204: }
  5470                           ;eusart.c: 205: eusartTxBufferRemaining++;
  5471  0428  3001               	movlw	1
  5472  0429  00F0               	movwf	??_EUSART_Transmit_ISR
  5473  042A  0870               	movf	??_EUSART_Transmit_ISR,w
  5474  042B  07E2               	addwf	_eusartTxBufferRemaining,f	;volatile
  5475                           
  5476                           ;eusart.c: 206: }
  5477  042C  0008               	return
  5478  042D                     i1l445:	
  5479                           
  5480                           ;eusart.c: 207: else
  5481                           ;eusart.c: 208: {
  5482                           ;eusart.c: 209: PIE1bits.TXIE = 0;
  5483  042D  0021               	movlb	1	; select bank1
  5484  042E  1211               	bcf	17,4	;volatile
  5485  042F  0008               	return
  5486  0430                     __end_of_EUSART_Transmit_ISR:	
  5487                           
  5488                           	psect	text44
  5489  029D                     __ptext44:	
  5490 ;; *************** function _EUSART_Receive_ISR *****************
  5491 ;; Defined at:
  5492 ;;		line 213 in file "mcc_generated_files/eusart.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    2
  5513 ;; This function calls:
  5514 ;;		Absolute function
  5515 ;;		_EUSART_DefaultErrorHandler
  5516 ;;		_EUSART_DefaultFramingErrorHandler
  5517 ;;		_EUSART_DefaultOverrunErrorHandler
  5518 ;;		_EUSART_RxDataHandler
  5519 ;; This function is called by:
  5520 ;;		_EUSART_Initialize
  5521 ;;		_INTERRUPT_InterruptManager
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           
  5526                           ;psect for function _EUSART_Receive_ISR
  5527  029D                     _EUSART_Receive_ISR:	
  5528                           
  5529                           ;eusart.c: 216: eusartRxStatusBuffer[eusartRxHead].status = 0;
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5533  029D  0020               	movlb	0	; select bank0
  5534  029E  082B               	movf	_eusartRxHead,w	;volatile
  5535  029F  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5536  02A0  0086               	movwf	6
  5537  02A1  0187               	clrf	7
  5538  02A2  0181               	clrf	1
  5539                           
  5540                           ;eusart.c: 218: if(RCSTAbits.FERR){
  5541  02A3  0023               	movlb	3	; select bank3
  5542  02A4  1D1D               	btfss	29,2	;volatile
  5543  02A5  2AB2               	goto	i1l2479
  5544                           
  5545                           ;eusart.c: 219: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5546  02A6  0020               	movlb	0	; select bank0
  5547  02A7  082B               	movf	_eusartRxHead,w	;volatile
  5548  02A8  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5549  02A9  0086               	movwf	6
  5550  02AA  0187               	clrf	7
  5551  02AB  1481               	bsf	1,1
  5552                           
  5553                           ;eusart.c: 220: EUSART_FramingErrorHandler();
  5554  02AC  0021               	movlb	1	; select bank1
  5555  02AD  0852               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  5556  02AE  008A               	movwf	10
  5557  02AF  0851               	movf	_EUSART_FramingErrorHandler^(0+128),w
  5558  02B0  000A               	callw
  5559  02B1  3182               	pagesel	$
  5560  02B2                     i1l2479:	
  5561                           
  5562                           ;eusart.c: 221: }
  5563                           ;eusart.c: 223: if(RCSTAbits.OERR){
  5564  02B2  0023               	movlb	3	; select bank3
  5565  02B3  1C9D               	btfss	29,1	;volatile
  5566  02B4  2AC1               	goto	i1l2485
  5567                           
  5568                           ;eusart.c: 224: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5569  02B5  0020               	movlb	0	; select bank0
  5570  02B6  082B               	movf	_eusartRxHead,w	;volatile
  5571  02B7  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5572  02B8  0086               	movwf	6
  5573  02B9  0187               	clrf	7
  5574  02BA  1501               	bsf	1,2
  5575                           
  5576                           ;eusart.c: 225: EUSART_OverrunErrorHandler();
  5577  02BB  0021               	movlb	1	; select bank1
  5578  02BC  0850               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  5579  02BD  008A               	movwf	10
  5580  02BE  084F               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  5581  02BF  000A               	callw
  5582  02C0  3182               	pagesel	$
  5583  02C1                     i1l2485:	
  5584                           
  5585                           ;eusart.c: 226: }
  5586                           ;eusart.c: 228: if(eusartRxStatusBuffer[eusartRxHead].status){
  5587  02C1  0020               	movlb	0	; select bank0
  5588  02C2  082B               	movf	_eusartRxHead,w	;volatile
  5589  02C3  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5590  02C4  0086               	movwf	6
  5591  02C5  0187               	clrf	7
  5592  02C6  0801               	movf	1,w
  5593  02C7  1903               	btfsc	3,2
  5594  02C8  2AD0               	goto	i1l2489
  5595                           
  5596                           ;eusart.c: 229: EUSART_ErrorHandler();
  5597  02C9  0021               	movlb	1	; select bank1
  5598  02CA  084E               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  5599  02CB  008A               	movwf	10
  5600  02CC  084D               	movf	_EUSART_ErrorHandler^(0+128),w
  5601  02CD  000A               	callw
  5602  02CE  3182               	pagesel	$
  5603                           
  5604                           ;eusart.c: 230: } else {
  5605  02CF  0008               	return
  5606  02D0                     i1l2489:	
  5607                           
  5608                           ;eusart.c: 231: EUSART_RxDataHandler();
  5609  02D0  3184  247D         	fcall	_EUSART_RxDataHandler
  5610  02D2  0008               	return
  5611  02D3                     __end_of_EUSART_Receive_ISR:	
  5612                           
  5613                           	psect	text45
  5614  0594                     __ptext45:	
  5615 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5616 ;; Defined at:
  5617 ;;		line 249 in file "mcc_generated_files/eusart.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		None
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;Total ram usage:        0 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; This function calls:
  5638 ;;		Nothing
  5639 ;; This function is called by:
  5640 ;;		_EUSART_Initialize
  5641 ;;		_EUSART_Receive_ISR
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5647  0594                     _EUSART_DefaultOverrunErrorHandler:	
  5648                           
  5649                           ;eusart.c: 252: RCSTAbits.CREN = 0;
  5650                           
  5651                           ;incstack = 0
  5652                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5653  0594  0023               	movlb	3	; select bank3
  5654  0595  121D               	bcf	29,4	;volatile
  5655                           
  5656                           ;eusart.c: 253: RCSTAbits.CREN = 1;
  5657  0596  161D               	bsf	29,4	;volatile
  5658  0597  0008               	return
  5659  0598                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  5660                           
  5661                           	psect	text46
  5662  05A3                     __ptext46:	
  5663 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5664 ;; Defined at:
  5665 ;;		line 247 in file "mcc_generated_files/eusart.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		None
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;Total ram usage:        0 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_EUSART_Initialize
  5689 ;;		_EUSART_Receive_ISR
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           
  5694                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5695  05A3                     _EUSART_DefaultFramingErrorHandler:	
  5696                           
  5697                           ;incstack = 0
  5698                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5699  05A3  0008               	return
  5700  05A4                     __end_of_EUSART_DefaultFramingErrorHandler:	
  5701                           
  5702                           	psect	text47
  5703  059E                     __ptext47:	
  5704 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5705 ;; Defined at:
  5706 ;;		line 257 in file "mcc_generated_files/eusart.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;Total ram usage:        0 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    1
  5727 ;; This function calls:
  5728 ;;		_EUSART_RxDataHandler
  5729 ;; This function is called by:
  5730 ;;		_EUSART_Initialize
  5731 ;;		_EUSART_Receive_ISR
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _EUSART_DefaultErrorHandler
  5737  059E                     _EUSART_DefaultErrorHandler:	
  5738                           
  5739                           ;eusart.c: 258: EUSART_RxDataHandler();
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5743  059E  3184  247D         	fcall	_EUSART_RxDataHandler
  5744  05A0  0008               	return
  5745  05A1                     __end_of_EUSART_DefaultErrorHandler:	
  5746                           
  5747                           	psect	text48
  5748  047D                     __ptext48:	
  5749 ;; *************** function _EUSART_RxDataHandler *****************
  5750 ;; Defined at:
  5751 ;;		line 237 in file "mcc_generated_files/eusart.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;Total ram usage:        1 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_EUSART_Receive_ISR
  5775 ;;		_EUSART_DefaultErrorHandler
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           
  5780                           ;psect for function _EUSART_RxDataHandler
  5781  047D                     _EUSART_RxDataHandler:	
  5782                           
  5783                           ;eusart.c: 239: eusartRxBuffer[eusartRxHead++] = RCREG;
  5784                           
  5785                           ;incstack = 0
  5786                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5787  047D  0023               	movlb	3	; select bank3
  5788  047E  0819               	movf	25,w	;volatile
  5789  047F  00F0               	movwf	??_EUSART_RxDataHandler
  5790  0480  0020               	movlb	0	; select bank0
  5791  0481  082B               	movf	_eusartRxHead,w
  5792  0482  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5793  0483  0086               	movwf	6
  5794  0484  0187               	clrf	7
  5795  0485  0870               	movf	??_EUSART_RxDataHandler,w
  5796  0486  0081               	movwf	1
  5797  0487  3001               	movlw	1
  5798  0488  00F0               	movwf	??_EUSART_RxDataHandler
  5799  0489  0870               	movf	??_EUSART_RxDataHandler,w
  5800  048A  07AB               	addwf	_eusartRxHead,f	;volatile
  5801                           
  5802                           ;eusart.c: 240: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5803  048B  3008               	movlw	8
  5804  048C  022B               	subwf	_eusartRxHead,w	;volatile
  5805  048D  1803               	btfsc	3,0
  5806                           
  5807                           ;eusart.c: 241: {
  5808                           ;eusart.c: 242: eusartRxHead = 0;
  5809  048E  01AB               	clrf	_eusartRxHead	;volatile
  5810                           
  5811                           ;eusart.c: 243: }
  5812                           ;eusart.c: 244: eusartRxCount++;
  5813  048F  3001               	movlw	1
  5814  0490  00F0               	movwf	??_EUSART_RxDataHandler
  5815  0491  0870               	movf	??_EUSART_RxDataHandler,w
  5816  0492  07A9               	addwf	_eusartRxCount,f	;volatile
  5817  0493  0008               	return
  5818  0494                     __end_of_EUSART_RxDataHandler:	
  5819  007E                     btemp	set	126	;btemp
  5820  007E                     int$flags	set	126
  5821  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    18
    Data        1
    BSS         71
    Persistent  20
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      71
    BANK1            80      9      51
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 12
		 -> LIN_rxPacket.data(BANK1[8]), LIN_rxPacket(BANK1[12]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), 
		 -> UNLOCK_Data(BANK0[1]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 11
		 -> LIN_packet(BANK0[11]), processLIN@tempRxData(BANK1[8]), 

    memset@p1	PTR void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), LIN_timerHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), LIN_timerHandler(), 

    LIN_sendPeriodicTx@periodicTx.data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_sendPeriodicTx@periodicTx	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[18]), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK1[8]), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    LIN_queuePacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule.data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[18]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), processLIN(), 

    LIN_init@table	const PTR const struct . size(2) Largest target is 21
		 -> scheduleTable(CODE[18]), 

    schedule	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[18]), 

    S22$data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    scheduleTable.data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _LIN_timerHandler->_LIN_sendPeriodicTx
    _LIN_sendPeriodicTx->_LIN_queuePacket
    _LIN_queuePacket->i1_LIN_getChecksum
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIN_handler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Master_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LIN_handler->_processLIN
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memset
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_sendPacket->_EUSART_Write
    _LIN_receivePacket->_LIN_getChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_ISR->_LIN_timerHandler
    _LIN_timerHandler->_LIN_sendPeriodicTx
    _LIN_sendPeriodicTx->_LIN_queuePacket

Critical Paths under _main in BANK1

    _LIN_handler->_processLIN

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2904
                                             20 BANK0      1     1      0
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     924
                  _EUSART_Initialize
              _LIN_Master_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     150
                                             10 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Master_Initialize                                0     0      0     344
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             6     2      4     344
                                             10 BANK0      6     2      4
                _LIN_setTimerHandler
                    _LIN_startPeriod
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_startPeriod                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     150
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     150
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     430
                                             10 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          1     1      0    1980
                                             19 BANK0      1     1      0
                   Absolute function *
                 _EUSART_is_rx_ready
                      _LIN_disableRx
                       _LIN_enableRx
                  _LIN_receivePacket
                     _LIN_sendPacket
                     _LIN_startTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                          10    10      0     861
                                             18 BANK0      1     1      0
                                              0 BANK1      9     9      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        3     3      0     796
                                             15 BANK0      3     3      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     698
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       2     2      0      44
                                              9 BANK0      2     2      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      1     1      0      22
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LIN_sendPacket                                       2     2      0      90
                                             10 BANK0      2     2      0
                       _EUSART_Write
                      _LIN_sendBreak
 ---------------------------------------------------------------------------------
 (3) _LIN_sendBreak                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_receivePacket                                    2     2      0     287
                                             14 BANK0      2     2      0
                        _EUSART_Read
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (3) _LIN_getChecksum                                      6     5      1     263
                                              8 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      24
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0    1317
                                              7 BANK0      1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0    1317
                   Absolute function *
                   _LIN_timerHandler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     1     1      0    1317
                                              6 BANK0      1     1      0
                 _LIN_sendPeriodicTx
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LIN_sendPeriodicTx                                   5     5      0    1317
                                             11 COMMON     3     3      0
                                              4 BANK0      2     2      0
                    _LIN_queuePacket
                             ___wmul
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     348
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) _LIN_queuePacket                                     9     8      1     857
                                              6 COMMON     5     4      1
                                              0 BANK0      4     4      0
                     _LIN_calcParity
                  i1_LIN_getChecksum
 ---------------------------------------------------------------------------------
 (11) i1_LIN_getChecksum                                   6     5      1     187
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (11) _LIN_calcParity                                      3     3      0     338
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_handler
     Absolute function(Fake) *
     _EUSART_is_rx_ready *
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_receivePacket *
       _EUSART_Read
       _LIN_getChecksum
     _LIN_sendPacket *
       _EUSART_Write
       _LIN_sendBreak
     _LIN_startTimer *
       _TMR0_WriteTimer
     _memset *
     _processLIN *
       _LIN_getPacket
         _memset
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _LIN_Master_Initialize
       _LIN_init
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_startPeriod
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _LIN_timerHandler *
       _LIN_sendPeriodicTx
         _LIN_queuePacket
           _LIN_calcParity
           i1_LIN_getChecksum
         ___wmul
       i1_LIN_stopTimer
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      9      33       7       63.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      88      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      88      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 14 20:44:38 2018

                ?_EUSART_SetRxInterruptHandler 004B                          __end_of_LIN_getPacket 03D1  
                        ??_LIN_setTimerHandler 004D                          __end_of_LIN_disableRx 0584  
                               _scheduleLength 0065                                    __CFG_CP$OFF 0000  
                                           l26 04D3                            ___wmul@multiplicand 0072  
                              _timer0ReloadVal 0063                                ?_LIN_calcParity 0070  
                                  __CFG_LVP$ON 0000                                            l124 0206  
                                          l135 0259                                            l162 0357  
                                          l439 03DE                                   __CFG_CPD$OFF 0000  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 004B  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                          __end_of_scheduleTable 04E6  
                                 ?_EUSART_Read 0070                                           l1611 03D3  
                                         l1721 02EB                                           l1625 03F2  
                                         l2417 01EC                                           l2453 0242  
                                         l2445 022E                                           l2437 021C  
                                         l2439 021F                                           l1577 0352  
                                         l1729 0301                                           l1587 0387  
                                         l1579 0335                                           l2459 024A  
                                         l1695 0319                                           l1943 0436  
                                         l1697 032C                                           _LATA 010C  
                                         _LATC 010E                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUC 020E  
                               _LIN_sendPacket 0303                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                          __end_of_LIN_sendBreak 059B  
                                         _main 04E6                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 002E  
                                processLIN@cmd 00CC                                  __CFG_MCLRE$ON 0000  
                     LIN_receivePacket@rxIndex 002F                        __end_of_TMR0_Initialize 04BF  
               ??_TMR0_DefaultInterruptHandler 0070                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 055D  
                                        ?_main 0070                                  __CFG_WDTE$OFF 0000  
                                        i1l111 00BB                                          i1l162 0381  
                                        i1l331 0010                                          i1l334 001E  
                                        i1l339 0029                                          i1l445 042D  
                              _TMR0_WriteTimer 0575                                          i1l591 0453  
                                        _RCREG 0199                                          u158m0 03BF  
                                        _RCSTA 019D                                          u80_20 0185  
                                        u80_22 0186                                          u81_20 018B  
                                        _TRISA 008C                                          _TRISC 008E  
                                        u90_24 01AE                                          u82_24 018C  
                                        u91_20 01B2                                          u83_20 0190  
                                        u91_22 01B3                                          u83_22 0191  
                                        u92_20 01B8                                          u84_20 0196  
                                        u92_22 01B9                                          u84_22 0197  
                                        u93_20 01BE                                          u85_20 019C  
                                        u94_24 01BF                                          u86_24 019D  
                                        u95_20 01C3                                          u87_20 01A1  
                                        u79_20 017F                                          u95_22 01C4  
                                        u87_22 01A2                                          u79_22 0180  
                                        u96_20 01C9                                          u88_20 01A7  
                                        u96_22 01CA                                          u88_22 01A8  
                                        u97_20 01CF                                          u89_20 01AD  
                                        _TXREG 019A                                          u98_24 01D0  
                                        u99_20 01D4                                          u99_22 01D5  
                             __end_of_LIN_init 047D                          __end_of_LIN_stopTimer 058C  
                                        _TXSTA 019E              __size_of_TMR0_SetInterruptHandler 0006  
                    ?_TMR0_SetInterruptHandler 004B                               __end_of_TMR0_ISR 0526  
                               _WDT_Initialize 0584                         __end_of_LIN_sendPacket 0330  
                                        pclath 000A                                 _LIN_startTimer 050A  
                                        status 0003                                          wtemp0 007E  
                       ?_LIN_Master_Initialize 0070                               ?_LIN_getChecksum 004B  
                  LIN_queuePacket@tempSchedule 0045                                __initialization 0030  
                    __size_of_LIN_timerHandler 001E                                   ?_LIN_handler 0070  
                                 __end_of_main 04F8                                 ??_EUSART_Write 004B  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 004D  
                                       ??_main 0057                                 __CFG_PLLEN$OFF 0000  
                       __end_of_WDT_Initialize 0588      __end_of_EUSART_DefaultFramingErrorHandler 05A4  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 05A3  
                   _EUSART_OverrunErrorHandler 00CF                         __end_of_LIN_startTimer 0518  
                              ?_LIN_sendPacket 0070                                         _ANSELA 018C  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 059E  
                                       _BORCON 0116                                         u100_20 01DA  
                                       u100_22 01DB                                         u101_20 01E0  
                                       u103_20 01E8                                         i1l1511 0063  
                                       i1l1523 00C1                                         i1l1525 00CF  
                                       i1l1509 004E                                         i1l1527 00FA  
                                       i1l1465 01E1                                         i1l1467 01E9  
                                       i1l1483 037C                                         i1l1539 044D  
                                       i1l1485 035F                                         i1l1637 013A  
                                       i1l1739 0404                                         i1l2485 02C1  
                                       u114_25 0454                                         i1l2479 02B2  
                                       i1l2489 02D0                                         u115_25 0459  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                              _LIN_processData 005C                                 __CFG_PWRTE$OFF 0000  
                  __size_of_LIN_sendPeriodicTx 0078                                         ___wmul 044B  
                               __CFG_STVREN$ON 0000                                _LIN_queuePacket 0047  
                      __end_of_TMR0_WriteTimer 057A                        i1LIN_getChecksum@length 0072  
                          _EUSART_Transmit_ISR 0413                               ?_TMR0_Initialize 0070  
                                       _memset 0430                             _LIN_enablePeriodTx 0064  
                              _LIN_startPeriod 058C                                ?_WDT_Initialize 0070  
     TMR0_SetInterruptHandler@InterruptHandler 004B                                ?_LIN_startTimer 0070  
                         ?_EUSART_Transmit_ISR 0070                           __size_of_EUSART_Read 0027  
                            _SYSTEM_Initialize 04F8                        __end_of__initialization 0043  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 056F  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0569  
                                    ?_LIN_init 004D                                 __pcstackCOMMON 0070  
                                ?_LIN_enableRx 0070                               ??_LIN_calcParity 0070  
                              LIN_sendPacket@i 004E                                   __pidataBANK0 05A1  
                          ??_SYSTEM_Initialize 0053                              _LIN_receivePacket 02D3  
                                LIN_init@table 004D                                      ?_TMR0_ISR 0070  
                           ?_LIN_receivePacket 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                            ??_LIN_receivePacket 0051  
              ??_EUSART_SetOverrunErrorHandler 004D                      __end_of_SYSTEM_Initialize 050A  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 03F5  
                     __size_ofi1_LIN_stopTimer 0004                    __end_of_LIN_setTimerHandler 0556  
                  __size_of_EUSART_Receive_ISR 0036                        __end_of_LIN_queuePacket 00FE  
                         LIN_handler@LIN_state 0030                      __end_of_LIN_receivePacket 0303  
                               ??_LIN_enableRx 004B                                     __pmaintext 04E6  
                             _LIN_timerHandler 03F5                                     ??_LIN_init 0051  
                          LIN_getChecksum@data 004B                  ?_EUSART_SetTxInterruptHandler 004B  
             _EUSART_TxDefaultInterruptHandler 0060               __end_of_TMR0_SetInterruptHandler 0569  
                                      ?___wmul 0070                                     ??_TMR0_ISR 007E  
                                   __pintentry 0004                               ?_TMR0_WriteTimer 0070  
                         __size_of_LIN_handler 006F                        __end_of_LIN_startPeriod 0590  
                                      _BAUDCON 019F                                        ?_memset 004B  
                                      _APFCON0 011D                                        _APFCON1 011E  
                 ??_EUSART_DefaultErrorHandler 0071                          LIN_getChecksum@length 004D  
                             _LIN_timerRunning 0033                                  _eusartRxCount 0029  
                                      u111_2m0 00B0                  __size_of_EUSART_RxDataHandler 0017  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 004D  
                       __size_of_LIN_getPacket 0025                         __size_of_LIN_disableRx 0005  
                      ??_LIN_Master_Initialize 0053                        LIN_getChecksum@checksum 004F  
          __size_of_EUSART_DefaultErrorHandler 0003                                __size_of___wmul 001B  
                    i1LIN_getChecksum@checksum 0074                                __size_of_memset 001B  
                                      __ptext1 04F8                                        __ptext2 0584  
                                      __ptext3 04AA                                        __ptext4 0494  
                                      __ptext5 0556                                        __ptext6 0526  
                                      __ptext7 0466                                        __ptext8 0588  
                                      __ptext9 058C                         __size_of_LIN_sendBreak 0003  
                        _OSCILLATOR_Initialize 0556                               ??_LIN_sendPacket 004D  
                     ??_PIN_MANAGER_Initialize 004B                     __size_of_SYSTEM_Initialize 0012  
                                      clrloop0 055E                           end_of_initialization 0043  
        __end_of_EUSART_SetOverrunErrorHandler 053C         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0533                                        memset@c 004B  
                                      memset@n 004D                                        memset@p 0050  
                                    _LFRX_Data 00BC                              _EUSART_Initialize 025A  
                             ?_LIN_queuePacket 0076                     __size_of_LIN_receivePacket 0030  
                           ?_EUSART_Initialize 0070                         __size_of_LIN_stopTimer 0004  
                            i1_LIN_getChecksum 035B                                      _RCSTAbits 019D  
                            ??i1_LIN_stopTimer 0070                             _EUSART_is_rx_ready 059B  
                                _LIN_getPacket 03AC                                   __pstringtext 04D4  
                           ?i1_LIN_getChecksum 0070                                  _LIN_disableRx 057F  
                             ?_LIN_startPeriod 0070                       __size_of_LIN_getChecksum 002B  
                          ??_EUSART_Initialize 004D                               ??_WDT_Initialize 004B  
               ??_EUSART_SetTxInterruptHandler 004D                              LIN_getPacket@data 0053  
                     _TMR0_SetInterruptHandler 0563                            ?_EUSART_is_rx_ready 0070  
                                   _processLIN 04BF                            ??i1_LIN_getChecksum 0071  
                          LIN_init@tableLength 0052                               ??_LIN_startTimer 004C  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 0024  
                                    _RSSI_Data 0041                           __end_of_LIN_enableRx 057F  
                                _scheduleTable 04D4                __size_of_EUSART_SetErrorHandler 0009  
                 LIN_sendPeriodicTx@periodicTx 0047                      __end_of_EUSART_Initialize 029D  
                         ??_EUSART_is_rx_ready 004B                     __end_of_LIN_sendPeriodicTx 0176  
                                _LIN_sendBreak 0598                                      _TXSTAbits 019E  
                    __end_ofi1_LIN_getChecksum 0385                                 ?_LIN_getPacket 0070  
                               ?_LIN_disableRx 0070                              __size_of_LIN_init 0017  
           __end_of_EUSART_DefaultErrorHandler 05A1                     _EUSART_DefaultErrorHandler 059E  
                               __end_of___wmul 0466                                   _EUSART_Write 03D1  
                            __size_of_TMR0_ISR 000E                         ?_OSCILLATOR_Initialize 0070  
              LIN_sendPeriodicTx@scheduleIndex 002E                                 __end_of_memset 044B  
                          start_initialization 0030                                  _LIN_stopTimer 0588  
                     __size_of_TMR0_Initialize 0015                __size_of_PIN_MANAGER_Initialize 0016  
                     __end_of_LIN_timerHandler 0413                                  ??_EUSART_Read 004B  
 EUSART_SetRxInterruptHandler@interruptHandler 004B   EUSART_SetTxInterruptHandler@interruptHandler 004B  
                        LIN_startTimer@timeout 004D                                 ?_LIN_sendBreak 0070  
                            LIN_calcParity@CMD 0071                 ?_EUSART_SetOverrunErrorHandler 004B  
                            LIN_calcParity@PID 0072                     _EUSART_FramingErrorHandler 00D1  
                                     ??___wmul 0074                         _EUSART_SetErrorHandler 0545  
                                  __pdataBANK0 0066                                       ??_memset 004F  
                         processLIN@tempRxData 00C4                                    ?_processLIN 0070  
                          LIN_init@processData 004F                    __end_of_EUSART_Transmit_ISR 0430  
                               ?_LIN_stopTimer 0070                                      ___latbits 0002  
                                __pcstackBANK0 0043                                  __pcstackBANK1 00C4  
                            ??_LIN_getChecksum 004C                     __end_of_EUSART_Receive_ISR 02D3  
                   __size_of_EUSART_Initialize 0043                              _LIN_timerCallBack 0032  
             _EUSART_RxDefaultInterruptHandler 005E                 __size_of_LIN_Master_Initialize 000D  
                          __end_of_EUSART_Read 03AC                  __end_of_LIN_Master_Initialize 0533  
                        _TMR0_InterruptHandler 0058                                      __pnvBANK0 0058  
                                    __pnvBANK1 00CD                     __size_ofi1_LIN_getChecksum 002A  
                 __end_of_EUSART_RxDataHandler 0494                                ??_LIN_getPacket 0052  
                       _PIN_MANAGER_Initialize 0494                                  ??_LIN_handler 0056  
                             LIN_getChecksum@i 004E                                ??_LIN_disableRx 004B  
                         EUSART_Read@readValue 004C                   __size_of_LIN_setTimerHandler 0008  
                                 _eusartRxHead 002B                                   _eusartTxHead 002D  
                                 _eusartRxTail 002A                                   _eusartTxTail 002C  
                 ??_INTERRUPT_InterruptManager 004A                          __size_of_LIN_enableRx 0005  
                      _eusartTxBufferRemaining 0062                        __size_of_LIN_calcParity 0075  
                     __size_of_TMR0_WriteTimer 0005                                ??_LIN_sendBreak 004B  
                              i1_LIN_stopTimer 0590                                 _eusartRxBuffer 00A0  
                            ??_TMR0_Initialize 004D                                 _eusartTxBuffer 00A8  
                               ___wmul@product 0074         EUSART_SetErrorHandler@interruptHandler 004B  
                                    clear_ram0 055D                            __size_of_processLIN 0015  
                                     _PIE1bits 0091                              _eusartRxLastError 0028  
          __size_of_INTERRUPT_InterruptManager 002A                     ??_TMR0_SetInterruptHandler 004D  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 004D  
                                     _LIN_init 0466                                   _LIN_enableRx 057A  
                                     _TMR0_ISR 0518      __end_of_EUSART_DefaultOverrunErrorHandler 0598  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0594  
                             LIN_getPacket@cmd 0054                            __end_of_LIN_handler 025A  
                            ___wmul@multiplier 0070                                ??_LIN_stopTimer 004B  
                                 _LIN_rxPacket 00B0                                    _EUSART_Read 0385  
                           _LIN_periodCallBack 0031                          i1LIN_getChecksum@data 0070  
                      ??_OSCILLATOR_Initialize 004B                            _EUSART_ErrorHandler 00CD  
                     __size_of_LIN_queuePacket 00B7                    ?_EUSART_DefaultErrorHandler 0070  
                           _LIN_sendPeriodicTx 00FE                        __end_ofi1_LIN_stopTimer 0594  
                          ?_LIN_sendPeriodicTx 0070                       __size_of_LIN_startPeriod 0004  
                         _EUSART_RxDataHandler 047D                                       __ptext10 054E  
                                     __ptext11 0563                                       __ptext20 03AC  
                                     __ptext12 025A                                       __ptext21 0430  
                                     __ptext13 0569                                       __ptext30 057A  
                                     __ptext22 050A                                       __ptext14 056F  
                                     __ptext31 057F                                       __ptext23 0575  
                                     __ptext15 0533                                       __ptext40 0047  
                                     __ptext32 059B                                       __ptext24 0303  
                                     __ptext16 053C                                       __ptext41 035B  
                                     __ptext25 0598                                       __ptext17 0545  
                                     __ptext42 0176                                       __ptext34 0518  
                                     __ptext26 03D1                                       __ptext18 01EB  
                                     __ptext43 0413                                       __ptext35 03F5  
                                     __ptext27 02D3                                       __ptext19 04BF  
                                     __ptext44 029D                                       __ptext36 05A2  
                                     __ptext28 0330                                       __ptext45 0594  
                                     __ptext37 0590                                       __ptext29 0385  
                                     __ptext46 05A3                                       __ptext38 00FE  
                                     __ptext47 059E                                       __ptext39 044B  
                                     __ptext48 047D                              ?_LIN_timerHandler 0070  
                      TMR0_WriteTimer@timerVal 004B                             ??_LIN_timerHandler 0049  
                            ??_TMR0_WriteTimer 004B                             i1LIN_getChecksum@i 0073  
                      __size_of_LIN_sendPacket 002D                    __size_of_EUSART_is_rx_ready 0003  
                                __size_of_main 0012           __end_of_TMR0_DefaultInterruptHandler 05A3  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 05A2  
                                     _schedule 005A                        ?_EUSART_SetErrorHandler 004B  
                         ??_LIN_sendPeriodicTx 007B  EUSART_SetOverrunErrorHandler@interruptHandler 004B  
                                  _LIN_handler 01EB                                       int$flags 007E  
                              _LIN_getChecksum 0330             __end_of_INTERRUPT_InterruptManager 002E  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0545  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 053C  
                                 ??_processLIN 0055                                    _LIN_txReady 0035  
                                  _LIN_timeout 0066                                 _LIN_calcParity 0176  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                          LIN_queuePacket@data 0076                                       memset@p1 0051  
                      __size_of_WDT_Initialize 0004                            _LIN_setTimerHandler 054E  
                                     intlevel1 0000                        __size_of_LIN_startTimer 000E  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 054E  
                            __CFG_CLKOUTEN$OFF 0000                             __end_of_processLIN 04D4  
         __end_of_EUSART_SetRxInterruptHandler 0575          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 056F                  ?_TMR0_DefaultInterruptHandler 0070  
                                   _LIN_packet 0036                             _EUSART_Receive_ISR 029D  
                         ?_LIN_setTimerHandler 0070                                     _LIN_period 0034  
EUSART_SetFramingErrorHandler@interruptHandler 004B                         __end_of_LIN_calcParity 01EB  
                           LIN_queuePacket@cmd 0043                                     _OPTION_REG 0095  
                          ?_EUSART_Receive_ISR 0070                                _TMR0_Initialize 04AA  
                                  _UNLOCK_Data 0042                              ??_LIN_queuePacket 0077  
                             ?i1_LIN_stopTimer 0070                             EUSART_Write@txData 004C  
                 __size_of_EUSART_Transmit_ISR 001D                 __end_of_PIN_MANAGER_Initialize 04AA  
                            ??_LIN_startPeriod 004B                               LIN_queuePacket@i 0044  
                         ??_EUSART_Receive_ISR 0071                        __end_of_LIN_getChecksum 035B  
                        _LIN_Master_Initialize 0526  
