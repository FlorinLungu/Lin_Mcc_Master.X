

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 14 20:58:04 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 1.41
    73                           ; Generated 25/01/2017 GMT
    74                           ; 
    75                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F1825 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000E                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008E                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  010C                     	;# 
   151  010E                     	;# 
   152  0111                     	;# 
   153  0112                     	;# 
   154  0113                     	;# 
   155  0114                     	;# 
   156  0115                     	;# 
   157  0116                     	;# 
   158  0117                     	;# 
   159  0118                     	;# 
   160  0119                     	;# 
   161  011A                     	;# 
   162  011B                     	;# 
   163  011D                     	;# 
   164  011E                     	;# 
   165  018C                     	;# 
   166  018E                     	;# 
   167  0191                     	;# 
   168  0191                     	;# 
   169  0192                     	;# 
   170  0193                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0199                     	;# 
   177  019A                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019C                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020E                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0216                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0217                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0294                     	;# 
   206  0295                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0298                     	;# 
   210  0298                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  029B                     	;# 
   214  029C                     	;# 
   215  029D                     	;# 
   216  029E                     	;# 
   217  0311                     	;# 
   218  0311                     	;# 
   219  0312                     	;# 
   220  0313                     	;# 
   221  0318                     	;# 
   222  0318                     	;# 
   223  0319                     	;# 
   224  031A                     	;# 
   225  038C                     	;# 
   226  038E                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  0393                     	;# 
   230  039A                     	;# 
   231  039C                     	;# 
   232  039D                     	;# 
   233  039E                     	;# 
   234  039F                     	;# 
   235  0415                     	;# 
   236  0416                     	;# 
   237  0417                     	;# 
   238  041C                     	;# 
   239  041D                     	;# 
   240  041E                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000E                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  008C                     	;# 
   281  008E                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  010C                     	;# 
   297  010E                     	;# 
   298  0111                     	;# 
   299  0112                     	;# 
   300  0113                     	;# 
   301  0114                     	;# 
   302  0115                     	;# 
   303  0116                     	;# 
   304  0117                     	;# 
   305  0118                     	;# 
   306  0119                     	;# 
   307  011A                     	;# 
   308  011B                     	;# 
   309  011D                     	;# 
   310  011E                     	;# 
   311  018C                     	;# 
   312  018E                     	;# 
   313  0191                     	;# 
   314  0191                     	;# 
   315  0192                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0194                     	;# 
   320  0195                     	;# 
   321  0196                     	;# 
   322  0199                     	;# 
   323  019A                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019E                     	;# 
   329  019F                     	;# 
   330  020C                     	;# 
   331  020E                     	;# 
   332  0211                     	;# 
   333  0211                     	;# 
   334  0212                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0213                     	;# 
   338  0214                     	;# 
   339  0214                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0216                     	;# 
   344  0216                     	;# 
   345  0217                     	;# 
   346  0217                     	;# 
   347  0291                     	;# 
   348  0291                     	;# 
   349  0292                     	;# 
   350  0293                     	;# 
   351  0294                     	;# 
   352  0295                     	;# 
   353  0295                     	;# 
   354  0296                     	;# 
   355  0298                     	;# 
   356  0298                     	;# 
   357  0299                     	;# 
   358  029A                     	;# 
   359  029B                     	;# 
   360  029C                     	;# 
   361  029D                     	;# 
   362  029E                     	;# 
   363  0311                     	;# 
   364  0311                     	;# 
   365  0312                     	;# 
   366  0313                     	;# 
   367  0318                     	;# 
   368  0318                     	;# 
   369  0319                     	;# 
   370  031A                     	;# 
   371  038C                     	;# 
   372  038E                     	;# 
   373  0391                     	;# 
   374  0392                     	;# 
   375  0393                     	;# 
   376  039A                     	;# 
   377  039C                     	;# 
   378  039D                     	;# 
   379  039E                     	;# 
   380  039F                     	;# 
   381  0415                     	;# 
   382  0416                     	;# 
   383  0417                     	;# 
   384  041C                     	;# 
   385  041D                     	;# 
   386  041E                     	;# 
   387  0FE4                     	;# 
   388  0FE5                     	;# 
   389  0FE6                     	;# 
   390  0FE7                     	;# 
   391  0FE8                     	;# 
   392  0FE9                     	;# 
   393  0FEA                     	;# 
   394  0FEB                     	;# 
   395  0FED                     	;# 
   396  0FEE                     	;# 
   397  0FEF                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000E                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  008C                     	;# 
   427  008E                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  010C                     	;# 
   443  010E                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011D                     	;# 
   456  011E                     	;# 
   457  018C                     	;# 
   458  018E                     	;# 
   459  0191                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0199                     	;# 
   469  019A                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019C                     	;# 
   473  019D                     	;# 
   474  019E                     	;# 
   475  019F                     	;# 
   476  020C                     	;# 
   477  020E                     	;# 
   478  0211                     	;# 
   479  0211                     	;# 
   480  0212                     	;# 
   481  0212                     	;# 
   482  0213                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0214                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0216                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0217                     	;# 
   493  0291                     	;# 
   494  0291                     	;# 
   495  0292                     	;# 
   496  0293                     	;# 
   497  0294                     	;# 
   498  0295                     	;# 
   499  0295                     	;# 
   500  0296                     	;# 
   501  0298                     	;# 
   502  0298                     	;# 
   503  0299                     	;# 
   504  029A                     	;# 
   505  029B                     	;# 
   506  029C                     	;# 
   507  029D                     	;# 
   508  029E                     	;# 
   509  0311                     	;# 
   510  0311                     	;# 
   511  0312                     	;# 
   512  0313                     	;# 
   513  0318                     	;# 
   514  0318                     	;# 
   515  0319                     	;# 
   516  031A                     	;# 
   517  038C                     	;# 
   518  038E                     	;# 
   519  0391                     	;# 
   520  0392                     	;# 
   521  0393                     	;# 
   522  039A                     	;# 
   523  039C                     	;# 
   524  039D                     	;# 
   525  039E                     	;# 
   526  039F                     	;# 
   527  0415                     	;# 
   528  0416                     	;# 
   529  0417                     	;# 
   530  041C                     	;# 
   531  041D                     	;# 
   532  041E                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000E                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001C                     	;# 
   570  001E                     	;# 
   571  001F                     	;# 
   572  008C                     	;# 
   573  008E                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0095                     	;# 
   578  0096                     	;# 
   579  0097                     	;# 
   580  0098                     	;# 
   581  0099                     	;# 
   582  009A                     	;# 
   583  009B                     	;# 
   584  009B                     	;# 
   585  009C                     	;# 
   586  009D                     	;# 
   587  009E                     	;# 
   588  010C                     	;# 
   589  010E                     	;# 
   590  0111                     	;# 
   591  0112                     	;# 
   592  0113                     	;# 
   593  0114                     	;# 
   594  0115                     	;# 
   595  0116                     	;# 
   596  0117                     	;# 
   597  0118                     	;# 
   598  0119                     	;# 
   599  011A                     	;# 
   600  011B                     	;# 
   601  011D                     	;# 
   602  011E                     	;# 
   603  018C                     	;# 
   604  018E                     	;# 
   605  0191                     	;# 
   606  0191                     	;# 
   607  0192                     	;# 
   608  0193                     	;# 
   609  0193                     	;# 
   610  0193                     	;# 
   611  0194                     	;# 
   612  0195                     	;# 
   613  0196                     	;# 
   614  0199                     	;# 
   615  019A                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019D                     	;# 
   620  019E                     	;# 
   621  019F                     	;# 
   622  020C                     	;# 
   623  020E                     	;# 
   624  0211                     	;# 
   625  0211                     	;# 
   626  0212                     	;# 
   627  0212                     	;# 
   628  0213                     	;# 
   629  0213                     	;# 
   630  0214                     	;# 
   631  0214                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0216                     	;# 
   636  0216                     	;# 
   637  0217                     	;# 
   638  0217                     	;# 
   639  0291                     	;# 
   640  0291                     	;# 
   641  0292                     	;# 
   642  0293                     	;# 
   643  0294                     	;# 
   644  0295                     	;# 
   645  0295                     	;# 
   646  0296                     	;# 
   647  0298                     	;# 
   648  0298                     	;# 
   649  0299                     	;# 
   650  029A                     	;# 
   651  029B                     	;# 
   652  029C                     	;# 
   653  029D                     	;# 
   654  029E                     	;# 
   655  0311                     	;# 
   656  0311                     	;# 
   657  0312                     	;# 
   658  0313                     	;# 
   659  0318                     	;# 
   660  0318                     	;# 
   661  0319                     	;# 
   662  031A                     	;# 
   663  038C                     	;# 
   664  038E                     	;# 
   665  0391                     	;# 
   666  0392                     	;# 
   667  0393                     	;# 
   668  039A                     	;# 
   669  039C                     	;# 
   670  039D                     	;# 
   671  039E                     	;# 
   672  039F                     	;# 
   673  0415                     	;# 
   674  0416                     	;# 
   675  0417                     	;# 
   676  041C                     	;# 
   677  041D                     	;# 
   678  041E                     	;# 
   679  0FE4                     	;# 
   680  0FE5                     	;# 
   681  0FE6                     	;# 
   682  0FE7                     	;# 
   683  0FE8                     	;# 
   684  0FE9                     	;# 
   685  0FEA                     	;# 
   686  0FEB                     	;# 
   687  0FED                     	;# 
   688  0FEE                     	;# 
   689  0FEF                     	;# 
   690  0000                     	;# 
   691  0001                     	;# 
   692  0002                     	;# 
   693  0003                     	;# 
   694  0004                     	;# 
   695  0005                     	;# 
   696  0006                     	;# 
   697  0007                     	;# 
   698  0008                     	;# 
   699  0009                     	;# 
   700  000A                     	;# 
   701  000B                     	;# 
   702  000C                     	;# 
   703  000E                     	;# 
   704  0011                     	;# 
   705  0012                     	;# 
   706  0013                     	;# 
   707  0015                     	;# 
   708  0016                     	;# 
   709  0016                     	;# 
   710  0017                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001B                     	;# 
   715  001C                     	;# 
   716  001E                     	;# 
   717  001F                     	;# 
   718  008C                     	;# 
   719  008E                     	;# 
   720  0091                     	;# 
   721  0092                     	;# 
   722  0093                     	;# 
   723  0095                     	;# 
   724  0096                     	;# 
   725  0097                     	;# 
   726  0098                     	;# 
   727  0099                     	;# 
   728  009A                     	;# 
   729  009B                     	;# 
   730  009B                     	;# 
   731  009C                     	;# 
   732  009D                     	;# 
   733  009E                     	;# 
   734  010C                     	;# 
   735  010E                     	;# 
   736  0111                     	;# 
   737  0112                     	;# 
   738  0113                     	;# 
   739  0114                     	;# 
   740  0115                     	;# 
   741  0116                     	;# 
   742  0117                     	;# 
   743  0118                     	;# 
   744  0119                     	;# 
   745  011A                     	;# 
   746  011B                     	;# 
   747  011D                     	;# 
   748  011E                     	;# 
   749  018C                     	;# 
   750  018E                     	;# 
   751  0191                     	;# 
   752  0191                     	;# 
   753  0192                     	;# 
   754  0193                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0194                     	;# 
   758  0195                     	;# 
   759  0196                     	;# 
   760  0199                     	;# 
   761  019A                     	;# 
   762  019B                     	;# 
   763  019B                     	;# 
   764  019C                     	;# 
   765  019D                     	;# 
   766  019E                     	;# 
   767  019F                     	;# 
   768  020C                     	;# 
   769  020E                     	;# 
   770  0211                     	;# 
   771  0211                     	;# 
   772  0212                     	;# 
   773  0212                     	;# 
   774  0213                     	;# 
   775  0213                     	;# 
   776  0214                     	;# 
   777  0214                     	;# 
   778  0215                     	;# 
   779  0215                     	;# 
   780  0215                     	;# 
   781  0216                     	;# 
   782  0216                     	;# 
   783  0217                     	;# 
   784  0217                     	;# 
   785  0291                     	;# 
   786  0291                     	;# 
   787  0292                     	;# 
   788  0293                     	;# 
   789  0294                     	;# 
   790  0295                     	;# 
   791  0295                     	;# 
   792  0296                     	;# 
   793  0298                     	;# 
   794  0298                     	;# 
   795  0299                     	;# 
   796  029A                     	;# 
   797  029B                     	;# 
   798  029C                     	;# 
   799  029D                     	;# 
   800  029E                     	;# 
   801  0311                     	;# 
   802  0311                     	;# 
   803  0312                     	;# 
   804  0313                     	;# 
   805  0318                     	;# 
   806  0318                     	;# 
   807  0319                     	;# 
   808  031A                     	;# 
   809  038C                     	;# 
   810  038E                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  0393                     	;# 
   814  039A                     	;# 
   815  039C                     	;# 
   816  039D                     	;# 
   817  039E                     	;# 
   818  039F                     	;# 
   819  0415                     	;# 
   820  0416                     	;# 
   821  0417                     	;# 
   822  041C                     	;# 
   823  041D                     	;# 
   824  041E                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000E                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0013                     	;# 
   853  0015                     	;# 
   854  0016                     	;# 
   855  0016                     	;# 
   856  0017                     	;# 
   857  0018                     	;# 
   858  0019                     	;# 
   859  001A                     	;# 
   860  001B                     	;# 
   861  001C                     	;# 
   862  001E                     	;# 
   863  001F                     	;# 
   864  008C                     	;# 
   865  008E                     	;# 
   866  0091                     	;# 
   867  0092                     	;# 
   868  0093                     	;# 
   869  0095                     	;# 
   870  0096                     	;# 
   871  0097                     	;# 
   872  0098                     	;# 
   873  0099                     	;# 
   874  009A                     	;# 
   875  009B                     	;# 
   876  009B                     	;# 
   877  009C                     	;# 
   878  009D                     	;# 
   879  009E                     	;# 
   880  010C                     	;# 
   881  010E                     	;# 
   882  0111                     	;# 
   883  0112                     	;# 
   884  0113                     	;# 
   885  0114                     	;# 
   886  0115                     	;# 
   887  0116                     	;# 
   888  0117                     	;# 
   889  0118                     	;# 
   890  0119                     	;# 
   891  011A                     	;# 
   892  011B                     	;# 
   893  011D                     	;# 
   894  011E                     	;# 
   895  018C                     	;# 
   896  018E                     	;# 
   897  0191                     	;# 
   898  0191                     	;# 
   899  0192                     	;# 
   900  0193                     	;# 
   901  0193                     	;# 
   902  0193                     	;# 
   903  0194                     	;# 
   904  0195                     	;# 
   905  0196                     	;# 
   906  0199                     	;# 
   907  019A                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019C                     	;# 
   911  019D                     	;# 
   912  019E                     	;# 
   913  019F                     	;# 
   914  020C                     	;# 
   915  020E                     	;# 
   916  0211                     	;# 
   917  0211                     	;# 
   918  0212                     	;# 
   919  0212                     	;# 
   920  0213                     	;# 
   921  0213                     	;# 
   922  0214                     	;# 
   923  0214                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0216                     	;# 
   928  0216                     	;# 
   929  0217                     	;# 
   930  0217                     	;# 
   931  0291                     	;# 
   932  0291                     	;# 
   933  0292                     	;# 
   934  0293                     	;# 
   935  0294                     	;# 
   936  0295                     	;# 
   937  0295                     	;# 
   938  0296                     	;# 
   939  0298                     	;# 
   940  0298                     	;# 
   941  0299                     	;# 
   942  029A                     	;# 
   943  029B                     	;# 
   944  029C                     	;# 
   945  029D                     	;# 
   946  029E                     	;# 
   947  0311                     	;# 
   948  0311                     	;# 
   949  0312                     	;# 
   950  0313                     	;# 
   951  0318                     	;# 
   952  0318                     	;# 
   953  0319                     	;# 
   954  031A                     	;# 
   955  038C                     	;# 
   956  038E                     	;# 
   957  0391                     	;# 
   958  0392                     	;# 
   959  0393                     	;# 
   960  039A                     	;# 
   961  039C                     	;# 
   962  039D                     	;# 
   963  039E                     	;# 
   964  039F                     	;# 
   965  0415                     	;# 
   966  0416                     	;# 
   967  0417                     	;# 
   968  041C                     	;# 
   969  041D                     	;# 
   970  041E                     	;# 
   971  0FE4                     	;# 
   972  0FE5                     	;# 
   973  0FE6                     	;# 
   974  0FE7                     	;# 
   975  0FE8                     	;# 
   976  0FE9                     	;# 
   977  0FEA                     	;# 
   978  0FEB                     	;# 
   979  0FED                     	;# 
   980  0FEE                     	;# 
   981  0FEF                     	;# 
   982  0000                     	;# 
   983  0001                     	;# 
   984  0002                     	;# 
   985  0003                     	;# 
   986  0004                     	;# 
   987  0005                     	;# 
   988  0006                     	;# 
   989  0007                     	;# 
   990  0008                     	;# 
   991  0009                     	;# 
   992  000A                     	;# 
   993  000B                     	;# 
   994  000C                     	;# 
   995  000E                     	;# 
   996  0011                     	;# 
   997  0012                     	;# 
   998  0013                     	;# 
   999  0015                     	;# 
  1000  0016                     	;# 
  1001  0016                     	;# 
  1002  0017                     	;# 
  1003  0018                     	;# 
  1004  0019                     	;# 
  1005  001A                     	;# 
  1006  001B                     	;# 
  1007  001C                     	;# 
  1008  001E                     	;# 
  1009  001F                     	;# 
  1010  008C                     	;# 
  1011  008E                     	;# 
  1012  0091                     	;# 
  1013  0092                     	;# 
  1014  0093                     	;# 
  1015  0095                     	;# 
  1016  0096                     	;# 
  1017  0097                     	;# 
  1018  0098                     	;# 
  1019  0099                     	;# 
  1020  009A                     	;# 
  1021  009B                     	;# 
  1022  009B                     	;# 
  1023  009C                     	;# 
  1024  009D                     	;# 
  1025  009E                     	;# 
  1026  010C                     	;# 
  1027  010E                     	;# 
  1028  0111                     	;# 
  1029  0112                     	;# 
  1030  0113                     	;# 
  1031  0114                     	;# 
  1032  0115                     	;# 
  1033  0116                     	;# 
  1034  0117                     	;# 
  1035  0118                     	;# 
  1036  0119                     	;# 
  1037  011A                     	;# 
  1038  011B                     	;# 
  1039  011D                     	;# 
  1040  011E                     	;# 
  1041  018C                     	;# 
  1042  018E                     	;# 
  1043  0191                     	;# 
  1044  0191                     	;# 
  1045  0192                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0193                     	;# 
  1049  0194                     	;# 
  1050  0195                     	;# 
  1051  0196                     	;# 
  1052  0199                     	;# 
  1053  019A                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019C                     	;# 
  1057  019D                     	;# 
  1058  019E                     	;# 
  1059  019F                     	;# 
  1060  020C                     	;# 
  1061  020E                     	;# 
  1062  0211                     	;# 
  1063  0211                     	;# 
  1064  0212                     	;# 
  1065  0212                     	;# 
  1066  0213                     	;# 
  1067  0213                     	;# 
  1068  0214                     	;# 
  1069  0214                     	;# 
  1070  0215                     	;# 
  1071  0215                     	;# 
  1072  0215                     	;# 
  1073  0216                     	;# 
  1074  0216                     	;# 
  1075  0217                     	;# 
  1076  0217                     	;# 
  1077  0291                     	;# 
  1078  0291                     	;# 
  1079  0292                     	;# 
  1080  0293                     	;# 
  1081  0294                     	;# 
  1082  0295                     	;# 
  1083  0295                     	;# 
  1084  0296                     	;# 
  1085  0298                     	;# 
  1086  0298                     	;# 
  1087  0299                     	;# 
  1088  029A                     	;# 
  1089  029B                     	;# 
  1090  029C                     	;# 
  1091  029D                     	;# 
  1092  029E                     	;# 
  1093  0311                     	;# 
  1094  0311                     	;# 
  1095  0312                     	;# 
  1096  0313                     	;# 
  1097  0318                     	;# 
  1098  0318                     	;# 
  1099  0319                     	;# 
  1100  031A                     	;# 
  1101  038C                     	;# 
  1102  038E                     	;# 
  1103  0391                     	;# 
  1104  0392                     	;# 
  1105  0393                     	;# 
  1106  039A                     	;# 
  1107  039C                     	;# 
  1108  039D                     	;# 
  1109  039E                     	;# 
  1110  039F                     	;# 
  1111  0415                     	;# 
  1112  0416                     	;# 
  1113  0417                     	;# 
  1114  041C                     	;# 
  1115  041D                     	;# 
  1116  041E                     	;# 
  1117  0FE4                     	;# 
  1118  0FE5                     	;# 
  1119  0FE6                     	;# 
  1120  0FE7                     	;# 
  1121  0FE8                     	;# 
  1122  0FE9                     	;# 
  1123  0FEA                     	;# 
  1124  0FEB                     	;# 
  1125  0FED                     	;# 
  1126  0FEE                     	;# 
  1127  0FEF                     	;# 
  1128                           
  1129                           	psect	idataBANK0
  1130  07AC                     __pidataBANK0:	
  1131                           
  1132                           ;initializer for _LIN_timeout
  1133  07AC  340A               	retlw	10
  1134                           
  1135                           	psect	stringtext
  1136  06EB                     __pstringtext:	
  1137  06EB                     _scheduleTable:	
  1138  06EB  3400               	retlw	0
  1139  06EC  3400               	retlw	0
  1140  06ED  3401               	retlw	1
  1141  06EE  3400               	retlw	0
  1142  06EF  3464               	retlw	100
  1143  06F0  3442               	retlw	low (_UNLOCK_Data| 0)
  1144  06F1  3401               	retlw	1
  1145  06F2  3400               	retlw	0
  1146  06F3  3401               	retlw	1
  1147  06F4  3400               	retlw	0
  1148  06F5  3414               	retlw	20
  1149  06F6  3441               	retlw	low (_RSSI_Data| 0)
  1150  06F7  3402               	retlw	2
  1151  06F8  3401               	retlw	1
  1152  06F9  3408               	retlw	8
  1153  06FA  3464               	retlw	100
  1154  06FB  3400               	retlw	0
  1155  06FC  34BC               	retlw	low (_LFRX_Data| 0)
  1156  06FD                     __end_of_scheduleTable:	
  1157                           
  1158                           	psect	nvBANK0
  1159  005F                     __pnvBANK0:	
  1160  005F                     _TMR0_InterruptHandler:	
  1161  005F                     	ds	2
  1162  0061                     _schedule:	
  1163  0061                     	ds	2
  1164  0063                     _eusartTxBufferRemaining:	
  1165  0063                     	ds	1
  1166  0064                     _timer0ReloadVal:	
  1167  0064                     	ds	1
  1168  0065                     _LIN_enablePeriodTx:	
  1169  0065                     	ds	1
  1170  0066                     _scheduleLength:	
  1171  0066                     	ds	1
  1172                           
  1173                           	psect	nvBANK1
  1174  00C4                     __pnvBANK1:	
  1175  00C4                     _EUSART_ErrorHandler:	
  1176  00C4                     	ds	2
  1177  00C6                     _EUSART_OverrunErrorHandler:	
  1178  00C6                     	ds	2
  1179  00C8                     _EUSART_FramingErrorHandler:	
  1180  00C8                     	ds	2
  1181  00CA                     _LIN_processData:	
  1182  00CA                     	ds	2
  1183  00CC                     _EUSART_RxDefaultInterruptHandler:	
  1184  00CC                     	ds	2
  1185  00CE                     _EUSART_TxDefaultInterruptHandler:	
  1186  00CE                     	ds	2
  1187  0011                     _PIR1bits	set	17
  1188  000B                     _INTCONbits	set	11
  1189  0015                     _TMR0	set	21
  1190  0097                     _WDTCON	set	151
  1191  0098                     _OSCTUNE	set	152
  1192  0099                     _OSCCON	set	153
  1193  0095                     _OPTION_REGbits	set	149
  1194  008E                     _TRISC	set	142
  1195  008C                     _TRISA	set	140
  1196  0095                     _OPTION_REG	set	149
  1197  0091                     _PIE1bits	set	145
  1198  0116                     _BORCON	set	278
  1199  011E                     _APFCON1	set	286
  1200  011D                     _APFCON0	set	285
  1201  010E                     _LATC	set	270
  1202  010C                     _LATA	set	268
  1203  0199                     _RCREG	set	409
  1204  019A                     _TXREG	set	410
  1205  019C                     _SPBRGH	set	412
  1206  019B                     _SPBRGL	set	411
  1207  019E                     _TXSTA	set	414
  1208  019D                     _RCSTA	set	413
  1209  019F                     _BAUDCON	set	415
  1210  018C                     _ANSELA	set	396
  1211  018E                     _ANSELC	set	398
  1212  019D                     _RCSTAbits	set	413
  1213  019E                     _TXSTAbits	set	414
  1214  020E                     _WPUC	set	526
  1215  020C                     _WPUA	set	524
  1216                           
  1217                           ; #config settings
  1218  0000                     
  1219                           	psect	cinit
  1220  0032                     start_initialization:	
  1221  0032                     __initialization:	
  1222                           
  1223                           ; Initialize objects allocated to BANK0
  1224  0032  3187  27AC  3180   	fcall	__pidataBANK0	;fetch initializer
  1225  0035  00E7               	movwf	__pdataBANK0& (0+127)
  1226                           
  1227                           ; Clear objects allocated to BANK0
  1228  0036  3020               	movlw	low __pbssBANK0
  1229  0037  0084               	movwf	4
  1230  0038  3000               	movlw	high __pbssBANK0
  1231  0039  0085               	movwf	5
  1232  003A  3023               	movlw	35
  1233  003B  3187  2774  3180   	fcall	clear_ram0
  1234                           
  1235                           ; Clear objects allocated to BANK1
  1236  003E  30A0               	movlw	low __pbssBANK1
  1237  003F  0084               	movwf	4
  1238  0040  3000               	movlw	high __pbssBANK1
  1239  0041  0085               	movwf	5
  1240  0042  3024               	movlw	36
  1241  0043  3187  2774         	fcall	clear_ram0
  1242  0045                     end_of_initialization:	
  1243                           ;End of C runtime variable initialization code
  1244                           
  1245  0045                     __end_of__initialization:	
  1246  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1247  0046  0020               	movlb	0
  1248  0047  3186  2EAD         	ljmp	_main	;jump to C main() function
  1249                           
  1250                           	psect	bssBANK0
  1251  0020                     __pbssBANK0:	
  1252  0020                     _eusartRxStatusBuffer:	
  1253  0020                     	ds	8
  1254  0028                     _eusartRxLastError:	
  1255  0028                     	ds	1
  1256  0029                     _eusartRxCount:	
  1257  0029                     	ds	1
  1258  002A                     _eusartRxTail:	
  1259  002A                     	ds	1
  1260  002B                     _eusartRxHead:	
  1261  002B                     	ds	1
  1262  002C                     _eusartTxTail:	
  1263  002C                     	ds	1
  1264  002D                     _eusartTxHead:	
  1265  002D                     	ds	1
  1266  002E                     LIN_sendPeriodicTx@scheduleIndex:	
  1267  002E                     	ds	1
  1268  002F                     LIN_receivePacket@rxIndex:	
  1269  002F                     	ds	1
  1270  0030                     LIN_handler@LIN_state:	
  1271  0030                     	ds	1
  1272  0031                     _LIN_periodCallBack:	
  1273  0031                     	ds	1
  1274  0032                     _LIN_timerCallBack:	
  1275  0032                     	ds	1
  1276  0033                     _LIN_timerRunning:	
  1277  0033                     	ds	1
  1278  0034                     _LIN_period:	
  1279  0034                     	ds	1
  1280  0035                     _LIN_txReady:	
  1281  0035                     	ds	1
  1282  0036                     _LIN_packet:	
  1283  0036                     	ds	11
  1284  0041                     _RSSI_Data:	
  1285  0041                     	ds	1
  1286  0042                     _UNLOCK_Data:	
  1287  0042                     	ds	1
  1288                           
  1289                           	psect	dataBANK0
  1290  0067                     __pdataBANK0:	
  1291  0067                     _LIN_timeout:	
  1292  0067                     	ds	1
  1293                           
  1294                           	psect	bssBANK1
  1295  00A0                     __pbssBANK1:	
  1296  00A0                     _eusartRxBuffer:	
  1297  00A0                     	ds	8
  1298  00A8                     _eusartTxBuffer:	
  1299  00A8                     	ds	8
  1300  00B0                     _LIN_rxPacket:	
  1301  00B0                     	ds	12
  1302  00BC                     _LFRX_Data:	
  1303  00BC                     	ds	8
  1304                           
  1305                           	psect	clrtext
  1306  0774                     clear_ram0:	
  1307                           ;	Called with FSR0 containing the base address, and
  1308                           ;	WREG with the size to clear
  1309                           
  1310  0774  0064               	clrwdt	;clear the watchdog before getting into this loop
  1311  0775                     clrloop0:	
  1312  0775  0180               	clrf	0	;clear RAM location pointed to by FSR
  1313  0776  3101               	addfsr 0,1
  1314  0777  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1315  0778  2F75               	goto	clrloop0	;have we reached the end yet?
  1316  0779  3400               	retlw	0	;all done for this memory range, return
  1317                           
  1318                           	psect	cstackBANK1
  1319  00D0                     __pcstackBANK1:	
  1320  00D0                     ??_LIN_timerHandler:	
  1321  00D0                     ??_LIN_handler:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324                           
  1325                           ; 1 bytes @ 0x0
  1326  00D0                     	ds	1
  1327  00D1                     ?_LIN_init:	
  1328  00D1                     LIN_init@table:	
  1329                           ; 1 bytes @ 0x1
  1330                           
  1331                           
  1332                           ; 2 bytes @ 0x1
  1333  00D1                     	ds	2
  1334  00D3                     LIN_init@processData:	
  1335                           
  1336                           ; 2 bytes @ 0x3
  1337  00D3                     	ds	2
  1338  00D5                     ??_LIN_init:	
  1339                           
  1340                           ; 1 bytes @ 0x5
  1341  00D5                     	ds	1
  1342  00D6                     LIN_init@tableLength:	
  1343                           
  1344                           ; 1 bytes @ 0x6
  1345  00D6                     	ds	1
  1346  00D7                     ??_main:	
  1347                           
  1348                           ; 1 bytes @ 0x7
  1349  00D7                     	ds	1
  1350                           
  1351                           	psect	cstackCOMMON
  1352  0070                     __pcstackCOMMON:	
  1353  0070                     ?_processLIN:	
  1354  0070                     ?_LIN_getPacket:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_LIN_stopTimer:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_LIN_setTimerHandler:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_LIN_startPeriod:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_LIN_timerHandler:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_LIN_calcParity:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ?_LIN_disableRx:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_LIN_sendPacket:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?_LIN_startTimer:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_LIN_enableRx:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ?_EUSART_is_rx_ready:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_LIN_receivePacket:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ?_EUSART_Read:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ?_LIN_sendBreak:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?_EUSART_Write:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ?_TMR0_WriteTimer:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?_LIN_sendPeriodicTx:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ?_TMR0_DefaultInterruptHandler:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ??_TMR0_DefaultInterruptHandler:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ?_OSCILLATOR_Initialize:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ?_WDT_Initialize:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_EUSART_Initialize:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ?_EUSART_Receive_ISR:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_EUSART_Transmit_ISR:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ??_EUSART_Transmit_ISR:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_EUSART_DefaultErrorHandler:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_EUSART_RxDataHandler:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ??_EUSART_RxDataHandler:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?_LIN_Master_Initialize:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?_LIN_handler:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ?_TMR0_Initialize:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ?_TMR0_ISR:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0070                     ?_PIN_MANAGER_Initialize:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0070                     ?_SYSTEM_Initialize:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0070                     ?_INTERRUPT_InterruptManager:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     ?_main:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?i1_LIN_calcParity:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ??i1_LIN_calcParity:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?i1_LIN_getChecksum:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0070                     ?i1_LIN_timerHandler:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?i1_LIN_stopTimer:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ??i1_LIN_stopTimer:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?i1_LIN_sendPeriodicTx:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ?i1___wmul:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     i1LIN_getChecksum@data:	
  1499                           ; 2 bytes @ 0x0
  1500                           
  1501  0070                     i1___wmul@multiplier:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504                           
  1505                           ; 2 bytes @ 0x0
  1506  0070                     	ds	1
  1507  0071                     ??_EUSART_Receive_ISR:	
  1508  0071                     ??_EUSART_DefaultErrorHandler:	
  1509                           ; 1 bytes @ 0x1
  1510                           
  1511  0071                     ??i1_LIN_getChecksum:	
  1512                           ; 1 bytes @ 0x1
  1513                           
  1514  0071                     i1LIN_calcParity@CMD:	
  1515                           ; 1 bytes @ 0x1
  1516                           
  1517                           
  1518                           ; 1 bytes @ 0x1
  1519  0071                     	ds	1
  1520  0072                     i1LIN_calcParity@PID:	
  1521  0072                     i1LIN_getChecksum@length:	
  1522                           ; 1 bytes @ 0x2
  1523                           
  1524  0072                     i1___wmul@multiplicand:	
  1525                           ; 1 bytes @ 0x2
  1526                           
  1527                           
  1528                           ; 2 bytes @ 0x2
  1529  0072                     	ds	1
  1530  0073                     i1LIN_getChecksum@i:	
  1531                           
  1532                           ; 1 bytes @ 0x3
  1533  0073                     	ds	1
  1534  0074                     ??i1___wmul:	
  1535  0074                     i1LIN_getChecksum@checksum:	
  1536                           ; 1 bytes @ 0x4
  1537                           
  1538  0074                     i1___wmul@product:	
  1539                           ; 2 bytes @ 0x4
  1540                           
  1541                           
  1542                           ; 2 bytes @ 0x4
  1543  0074                     	ds	2
  1544  0076                     ?i1_LIN_queuePacket:	
  1545  0076                     i1LIN_queuePacket@data:	
  1546                           ; 1 bytes @ 0x6
  1547                           
  1548                           
  1549                           ; 1 bytes @ 0x6
  1550  0076                     	ds	1
  1551  0077                     ??i1_LIN_queuePacket:	
  1552                           
  1553                           ; 1 bytes @ 0x7
  1554  0077                     	ds	4
  1555  007B                     ??i1_LIN_sendPeriodicTx:	
  1556                           
  1557                           ; 1 bytes @ 0xB
  1558  007B                     	ds	3
  1559  007E                     ??_TMR0_ISR:	
  1560                           
  1561                           	psect	cstackBANK0
  1562  0043                     __pcstackBANK0:	
  1563                           ; 1 bytes @ 0xE
  1564                           
  1565  0043                     i1LIN_queuePacket@cmd:	
  1566                           
  1567                           ; 1 bytes @ 0x0
  1568  0043                     	ds	1
  1569  0044                     i1LIN_queuePacket@i:	
  1570                           
  1571                           ; 1 bytes @ 0x1
  1572  0044                     	ds	1
  1573  0045                     i1LIN_queuePacket@tempSchedule:	
  1574                           
  1575                           ; 2 bytes @ 0x2
  1576  0045                     	ds	2
  1577  0047                     i1LIN_sendPeriodicTx@periodicTx:	
  1578                           
  1579                           ; 2 bytes @ 0x4
  1580  0047                     	ds	2
  1581  0049                     ??i1_LIN_timerHandler:	
  1582                           
  1583                           ; 1 bytes @ 0x6
  1584  0049                     	ds	1
  1585  004A                     ??_INTERRUPT_InterruptManager:	
  1586                           
  1587                           ; 1 bytes @ 0x7
  1588  004A                     	ds	1
  1589  004B                     ??_LIN_stopTimer:	
  1590  004B                     ??_LIN_startPeriod:	
  1591                           ; 1 bytes @ 0x8
  1592                           
  1593  004B                     ??_LIN_calcParity:	
  1594                           ; 1 bytes @ 0x8
  1595                           
  1596  004B                     ?_LIN_getChecksum:	
  1597                           ; 1 bytes @ 0x8
  1598                           
  1599  004B                     ??_LIN_disableRx:	
  1600                           ; 1 bytes @ 0x8
  1601                           
  1602  004B                     ?_memset:	
  1603                           ; 1 bytes @ 0x8
  1604                           
  1605  004B                     ??_LIN_enableRx:	
  1606                           ; 1 bytes @ 0x8
  1607                           
  1608  004B                     ??_EUSART_is_rx_ready:	
  1609                           ; 1 bytes @ 0x8
  1610                           
  1611  004B                     ??_EUSART_Read:	
  1612                           ; 1 bytes @ 0x8
  1613                           
  1614  004B                     ??_LIN_sendBreak:	
  1615                           ; 1 bytes @ 0x8
  1616                           
  1617  004B                     ??_EUSART_Write:	
  1618                           ; 1 bytes @ 0x8
  1619                           
  1620  004B                     ??_TMR0_WriteTimer:	
  1621                           ; 1 bytes @ 0x8
  1622                           
  1623  004B                     ?_TMR0_SetInterruptHandler:	
  1624                           ; 1 bytes @ 0x8
  1625                           
  1626  004B                     ??_OSCILLATOR_Initialize:	
  1627                           ; 1 bytes @ 0x8
  1628                           
  1629  004B                     ??_WDT_Initialize:	
  1630                           ; 1 bytes @ 0x8
  1631                           
  1632  004B                     ?_EUSART_SetRxInterruptHandler:	
  1633                           ; 1 bytes @ 0x8
  1634                           
  1635  004B                     ?_EUSART_SetTxInterruptHandler:	
  1636                           ; 1 bytes @ 0x8
  1637                           
  1638  004B                     ?_EUSART_SetFramingErrorHandler:	
  1639                           ; 1 bytes @ 0x8
  1640                           
  1641  004B                     ?_EUSART_SetOverrunErrorHandler:	
  1642                           ; 1 bytes @ 0x8
  1643                           
  1644  004B                     ?_EUSART_SetErrorHandler:	
  1645                           ; 1 bytes @ 0x8
  1646                           
  1647  004B                     ??_PIN_MANAGER_Initialize:	
  1648                           ; 1 bytes @ 0x8
  1649                           
  1650  004B                     ?___wmul:	
  1651                           ; 1 bytes @ 0x8
  1652                           
  1653  004B                     LIN_getChecksum@data:	
  1654                           ; 2 bytes @ 0x8
  1655                           
  1656  004B                     TMR0_WriteTimer@timerVal:	
  1657                           ; 1 bytes @ 0x8
  1658                           
  1659  004B                     TMR0_SetInterruptHandler@InterruptHandler:	
  1660                           ; 1 bytes @ 0x8
  1661                           
  1662  004B                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1663                           ; 2 bytes @ 0x8
  1664                           
  1665  004B                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1666                           ; 2 bytes @ 0x8
  1667                           
  1668  004B                     EUSART_SetErrorHandler@interruptHandler:	
  1669                           ; 2 bytes @ 0x8
  1670                           
  1671  004B                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1672                           ; 2 bytes @ 0x8
  1673                           
  1674  004B                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1675                           ; 2 bytes @ 0x8
  1676                           
  1677  004B                     ___wmul@multiplier:	
  1678                           ; 2 bytes @ 0x8
  1679                           
  1680  004B                     memset@c:	
  1681                           ; 2 bytes @ 0x8
  1682                           
  1683                           
  1684                           ; 2 bytes @ 0x8
  1685  004B                     	ds	1
  1686  004C                     ??_LIN_getChecksum:	
  1687  004C                     ??_LIN_startTimer:	
  1688                           ; 1 bytes @ 0x9
  1689                           
  1690  004C                     LIN_calcParity@CMD:	
  1691                           ; 1 bytes @ 0x9
  1692                           
  1693  004C                     EUSART_Read@readValue:	
  1694                           ; 1 bytes @ 0x9
  1695                           
  1696  004C                     EUSART_Write@txData:	
  1697                           ; 1 bytes @ 0x9
  1698                           
  1699                           
  1700                           ; 1 bytes @ 0x9
  1701  004C                     	ds	1
  1702  004D                     ??_LIN_setTimerHandler:	
  1703  004D                     ??_LIN_sendPacket:	
  1704                           ; 1 bytes @ 0xA
  1705                           
  1706  004D                     ??_TMR0_SetInterruptHandler:	
  1707                           ; 1 bytes @ 0xA
  1708                           
  1709  004D                     ??_EUSART_Initialize:	
  1710                           ; 1 bytes @ 0xA
  1711                           
  1712  004D                     ??_EUSART_SetRxInterruptHandler:	
  1713                           ; 1 bytes @ 0xA
  1714                           
  1715  004D                     ??_EUSART_SetTxInterruptHandler:	
  1716                           ; 1 bytes @ 0xA
  1717                           
  1718  004D                     ??_EUSART_SetFramingErrorHandler:	
  1719                           ; 1 bytes @ 0xA
  1720                           
  1721  004D                     ??_EUSART_SetOverrunErrorHandler:	
  1722                           ; 1 bytes @ 0xA
  1723                           
  1724  004D                     ??_EUSART_SetErrorHandler:	
  1725                           ; 1 bytes @ 0xA
  1726                           
  1727  004D                     ??_TMR0_Initialize:	
  1728                           ; 1 bytes @ 0xA
  1729                           
  1730  004D                     LIN_calcParity@PID:	
  1731                           ; 1 bytes @ 0xA
  1732                           
  1733  004D                     LIN_getChecksum@length:	
  1734                           ; 1 bytes @ 0xA
  1735                           
  1736  004D                     LIN_startTimer@timeout:	
  1737                           ; 1 bytes @ 0xA
  1738                           
  1739  004D                     ___wmul@multiplicand:	
  1740                           ; 1 bytes @ 0xA
  1741                           
  1742  004D                     memset@n:	
  1743                           ; 2 bytes @ 0xA
  1744                           
  1745                           
  1746                           ; 2 bytes @ 0xA
  1747  004D                     	ds	1
  1748  004E                     LIN_sendPacket@i:	
  1749  004E                     LIN_getChecksum@i:	
  1750                           ; 1 bytes @ 0xB
  1751                           
  1752                           
  1753                           ; 1 bytes @ 0xB
  1754  004E                     	ds	1
  1755  004F                     ??_memset:	
  1756  004F                     ??___wmul:	
  1757                           ; 1 bytes @ 0xC
  1758                           
  1759  004F                     LIN_getChecksum@checksum:	
  1760                           ; 1 bytes @ 0xC
  1761                           
  1762  004F                     ___wmul@product:	
  1763                           ; 2 bytes @ 0xC
  1764                           
  1765                           
  1766                           ; 2 bytes @ 0xC
  1767  004F                     	ds	1
  1768  0050                     memset@p:	
  1769                           
  1770                           ; 1 bytes @ 0xD
  1771  0050                     	ds	1
  1772  0051                     ??_LIN_receivePacket:	
  1773  0051                     ?_LIN_queuePacket:	
  1774                           ; 1 bytes @ 0xE
  1775                           
  1776  0051                     LIN_queuePacket@data:	
  1777                           ; 1 bytes @ 0xE
  1778                           
  1779  0051                     memset@p1:	
  1780                           ; 1 bytes @ 0xE
  1781                           
  1782                           
  1783                           ; 1 bytes @ 0xE
  1784  0051                     	ds	1
  1785  0052                     ??_LIN_getPacket:	
  1786  0052                     ??_LIN_queuePacket:	
  1787                           ; 1 bytes @ 0xF
  1788                           
  1789                           
  1790                           ; 1 bytes @ 0xF
  1791  0052                     	ds	1
  1792  0053                     LIN_getPacket@cmd:	
  1793                           
  1794                           ; 1 bytes @ 0x10
  1795  0053                     	ds	1
  1796  0054                     LIN_getPacket@data:	
  1797                           
  1798                           ; 1 bytes @ 0x11
  1799  0054                     	ds	1
  1800  0055                     ??_processLIN:	
  1801                           
  1802                           ; 1 bytes @ 0x12
  1803  0055                     	ds	1
  1804  0056                     LIN_queuePacket@cmd:	
  1805  0056                     processLIN@tempRxData:	
  1806                           ; 1 bytes @ 0x13
  1807                           
  1808                           
  1809                           ; 8 bytes @ 0x13
  1810  0056                     	ds	1
  1811  0057                     LIN_queuePacket@i:	
  1812                           
  1813                           ; 1 bytes @ 0x14
  1814  0057                     	ds	1
  1815  0058                     LIN_queuePacket@tempSchedule:	
  1816                           
  1817                           ; 2 bytes @ 0x15
  1818  0058                     	ds	2
  1819  005A                     ??_LIN_sendPeriodicTx:	
  1820                           
  1821                           ; 1 bytes @ 0x17
  1822  005A                     	ds	3
  1823  005D                     LIN_sendPeriodicTx@periodicTx:	
  1824                           
  1825                           ; 2 bytes @ 0x1A
  1826  005D                     	ds	1
  1827  005E                     processLIN@cmd:	
  1828                           
  1829                           ; 1 bytes @ 0x1B
  1830  005E                     	ds	1
  1831  005F                     ??_LIN_Master_Initialize:	
  1832  005F                     ??_SYSTEM_Initialize:	
  1833                           ; 1 bytes @ 0x1C
  1834                           
  1835                           
  1836                           	psect	maintext
  1837  06AD                     __pmaintext:	
  1838                           ; 1 bytes @ 0x1C
  1839 ;;
  1840 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1841 ;;
  1842 ;; *************** function _main *****************
  1843 ;; Defined at:
  1844 ;;		line 49 in file "main.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : B1F/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1860 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;Total ram usage:        1 bytes
  1863 ;; Hardware stack levels required when called:   13
  1864 ;; This function calls:
  1865 ;;		_LIN_handler
  1866 ;;		_SYSTEM_Initialize
  1867 ;; This function is called by:
  1868 ;;		Startup code after reset
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _main
  1874  06AD                     _main:	
  1875                           
  1876                           ;main.c: 52: SYSTEM_Initialize();
  1877                           
  1878                           ;incstack = 0
  1879                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1880  06AD  3186  26FD  3186   	fcall	_SYSTEM_Initialize
  1881                           
  1882                           ;main.c: 58: (INTCONbits.GIE = 1);
  1883  06B0  178B               	bsf	11,7	;volatile
  1884                           
  1885                           ;main.c: 61: (INTCONbits.PEIE = 1);
  1886  06B1  170B               	bsf	11,6	;volatile
  1887  06B2                     L1:	
  1888                           
  1889                           ;main.c: 68: RSSI_Data[0] =0xff;
  1890  06B2  30FF               	movlw	255
  1891  06B3  0021               	movlb	1	; select bank1
  1892  06B4  00D7               	movwf	??_main^(0+128)
  1893  06B5  0857               	movf	??_main^(0+128),w
  1894  06B6  0020               	movlb	0	; select bank0
  1895  06B7  00C1               	movwf	_RSSI_Data
  1896                           
  1897                           ;main.c: 69: RSSI_Data[0] = 0xff;
  1898  06B8  30FF               	movlw	255
  1899  06B9  0021               	movlb	1	; select bank1
  1900  06BA  00D7               	movwf	??_main^(0+128)
  1901  06BB  0857               	movf	??_main^(0+128),w
  1902  06BC  0020               	movlb	0	; select bank0
  1903  06BD  00C1               	movwf	_RSSI_Data
  1904                           
  1905                           ;main.c: 72: {
  1906                           ;main.c: 73: LIN_handler();
  1907                           
  1908                           ;main.c: 71: while (1)
  1909  06BE  3183  23A0  3186   	fcall	_LIN_handler
  1910  06C1  2EB2               	goto	L1
  1911  06C2                     __end_of_main:	
  1912                           ;main.c: 75: RSSI_Data[0]=0xff;
  1913                           
  1914                           ;main.c: 74: RSSI_Data[0] = 0xff;
  1915                           
  1916                           
  1917                           	psect	text1
  1918  06FD                     __ptext1:	
  1919 ;; *************** function _SYSTEM_Initialize *****************
  1920 ;; Defined at:
  1921 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:   12
  1942 ;; This function calls:
  1943 ;;		_EUSART_Initialize
  1944 ;;		_LIN_Master_Initialize
  1945 ;;		_OSCILLATOR_Initialize
  1946 ;;		_PIN_MANAGER_Initialize
  1947 ;;		_TMR0_Initialize
  1948 ;;		_WDT_Initialize
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _SYSTEM_Initialize
  1956  06FD                     _SYSTEM_Initialize:	
  1957                           
  1958                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1959                           
  1960                           ;incstack = 0
  1961                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1962  06FD  3186  2697  3186   	fcall	_PIN_MANAGER_Initialize
  1963                           
  1964                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1965  0700  3187  276D  3186   	fcall	_OSCILLATOR_Initialize
  1966                           
  1967                           ;mcc.c: 55: WDT_Initialize();
  1968  0703  3187  278F  3186   	fcall	_WDT_Initialize
  1969                           
  1970                           ;mcc.c: 56: TMR0_Initialize();
  1971  0706  3186  26C2  3186   	fcall	_TMR0_Initialize
  1972                           
  1973                           ;mcc.c: 57: EUSART_Initialize();
  1974  0709  3184  2412  3186   	fcall	_EUSART_Initialize
  1975                           
  1976                           ;mcc.c: 58: LIN_Master_Initialize();
  1977  070C  3187  272B         	fcall	_LIN_Master_Initialize
  1978  070E  0008               	return
  1979  070F                     __end_of_SYSTEM_Initialize:	
  1980                           
  1981                           	psect	text2
  1982  078F                     __ptext2:	
  1983 ;; *************** function _WDT_Initialize *****************
  1984 ;; Defined at:
  1985 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;Total ram usage:        0 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    6
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_SYSTEM_Initialize
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           
  2014                           ;psect for function _WDT_Initialize
  2015  078F                     _WDT_Initialize:	
  2016                           
  2017                           ;mcc.c: 74: WDTCON = 0x16;
  2018                           
  2019                           ;incstack = 0
  2020                           ; Regs used in _WDT_Initialize: [wreg]
  2021  078F  3016               	movlw	22
  2022  0790  0021               	movlb	1	; select bank1
  2023  0791  0097               	movwf	23	;volatile
  2024  0792  0008               	return
  2025  0793                     __end_of_WDT_Initialize:	
  2026                           
  2027                           	psect	text3
  2028  06C2                     __ptext3:	
  2029 ;; *************** function _TMR0_Initialize *****************
  2030 ;; Defined at:
  2031 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0, pclath, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2047 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2048 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2049 ;;Total ram usage:        1 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    7
  2052 ;; This function calls:
  2053 ;;		_TMR0_SetInterruptHandler
  2054 ;; This function is called by:
  2055 ;;		_SYSTEM_Initialize
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _TMR0_Initialize
  2061  06C2                     _TMR0_Initialize:	
  2062                           
  2063                           ;tmr0.c: 69: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 & 0x3F));
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2067  06C2  0021               	movlb	1	; select bank1
  2068  06C3  0815               	movf	21,w	;volatile
  2069  06C4  39C0               	andlw	192
  2070  06C5  3812               	iorlw	18
  2071  06C6  0095               	movwf	21	;volatile
  2072                           
  2073                           ;tmr0.c: 72: TMR0 = 0x06;
  2074  06C7  3006               	movlw	6
  2075  06C8  0020               	movlb	0	; select bank0
  2076  06C9  0095               	movwf	21	;volatile
  2077                           
  2078                           ;tmr0.c: 75: timer0ReloadVal= 6;
  2079  06CA  3006               	movlw	6
  2080  06CB  00CD               	movwf	??_TMR0_Initialize
  2081  06CC  084D               	movf	??_TMR0_Initialize,w
  2082  06CD  00E4               	movwf	_timer0ReloadVal	;volatile
  2083                           
  2084                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  2085  06CE  110B               	bcf	11,2	;volatile
  2086                           
  2087                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  2088  06CF  168B               	bsf	11,5	;volatile
  2089                           
  2090                           ;tmr0.c: 84: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2091  06D0  30AD               	movlw	low _TMR0_DefaultInterruptHandler
  2092  06D1  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2093  06D2  3007               	movlw	high _TMR0_DefaultInterruptHandler
  2094  06D3  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2095  06D4  3187  277A         	fcall	_TMR0_SetInterruptHandler
  2096  06D6  0008               	return
  2097  06D7                     __end_of_TMR0_Initialize:	
  2098                           
  2099                           	psect	text4
  2100  0697                     __ptext4:	
  2101 ;; *************** function _PIN_MANAGER_Initialize *****************
  2102 ;; Defined at:
  2103 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    6
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_SYSTEM_Initialize
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _PIN_MANAGER_Initialize
  2133  0697                     _PIN_MANAGER_Initialize:	
  2134                           
  2135                           ;pin_manager.c: 62: LATA = 0x00;
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2139  0697  0022               	movlb	2	; select bank2
  2140  0698  018C               	clrf	12	;volatile
  2141                           
  2142                           ;pin_manager.c: 63: LATC = 0x00;
  2143  0699  018E               	clrf	14	;volatile
  2144                           
  2145                           ;pin_manager.c: 68: TRISA = 0x3F;
  2146  069A  303F               	movlw	63
  2147  069B  0021               	movlb	1	; select bank1
  2148  069C  008C               	movwf	12	;volatile
  2149                           
  2150                           ;pin_manager.c: 69: TRISC = 0x3F;
  2151  069D  303F               	movlw	63
  2152  069E  008E               	movwf	14	;volatile
  2153                           
  2154                           ;pin_manager.c: 74: ANSELC = 0x0F;
  2155  069F  300F               	movlw	15
  2156  06A0  0023               	movlb	3	; select bank3
  2157  06A1  008E               	movwf	14	;volatile
  2158                           
  2159                           ;pin_manager.c: 75: ANSELA = 0x17;
  2160  06A2  3017               	movlw	23
  2161  06A3  008C               	movwf	12	;volatile
  2162                           
  2163                           ;pin_manager.c: 80: WPUA = 0x00;
  2164  06A4  0024               	movlb	4	; select bank4
  2165  06A5  018C               	clrf	12	;volatile
  2166                           
  2167                           ;pin_manager.c: 81: WPUC = 0x00;
  2168  06A6  018E               	clrf	14	;volatile
  2169                           
  2170                           ;pin_manager.c: 82: OPTION_REGbits.nWPUEN = 1;
  2171  06A7  0021               	movlb	1	; select bank1
  2172  06A8  1795               	bsf	21,7	;volatile
  2173                           
  2174                           ;pin_manager.c: 89: APFCON0 = 0x00;
  2175  06A9  0022               	movlb	2	; select bank2
  2176  06AA  019D               	clrf	29	;volatile
  2177                           
  2178                           ;pin_manager.c: 90: APFCON1 = 0x00;
  2179  06AB  019E               	clrf	30	;volatile
  2180  06AC  0008               	return
  2181  06AD                     __end_of_PIN_MANAGER_Initialize:	
  2182                           
  2183                           	psect	text5
  2184  076D                     __ptext5:	
  2185 ;; *************** function _OSCILLATOR_Initialize *****************
  2186 ;; Defined at:
  2187 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    6
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_SYSTEM_Initialize
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           
  2216                           ;psect for function _OSCILLATOR_Initialize
  2217  076D                     _OSCILLATOR_Initialize:	
  2218                           
  2219                           ;mcc.c: 64: OSCCON = 0x70;
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2223  076D  3070               	movlw	112
  2224  076E  0021               	movlb	1	; select bank1
  2225  076F  0099               	movwf	25	;volatile
  2226                           
  2227                           ;mcc.c: 66: OSCTUNE = 0x00;
  2228  0770  0198               	clrf	24	;volatile
  2229                           
  2230                           ;mcc.c: 68: BORCON = 0x00;
  2231  0771  0022               	movlb	2	; select bank2
  2232  0772  0196               	clrf	22	;volatile
  2233  0773  0008               	return
  2234  0774                     __end_of_OSCILLATOR_Initialize:	
  2235                           
  2236                           	psect	text6
  2237  072B                     __ptext6:	
  2238 ;; *************** function _LIN_Master_Initialize *****************
  2239 ;; Defined at:
  2240 ;;		line 43 in file "mcc_generated_files/LINDrivers/lin_app.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:   11
  2261 ;; This function calls:
  2262 ;;		_LIN_init
  2263 ;; This function is called by:
  2264 ;;		_SYSTEM_Initialize
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _LIN_Master_Initialize
  2270  072B                     _LIN_Master_Initialize:	
  2271                           
  2272                           ;lin_app.c: 45: LIN_init((sizeof(scheduleTable)/sizeof(lin_cmd_packet_t)), scheduleTable
      +                          , processLIN);
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in _LIN_Master_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2276  072B  30EB               	movlw	low (_scheduleTable| (0+32768))
  2277  072C  0021               	movlb	1	; select bank1
  2278  072D  00D1               	movwf	LIN_init@table^(0+128)
  2279  072E  3086               	movlw	high (_scheduleTable| (0+32768))
  2280  072F  00D2               	movwf	(LIN_init@table^(0+128)+1)
  2281  0730  30D7               	movlw	low _processLIN
  2282  0731  00D3               	movwf	LIN_init@processData^(0+128)
  2283  0732  3006               	movlw	high _processLIN
  2284  0733  00D4               	movwf	(LIN_init@processData^(0+128)+1)
  2285  0734  3003               	movlw	3
  2286  0735  3185  25D3         	fcall	_LIN_init
  2287  0737  0008               	return
  2288  0738                     __end_of_LIN_Master_Initialize:	
  2289                           
  2290                           	psect	text7
  2291  05D3                     __ptext7:	
  2292 ;; *************** function _LIN_init *****************
  2293 ;; Defined at:
  2294 ;;		line 60 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  tableLength     1    wreg     unsigned char 
  2297 ;;  table           2    1[BANK1 ] const PTR const struct .
  2298 ;;		 -> scheduleTable(18), 
  2299 ;;  processData     2    3[BANK1 ] PTR FTN()void 
  2300 ;;		 -> processLIN(1), 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  tableLength     1    6[BANK1 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2312 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;Total ram usage:        6 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:   10
  2319 ;; This function calls:
  2320 ;;		_LIN_setTimerHandler
  2321 ;;		_LIN_startPeriod
  2322 ;;		_LIN_stopTimer
  2323 ;;		_LIN_timerHandler
  2324 ;; This function is called by:
  2325 ;;		_LIN_Master_Initialize
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _LIN_init
  2331  05D3                     _LIN_init:	
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in _LIN_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2335                           ;LIN_init@tableLength stored from wreg
  2336  05D3  0021               	movlb	1	; select bank1
  2337  05D4  00D6               	movwf	LIN_init@tableLength^(0+128)
  2338                           
  2339                           ;lin_master.c: 61: schedule = table;
  2340  05D5  0852               	movf	(LIN_init@table+1)^(0+128),w
  2341  05D6  0020               	movlb	0	; select bank0
  2342  05D7  00E2               	movwf	_schedule+1
  2343  05D8  0021               	movlb	1	; select bank1
  2344  05D9  0851               	movf	LIN_init@table^(0+128),w
  2345  05DA  0020               	movlb	0	; select bank0
  2346  05DB  00E1               	movwf	_schedule
  2347                           
  2348                           ;lin_master.c: 62: scheduleLength = tableLength;
  2349  05DC  0021               	movlb	1	; select bank1
  2350  05DD  0856               	movf	LIN_init@tableLength^(0+128),w
  2351  05DE  00D5               	movwf	??_LIN_init^(0+128)
  2352  05DF  0855               	movf	??_LIN_init^(0+128),w
  2353  05E0  0020               	movlb	0	; select bank0
  2354  05E1  00E6               	movwf	_scheduleLength
  2355                           
  2356                           ;lin_master.c: 63: LIN_processData = processData;
  2357  05E2  0021               	movlb	1	; select bank1
  2358  05E3  0854               	movf	(LIN_init@processData+1)^(0+128),w
  2359  05E4  00CB               	movwf	(_LIN_processData+1)^(0+128)
  2360  05E5  0853               	movf	LIN_init@processData^(0+128),w
  2361  05E6  00CA               	movwf	_LIN_processData^(0+128)
  2362                           
  2363                           ;lin_master.c: 64: LIN_stopTimer();
  2364  05E7  3187  2793  3185   	fcall	_LIN_stopTimer
  2365                           
  2366                           ;lin_master.c: 65: LIN_setTimerHandler();
  2367  05EA  3187  2765  3185   	fcall	_LIN_setTimerHandler
  2368                           
  2369                           ;lin_master.c: 67: LIN_startPeriod();
  2370  05ED  3187  2797  3185   	fcall	_LIN_startPeriod
  2371                           
  2372                           ;lin_master.c: 68: LIN_timerHandler();
  2373  05F0  3185  2564         	fcall	_LIN_timerHandler
  2374  05F2  0008               	return
  2375  05F3                     __end_of_LIN_init:	
  2376                           
  2377                           	psect	text8
  2378  0564                     __ptext8:	
  2379 ;; *************** function _LIN_timerHandler *****************
  2380 ;; Defined at:
  2381 ;;		line 249 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;Total ram usage:        1 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    9
  2402 ;; This function calls:
  2403 ;;		_LIN_sendPeriodicTx
  2404 ;;		_LIN_stopTimer
  2405 ;; This function is called by:
  2406 ;;		_LIN_init
  2407 ;;		_LIN_setTimerHandler
  2408 ;;		_TMR0_ISR
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           
  2413                           ;psect for function _LIN_timerHandler
  2414  0564                     _LIN_timerHandler:	
  2415                           
  2416                           ;Skip over the trampoline to the duplicate function for level 1
  2417  0564  1C7E               	btfss	126,0
  2418  0565  2D68               	goto	l2209
  2419  0566  3185  2DF3         	ljmp	i1l1975
  2420  0568                     _LIN_timerHandler$intlevel0:	
  2421  0568                     l2209:	
  2422                           ;incstack = 0
  2423                           ; Regs used in _LIN_timerHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2424                           
  2425                           
  2426                           ;lin_master.c: 251: if(LIN_timerRunning == 1){
  2427  0568  0020               	movlb	0	; select bank0
  2428  0569  0333               	decf	_LIN_timerRunning,w
  2429  056A  1D03               	btfss	3,2
  2430  056B  2D79               	goto	l2215
  2431                           
  2432                           ;lin_master.c: 252: if (++LIN_timerCallBack >= LIN_timeout){
  2433  056C  3001               	movlw	1
  2434  056D  0021               	movlb	1	; select bank1
  2435  056E  00D0               	movwf	??_LIN_timerHandler^(0+128)
  2436  056F  0850               	movf	??_LIN_timerHandler^(0+128),w
  2437  0570  0020               	movlb	0	; select bank0
  2438  0571  07B2               	addwf	_LIN_timerCallBack,f	;volatile
  2439  0572  0867               	movf	_LIN_timeout,w
  2440  0573  0232               	subwf	_LIN_timerCallBack,w	;volatile
  2441  0574  1C03               	skipc
  2442  0575  2D79               	goto	l2215
  2443                           
  2444                           ;lin_master.c: 254: LIN_stopTimer();
  2445  0576  3187  2793  3185   	fcall	_LIN_stopTimer
  2446  0579                     l2215:	
  2447                           
  2448                           ;lin_master.c: 255: }
  2449                           ;lin_master.c: 256: }
  2450                           ;lin_master.c: 257: if(LIN_enablePeriodTx == 1){
  2451  0579  0020               	movlb	0	; select bank0
  2452  057A  0365               	decf	_LIN_enablePeriodTx,w
  2453  057B  1D03               	btfss	3,2
  2454  057C  0008               	return
  2455                           
  2456                           ;lin_master.c: 258: if(++LIN_periodCallBack >= LIN_period){
  2457  057D  3001               	movlw	1
  2458  057E  0021               	movlb	1	; select bank1
  2459  057F  00D0               	movwf	??_LIN_timerHandler^(0+128)
  2460  0580  0850               	movf	??_LIN_timerHandler^(0+128),w
  2461  0581  0020               	movlb	0	; select bank0
  2462  0582  07B1               	addwf	_LIN_periodCallBack,f	;volatile
  2463  0583  0834               	movf	_LIN_period,w
  2464  0584  0231               	subwf	_LIN_periodCallBack,w	;volatile
  2465  0585  1C03               	skipc
  2466  0586  0008               	return
  2467                           
  2468                           ;lin_master.c: 259: LIN_sendPeriodicTx();
  2469  0587  3182  223B         	fcall	_LIN_sendPeriodicTx
  2470  0589  0008               	return
  2471  058A                     __end_of_LIN_timerHandler:	
  2472                           
  2473                           	psect	text9
  2474  0793                     __ptext9:	
  2475 ;; *************** function _LIN_stopTimer *****************
  2476 ;; Defined at:
  2477 ;;		line 269 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		status,2
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    6
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_LIN_init
  2502 ;;		_LIN_timerHandler
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _LIN_stopTimer
  2508  0793                     _LIN_stopTimer:	
  2509                           
  2510                           ;lin_master.c: 271: LIN_timerCallBack = 0;
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _LIN_stopTimer: [status,2]
  2514  0793  0020               	movlb	0	; select bank0
  2515  0794  01B2               	clrf	_LIN_timerCallBack	;volatile
  2516                           
  2517                           ;lin_master.c: 272: LIN_timerRunning = 0;
  2518  0795  01B3               	clrf	_LIN_timerRunning
  2519  0796  0008               	return
  2520  0797                     __end_of_LIN_stopTimer:	
  2521                           
  2522                           	psect	text10
  2523  023B                     __ptext10:	
  2524 ;; *************** function _LIN_sendPeriodicTx *****************
  2525 ;; Defined at:
  2526 ;;		line 299 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  periodicTx      2   26[BANK0 ] PTR const struct .
  2531 ;;		 -> ROM(8192), scheduleTable(18), 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;Total ram usage:        5 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    8
  2548 ;; This function calls:
  2549 ;;		_LIN_queuePacket
  2550 ;;		___wmul
  2551 ;; This function is called by:
  2552 ;;		_LIN_timerHandler
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _LIN_sendPeriodicTx
  2558  023B                     _LIN_sendPeriodicTx:	
  2559                           
  2560                           ;lin_master.c: 300: static volatile uint8_t scheduleIndex = 0;
  2561                           ;lin_master.c: 301: const lin_cmd_packet_t* periodicTx;
  2562                           ;lin_master.c: 303: LIN_periodCallBack = 0;
  2563                           
  2564                           ;incstack = 0
  2565                           ; Regs used in _LIN_sendPeriodicTx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2566  023B  0020               	movlb	0	; select bank0
  2567  023C  01B1               	clrf	_LIN_periodCallBack	;volatile
  2568                           
  2569                           ;lin_master.c: 304: periodicTx = schedule + scheduleIndex;
  2570  023D  082E               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  2571  023E  00DA               	movwf	??_LIN_sendPeriodicTx
  2572  023F  01DB               	clrf	??_LIN_sendPeriodicTx+1
  2573  0240  085A               	movf	??_LIN_sendPeriodicTx,w
  2574  0241  00CB               	movwf	___wmul@multiplier
  2575  0242  085B               	movf	??_LIN_sendPeriodicTx+1,w
  2576  0243  00CC               	movwf	___wmul@multiplier+1
  2577  0244  3006               	movlw	6
  2578  0245  00CD               	movwf	___wmul@multiplicand
  2579  0246  3000               	movlw	0
  2580  0247  00CE               	movwf	___wmul@multiplicand+1
  2581  0248  3186  262E  3182   	fcall	___wmul
  2582  024B  0020               	movlb	0	; select bank0
  2583  024C  084B               	movf	?___wmul,w
  2584  024D  0761               	addwf	_schedule,w
  2585  024E  00DD               	movwf	LIN_sendPeriodicTx@periodicTx
  2586  024F  084C               	movf	?___wmul+1,w
  2587  0250  3D62               	addwfc	_schedule+1,w
  2588  0251  00DE               	movwf	LIN_sendPeriodicTx@periodicTx+1
  2589                           
  2590                           ;lin_master.c: 306: if(periodicTx->period > 0){
  2591  0252  085E               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  2592  0253  00DB               	movwf	??_LIN_sendPeriodicTx+1
  2593  0254  085D               	movf	LIN_sendPeriodicTx@periodicTx,w
  2594  0255  00DA               	movwf	??_LIN_sendPeriodicTx
  2595  0256  3004               	movlw	4
  2596  0257  075A               	addwf	??_LIN_sendPeriodicTx,w
  2597  0258  0084               	movwf	4
  2598  0259  085B               	movf	??_LIN_sendPeriodicTx+1,w
  2599  025A  1803               	skipnc
  2600  025B  0A5B               	incf	??_LIN_sendPeriodicTx+1,w
  2601  025C  0085               	movwf	5
  2602  025D  0012               	moviw fsr0++
  2603  025E  1903               	btfsc	3,2
  2604  025F  2A77               	goto	l2193
  2605                           
  2606                           ;lin_master.c: 307: LIN_queuePacket(periodicTx->cmd, periodicTx->data);
  2607  0260  085E               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  2608  0261  00DB               	movwf	??_LIN_sendPeriodicTx+1
  2609  0262  085D               	movf	LIN_sendPeriodicTx@periodicTx,w
  2610  0263  00DA               	movwf	??_LIN_sendPeriodicTx
  2611  0264  3005               	movlw	5
  2612  0265  075A               	addwf	??_LIN_sendPeriodicTx,w
  2613  0266  0084               	movwf	4
  2614  0267  085B               	movf	??_LIN_sendPeriodicTx+1,w
  2615  0268  1803               	skipnc
  2616  0269  0A5B               	incf	??_LIN_sendPeriodicTx+1,w
  2617  026A  0085               	movwf	5
  2618  026B  0800               	movf	0,w	;code access
  2619  026C  00DC               	movwf	??_LIN_sendPeriodicTx+2
  2620  026D  085C               	movf	??_LIN_sendPeriodicTx+2,w
  2621  026E  00D1               	movwf	LIN_queuePacket@data
  2622  026F  085D               	movf	LIN_sendPeriodicTx@periodicTx,w
  2623  0270  0084               	movwf	4
  2624  0271  085E               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  2625  0272  0085               	movwf	5
  2626  0273  0800               	movf	0,w	;code access
  2627  0274  3180  2049  3182   	fcall	_LIN_queuePacket
  2628  0277                     l2193:	
  2629                           ;lin_master.c: 308: }
  2630                           ;lin_master.c: 310: do{
  2631                           
  2632                           
  2633                           ;lin_master.c: 311: if(++scheduleIndex >= scheduleLength){
  2634  0277  3001               	movlw	1
  2635  0278  0020               	movlb	0	; select bank0
  2636  0279  00DA               	movwf	??_LIN_sendPeriodicTx
  2637  027A  085A               	movf	??_LIN_sendPeriodicTx,w
  2638  027B  07AE               	addwf	LIN_sendPeriodicTx@scheduleIndex,f	;volatile
  2639  027C  0866               	movf	_scheduleLength,w
  2640  027D  022E               	subwf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  2641  027E  1803               	btfsc	3,0
  2642                           
  2643                           ;lin_master.c: 312: scheduleIndex = 0;
  2644  027F  01AE               	clrf	LIN_sendPeriodicTx@scheduleIndex	;volatile
  2645                           
  2646                           ;lin_master.c: 313: }
  2647                           ;lin_master.c: 314: periodicTx = schedule + scheduleIndex;
  2648  0280  082E               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  2649  0281  00DA               	movwf	??_LIN_sendPeriodicTx
  2650  0282  01DB               	clrf	??_LIN_sendPeriodicTx+1
  2651  0283  085A               	movf	??_LIN_sendPeriodicTx,w
  2652  0284  00CB               	movwf	___wmul@multiplier
  2653  0285  085B               	movf	??_LIN_sendPeriodicTx+1,w
  2654  0286  00CC               	movwf	___wmul@multiplier+1
  2655  0287  3006               	movlw	6
  2656  0288  00CD               	movwf	___wmul@multiplicand
  2657  0289  3000               	movlw	0
  2658  028A  00CE               	movwf	___wmul@multiplicand+1
  2659  028B  3186  262E  3182   	fcall	___wmul
  2660  028E  0020               	movlb	0	; select bank0
  2661  028F  084B               	movf	?___wmul,w
  2662  0290  0761               	addwf	_schedule,w
  2663  0291  00DD               	movwf	LIN_sendPeriodicTx@periodicTx
  2664  0292  084C               	movf	?___wmul+1,w
  2665  0293  3D62               	addwfc	_schedule+1,w
  2666  0294  00DE               	movwf	LIN_sendPeriodicTx@periodicTx+1
  2667                           
  2668                           ;lin_master.c: 315: } while(periodicTx->period == 0);
  2669  0295  085E               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  2670  0296  00DB               	movwf	??_LIN_sendPeriodicTx+1
  2671  0297  085D               	movf	LIN_sendPeriodicTx@periodicTx,w
  2672  0298  00DA               	movwf	??_LIN_sendPeriodicTx
  2673  0299  3004               	movlw	4
  2674  029A  075A               	addwf	??_LIN_sendPeriodicTx,w
  2675  029B  0084               	movwf	4
  2676  029C  085B               	movf	??_LIN_sendPeriodicTx+1,w
  2677  029D  1803               	skipnc
  2678  029E  0A5B               	incf	??_LIN_sendPeriodicTx+1,w
  2679  029F  0085               	movwf	5
  2680  02A0  0012               	moviw fsr0++
  2681  02A1  1903               	btfsc	3,2
  2682  02A2  2A77               	goto	l2193
  2683                           
  2684                           ;lin_master.c: 317: LIN_period = periodicTx->period;
  2685  02A3  085E               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  2686  02A4  00DB               	movwf	??_LIN_sendPeriodicTx+1
  2687  02A5  085D               	movf	LIN_sendPeriodicTx@periodicTx,w
  2688  02A6  00DA               	movwf	??_LIN_sendPeriodicTx
  2689  02A7  3004               	movlw	4
  2690  02A8  075A               	addwf	??_LIN_sendPeriodicTx,w
  2691  02A9  0084               	movwf	4
  2692  02AA  085B               	movf	??_LIN_sendPeriodicTx+1,w
  2693  02AB  1803               	skipnc
  2694  02AC  0A5B               	incf	??_LIN_sendPeriodicTx+1,w
  2695  02AD  0085               	movwf	5
  2696  02AE  0800               	movf	0,w	;code access
  2697  02AF  00DC               	movwf	??_LIN_sendPeriodicTx+2
  2698  02B0  085C               	movf	??_LIN_sendPeriodicTx+2,w
  2699  02B1  00B4               	movwf	_LIN_period
  2700  02B2  0008               	return
  2701  02B3                     __end_of_LIN_sendPeriodicTx:	
  2702                           
  2703                           	psect	text11
  2704  062E                     __ptext11:	
  2705 ;; *************** function ___wmul *****************
  2706 ;; Defined at:
  2707 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  multiplier      2    8[BANK0 ] unsigned int 
  2710 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  product         2   12[BANK0 ] unsigned int 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  2    8[BANK0 ] unsigned int 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;Total ram usage:        6 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    6
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_LIN_sendPeriodicTx
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function ___wmul
  2738  062E                     ___wmul:	
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2742  062E  0020               	movlb	0	; select bank0
  2743  062F  01CF               	clrf	___wmul@product
  2744  0630  01D0               	clrf	___wmul@product+1
  2745  0631                     l2171:	
  2746  0631  1C4B               	btfss	___wmul@multiplier,0
  2747  0632  2E37               	goto	l593
  2748  0633  084D               	movf	___wmul@multiplicand,w
  2749  0634  07CF               	addwf	___wmul@product,f
  2750  0635  084E               	movf	___wmul@multiplicand+1,w
  2751  0636  3DD0               	addwfc	___wmul@product+1,f
  2752  0637                     l593:	
  2753  0637  3001               	movlw	1
  2754  0638                     u2755:	
  2755  0638  35CD               	lslf	___wmul@multiplicand,f
  2756  0639  0DCE               	rlf	___wmul@multiplicand+1,f
  2757  063A  0B89               	decfsz	9,f
  2758  063B  2E38               	goto	u2755
  2759  063C  3001               	movlw	1
  2760  063D                     u2765:	
  2761  063D  36CC               	lsrf	___wmul@multiplier+1,f
  2762  063E  0CCB               	rrf	___wmul@multiplier,f
  2763  063F  0B89               	decfsz	9,f
  2764  0640  2E3D               	goto	u2765
  2765  0641  084B               	movf	___wmul@multiplier,w
  2766  0642  044C               	iorwf	___wmul@multiplier+1,w
  2767  0643  1D03               	btfss	3,2
  2768  0644  2E31               	goto	l2171
  2769  0645  0850               	movf	___wmul@product+1,w
  2770  0646  00CC               	movwf	?___wmul+1
  2771  0647  084F               	movf	___wmul@product,w
  2772  0648  00CB               	movwf	?___wmul
  2773  0649  0008               	return
  2774  064A                     __end_of___wmul:	
  2775                           
  2776                           	psect	text12
  2777  0049                     __ptext12:	
  2778 ;; *************** function _LIN_queuePacket *****************
  2779 ;; Defined at:
  2780 ;;		line 71 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  cmd             1    wreg     unsigned char 
  2783 ;;  data            1   14[BANK0 ] PTR unsigned char 
  2784 ;;		 -> LFRX_Data(8), RSSI_Data(1), UNLOCK_Data(1), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  cmd             1   19[BANK0 ] unsigned char 
  2787 ;;  i               1   20[BANK0 ] unsigned char 
  2788 ;;  tempSchedule    2   21[BANK0 ] PTR const struct .
  2789 ;;		 -> ROM(8192), scheduleTable(18), 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2799 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2801 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;Total ram usage:        9 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    7
  2806 ;; This function calls:
  2807 ;;		_LIN_calcParity
  2808 ;;		_LIN_getChecksum
  2809 ;; This function is called by:
  2810 ;;		_LIN_sendPeriodicTx
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _LIN_queuePacket
  2816  0049                     _LIN_queuePacket:	
  2817                           
  2818                           ;incstack = 0
  2819                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2820                           ;LIN_queuePacket@cmd stored from wreg
  2821  0049  0020               	movlb	0	; select bank0
  2822  004A  00D6               	movwf	LIN_queuePacket@cmd
  2823                           
  2824                           ;lin_master.c: 72: const lin_cmd_packet_t* tempSchedule = schedule;
  2825  004B  0862               	movf	_schedule+1,w
  2826  004C  00D9               	movwf	LIN_queuePacket@tempSchedule+1
  2827  004D  0861               	movf	_schedule,w
  2828  004E  00D8               	movwf	LIN_queuePacket@tempSchedule
  2829                           
  2830                           ;lin_master.c: 74: for(uint8_t i = 0; i < scheduleLength; i++){
  2831  004F  01D7               	clrf	LIN_queuePacket@i
  2832  0050                     l2149:	
  2833  0050  0866               	movf	_scheduleLength,w
  2834  0051  0257               	subwf	LIN_queuePacket@i,w
  2835  0052  1803               	btfsc	3,0
  2836  0053  2865               	goto	l2151
  2837                           
  2838                           ;lin_master.c: 75: if(cmd == tempSchedule->cmd){
  2839  0054  0858               	movf	LIN_queuePacket@tempSchedule,w
  2840  0055  0084               	movwf	4
  2841  0056  0859               	movf	LIN_queuePacket@tempSchedule+1,w
  2842  0057  0085               	movwf	5
  2843  0058  0800               	movf	0,w	;code access
  2844  0059  0656               	xorwf	LIN_queuePacket@cmd,w
  2845  005A  1903               	btfsc	3,2
  2846  005B  2865               	goto	l2151
  2847                           
  2848                           ;lin_master.c: 77: }
  2849                           ;lin_master.c: 78: tempSchedule++;
  2850                           
  2851                           ;lin_master.c: 76: break;
  2852  005C  3006               	movlw	6
  2853  005D  07D8               	addwf	LIN_queuePacket@tempSchedule,f
  2854  005E  3000               	movlw	0
  2855  005F  3DD9               	addwfc	LIN_queuePacket@tempSchedule+1,f
  2856  0060  3001               	movlw	1
  2857  0061  00D2               	movwf	??_LIN_queuePacket
  2858  0062  0852               	movf	??_LIN_queuePacket,w
  2859  0063  07D7               	addwf	LIN_queuePacket@i,f
  2860  0064  2850               	goto	l2149
  2861  0065                     l2151:	
  2862                           
  2863                           ;lin_master.c: 79: }
  2864                           ;lin_master.c: 82: LIN_packet.PID = LIN_calcParity(tempSchedule->cmd);
  2865  0065  0858               	movf	LIN_queuePacket@tempSchedule,w
  2866  0066  0084               	movwf	4
  2867  0067  0859               	movf	LIN_queuePacket@tempSchedule+1,w
  2868  0068  0085               	movwf	5
  2869  0069  0800               	movf	0,w	;code access
  2870  006A  3181  21B7  3180   	fcall	_LIN_calcParity
  2871  006D  0020               	movlb	0	; select bank0
  2872  006E  00D2               	movwf	??_LIN_queuePacket
  2873  006F  0852               	movf	??_LIN_queuePacket,w
  2874  0070  00B6               	movwf	_LIN_packet
  2875                           
  2876                           ;lin_master.c: 84: if(tempSchedule->type == TRANSMIT){
  2877  0071  0859               	movf	LIN_queuePacket@tempSchedule+1,w
  2878  0072  00D3               	movwf	??_LIN_queuePacket+1
  2879  0073  0858               	movf	LIN_queuePacket@tempSchedule,w
  2880  0074  00D2               	movwf	??_LIN_queuePacket
  2881  0075  3001               	movlw	1
  2882  0076  0752               	addwf	??_LIN_queuePacket,w
  2883  0077  0084               	movwf	4
  2884  0078  0853               	movf	??_LIN_queuePacket+1,w
  2885  0079  1803               	skipnc
  2886  007A  0A53               	incf	??_LIN_queuePacket+1,w
  2887  007B  0085               	movwf	5
  2888  007C  0012               	moviw fsr0++
  2889  007D  1D03               	btfss	3,2
  2890  007E  28D1               	goto	l2165
  2891                           
  2892                           ;lin_master.c: 87: if(tempSchedule->length > 0){
  2893  007F  0859               	movf	LIN_queuePacket@tempSchedule+1,w
  2894  0080  00D3               	movwf	??_LIN_queuePacket+1
  2895  0081  0858               	movf	LIN_queuePacket@tempSchedule,w
  2896  0082  00D2               	movwf	??_LIN_queuePacket
  2897  0083  3002               	movlw	2
  2898  0084  0752               	addwf	??_LIN_queuePacket,w
  2899  0085  0084               	movwf	4
  2900  0086  0853               	movf	??_LIN_queuePacket+1,w
  2901  0087  1803               	skipnc
  2902  0088  0A53               	incf	??_LIN_queuePacket+1,w
  2903  0089  0085               	movwf	5
  2904  008A  0012               	moviw fsr0++
  2905  008B  1903               	btfsc	3,2
  2906  008C  28BD               	goto	l113
  2907                           
  2908                           ;lin_master.c: 88: LIN_packet.length = tempSchedule->length;
  2909  008D  0859               	movf	LIN_queuePacket@tempSchedule+1,w
  2910  008E  00D3               	movwf	??_LIN_queuePacket+1
  2911  008F  0858               	movf	LIN_queuePacket@tempSchedule,w
  2912  0090  00D2               	movwf	??_LIN_queuePacket
  2913  0091  3002               	movlw	2
  2914  0092  0752               	addwf	??_LIN_queuePacket,w
  2915  0093  0084               	movwf	4
  2916  0094  0853               	movf	??_LIN_queuePacket+1,w
  2917  0095  1803               	skipnc
  2918  0096  0A53               	incf	??_LIN_queuePacket+1,w
  2919  0097  0085               	movwf	5
  2920  0098  0800               	movf	0,w	;code access
  2921  0099  00D4               	movwf	??_LIN_queuePacket+2
  2922  009A  0854               	movf	??_LIN_queuePacket+2,w
  2923  009B  00C0               	movwf	_LIN_packet+10
  2924                           
  2925                           ;lin_master.c: 89: __builtin_memcpy(LIN_packet.data,data,tempSchedule->length);
  2926  009C  3001               	movlw	1
  2927  009D  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  2928  009E  0086               	movwf	6
  2929  009F  0187               	clrf	7
  2930  00A0  0020               	movlb	0	; select bank0
  2931  00A1  0859               	movf	LIN_queuePacket@tempSchedule+1,w
  2932  00A2  00D3               	movwf	??_LIN_queuePacket+1
  2933  00A3  0858               	movf	LIN_queuePacket@tempSchedule,w
  2934  00A4  00D2               	movwf	??_LIN_queuePacket
  2935  00A5  3002               	movlw	2
  2936  00A6  0752               	addwf	??_LIN_queuePacket,w
  2937  00A7  0084               	movwf	4
  2938  00A8  0853               	movf	??_LIN_queuePacket+1,w
  2939  00A9  1803               	skipnc
  2940  00AA  0A53               	incf	??_LIN_queuePacket+1,w
  2941  00AB  0085               	movwf	5
  2942  00AC  0800               	movf	0,w	;code access
  2943  00AD  00D4               	movwf	??_LIN_queuePacket+2
  2944  00AE  01D5               	clrf	??_LIN_queuePacket+3
  2945  00AF  0851               	movf	LIN_queuePacket@data,w
  2946  00B0  0084               	movwf	4
  2947  00B1  0185               	clrf	5
  2948  00B2                     u273m0:	
  2949  00B2  0012               	moviw fsr0++
  2950  00B3  001E               	movwi fsr1++
  2951  00B4  3001               	movlw	1
  2952  00B5  02D4               	subwf	??_LIN_queuePacket+2,f
  2953  00B6  3000               	movlw	0
  2954  00B7  3BD5               	subwfb	??_LIN_queuePacket+3,f
  2955  00B8  0855               	movf	??_LIN_queuePacket+3,w
  2956  00B9  0454               	iorwf	??_LIN_queuePacket+2,w
  2957  00BA  1D03               	btfss	3,2
  2958  00BB  28B2               	goto	u273m0
  2959  00BC  28C3               	goto	l2163
  2960  00BD                     l113:	
  2961                           ;lin_master.c: 90: } else {
  2962                           
  2963                           
  2964                           ;lin_master.c: 91: LIN_packet.length = 1;
  2965  00BD  01C0               	clrf	_LIN_packet+10
  2966  00BE  0AC0               	incf	_LIN_packet+10,f
  2967                           
  2968                           ;lin_master.c: 92: LIN_packet.data[0] = 0xAA;
  2969  00BF  30AA               	movlw	170
  2970  00C0  00D2               	movwf	??_LIN_queuePacket
  2971  00C1  0852               	movf	??_LIN_queuePacket,w
  2972  00C2  00B7               	movwf	_LIN_packet+1
  2973  00C3                     l2163:	
  2974                           
  2975                           ;lin_master.c: 93: }
  2976                           ;lin_master.c: 96: LIN_packet.checksum = LIN_getChecksum(LIN_packet.length, LIN_packet.d
      +                          ata);
  2977  00C3  3037               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  2978  00C4  0020               	movlb	0	; select bank0
  2979  00C5  00D2               	movwf	??_LIN_queuePacket
  2980  00C6  0852               	movf	??_LIN_queuePacket,w
  2981  00C7  00CB               	movwf	LIN_getChecksum@data
  2982  00C8  0840               	movf	_LIN_packet+10,w
  2983  00C9  3184  24E8  3180   	fcall	_LIN_getChecksum
  2984  00CC  0020               	movlb	0	; select bank0
  2985  00CD  00D3               	movwf	??_LIN_queuePacket+1
  2986  00CE  0853               	movf	??_LIN_queuePacket+1,w
  2987  00CF  00BF               	movwf	_LIN_packet+9
  2988                           
  2989                           ;lin_master.c: 98: } else {
  2990  00D0  28FC               	goto	l2167
  2991  00D1                     l2165:	
  2992                           
  2993                           ;lin_master.c: 99: LIN_rxPacket.rxLength = tempSchedule->length;
  2994  00D1  0859               	movf	LIN_queuePacket@tempSchedule+1,w
  2995  00D2  00D3               	movwf	??_LIN_queuePacket+1
  2996  00D3  0858               	movf	LIN_queuePacket@tempSchedule,w
  2997  00D4  00D2               	movwf	??_LIN_queuePacket
  2998  00D5  3002               	movlw	2
  2999  00D6  0752               	addwf	??_LIN_queuePacket,w
  3000  00D7  0084               	movwf	4
  3001  00D8  0853               	movf	??_LIN_queuePacket+1,w
  3002  00D9  1803               	skipnc
  3003  00DA  0A53               	incf	??_LIN_queuePacket+1,w
  3004  00DB  0085               	movwf	5
  3005  00DC  0800               	movf	0,w	;code access
  3006  00DD  00D4               	movwf	??_LIN_queuePacket+2
  3007  00DE  0854               	movf	??_LIN_queuePacket+2,w
  3008  00DF  0021               	movlb	1	; select bank1
  3009  00E0  00B1               	movwf	(_LIN_rxPacket^(0+128)+1)
  3010                           
  3011                           ;lin_master.c: 100: LIN_rxPacket.cmd = tempSchedule->cmd;
  3012  00E1  0020               	movlb	0	; select bank0
  3013  00E2  0858               	movf	LIN_queuePacket@tempSchedule,w
  3014  00E3  0084               	movwf	4
  3015  00E4  0859               	movf	LIN_queuePacket@tempSchedule+1,w
  3016  00E5  0085               	movwf	5
  3017  00E6  0800               	movf	0,w	;code access
  3018  00E7  00D2               	movwf	??_LIN_queuePacket
  3019  00E8  0852               	movf	??_LIN_queuePacket,w
  3020  00E9  0021               	movlb	1	; select bank1
  3021  00EA  00B0               	movwf	_LIN_rxPacket^(0+128)
  3022                           
  3023                           ;lin_master.c: 101: LIN_rxPacket.timeout = tempSchedule->timeout;
  3024  00EB  0020               	movlb	0	; select bank0
  3025  00EC  0859               	movf	LIN_queuePacket@tempSchedule+1,w
  3026  00ED  00D3               	movwf	??_LIN_queuePacket+1
  3027  00EE  0858               	movf	LIN_queuePacket@tempSchedule,w
  3028  00EF  00D2               	movwf	??_LIN_queuePacket
  3029  00F0  3003               	movlw	3
  3030  00F1  0752               	addwf	??_LIN_queuePacket,w
  3031  00F2  0084               	movwf	4
  3032  00F3  0853               	movf	??_LIN_queuePacket+1,w
  3033  00F4  1803               	skipnc
  3034  00F5  0A53               	incf	??_LIN_queuePacket+1,w
  3035  00F6  0085               	movwf	5
  3036  00F7  0800               	movf	0,w	;code access
  3037  00F8  00D4               	movwf	??_LIN_queuePacket+2
  3038  00F9  0854               	movf	??_LIN_queuePacket+2,w
  3039  00FA  0021               	movlb	1	; select bank1
  3040  00FB  00BB               	movwf	(_LIN_rxPacket^(0+128)+11)
  3041  00FC                     l2167:	
  3042                           
  3043                           ;lin_master.c: 102: }
  3044                           ;lin_master.c: 104: LIN_txReady = 1;
  3045  00FC  0020               	movlb	0	; select bank0
  3046  00FD  01B5               	clrf	_LIN_txReady
  3047  00FE  0AB5               	incf	_LIN_txReady,f
  3048  00FF  0008               	return
  3049  0100                     __end_of_LIN_queuePacket:	
  3050                           
  3051                           	psect	text13
  3052  01B7                     __ptext13:	
  3053 ;; *************** function _LIN_calcParity *****************
  3054 ;; Defined at:
  3055 ;;		line 211 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  CMD             1    wreg     unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  CMD             1    9[BANK0 ] unsigned char 
  3060 ;;  PID             1   10[BANK0 ] struct .
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      unsigned char 
  3063 ;; Registers used:
  3064 ;;		wreg, status,0
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3071 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3073 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3074 ;;Total ram usage:        3 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    6
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_LIN_queuePacket
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function _LIN_calcParity
  3086  01B7                     _LIN_calcParity:	
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  3090                           ;LIN_calcParity@CMD stored from wreg
  3091  01B7  0020               	movlb	0	; select bank0
  3092  01B8  00CC               	movwf	LIN_calcParity@CMD
  3093                           
  3094                           ;lin_master.c: 212: lin_pid_t PID;
  3095                           ;lin_master.c: 213: PID.rawPID = CMD;
  3096  01B9  084C               	movf	LIN_calcParity@CMD,w
  3097  01BA  00CB               	movwf	??_LIN_calcParity
  3098  01BB  084B               	movf	??_LIN_calcParity,w
  3099  01BC  00CD               	movwf	LIN_calcParity@PID
  3100                           
  3101                           ;lin_master.c: 218: PID.P0 = PID.ID0 ^ PID.ID1;
  3102  01BD  1CCD               	btfss	LIN_calcParity@PID,1
  3103  01BE  29C1               	goto	u2410
  3104  01BF  3001               	movlw	1
  3105  01C0  29C2               	goto	u2412
  3106  01C1                     u2410:	
  3107  01C1  3000               	movlw	0
  3108  01C2                     u2412:	
  3109  01C2  00CB               	movwf	??_LIN_calcParity
  3110  01C3  1C4D               	btfss	LIN_calcParity@PID,0
  3111  01C4  29C7               	goto	u2420
  3112  01C5  3001               	movlw	1
  3113  01C6  29C8               	goto	u2422
  3114  01C7                     u2420:	
  3115  01C7  3000               	movlw	0
  3116  01C8                     u2422:	
  3117  01C8  064B               	xorwf	??_LIN_calcParity,w
  3118  01C9  1903               	btfsc	3,2
  3119  01CA  29CE               	goto	u2430
  3120  01CB  0020               	movlb	0	; select bank0
  3121  01CC  174D               	bsf	LIN_calcParity@PID,6
  3122  01CD  29D0               	goto	u2444
  3123  01CE                     u2430:	
  3124  01CE  0020               	movlb	0	; select bank0
  3125  01CF  134D               	bcf	LIN_calcParity@PID,6
  3126  01D0                     u2444:	
  3127                           
  3128                           ;lin_master.c: 219: PID.P0 = PID.P0 ^ PID.ID2;
  3129  01D0  1D4D               	btfss	LIN_calcParity@PID,2
  3130  01D1  29D4               	goto	u2450
  3131  01D2  3001               	movlw	1
  3132  01D3  29D5               	goto	u2452
  3133  01D4                     u2450:	
  3134  01D4  3000               	movlw	0
  3135  01D5                     u2452:	
  3136  01D5  00CB               	movwf	??_LIN_calcParity
  3137  01D6  1F4D               	btfss	LIN_calcParity@PID,6
  3138  01D7  29DA               	goto	u2460
  3139  01D8  3001               	movlw	1
  3140  01D9  29DB               	goto	u2462
  3141  01DA                     u2460:	
  3142  01DA  3000               	movlw	0
  3143  01DB                     u2462:	
  3144  01DB  064B               	xorwf	??_LIN_calcParity,w
  3145  01DC  1903               	btfsc	3,2
  3146  01DD  29E1               	goto	u2470
  3147  01DE  0020               	movlb	0	; select bank0
  3148  01DF  174D               	bsf	LIN_calcParity@PID,6
  3149  01E0  29E3               	goto	u2484
  3150  01E1                     u2470:	
  3151  01E1  0020               	movlb	0	; select bank0
  3152  01E2  134D               	bcf	LIN_calcParity@PID,6
  3153  01E3                     u2484:	
  3154                           
  3155                           ;lin_master.c: 220: PID.P0 = PID.P0 ^ PID.ID4;
  3156  01E3  1E4D               	btfss	LIN_calcParity@PID,4
  3157  01E4  29E7               	goto	u2490
  3158  01E5  3001               	movlw	1
  3159  01E6  29E8               	goto	u2492
  3160  01E7                     u2490:	
  3161  01E7  3000               	movlw	0
  3162  01E8                     u2492:	
  3163  01E8  00CB               	movwf	??_LIN_calcParity
  3164  01E9  1F4D               	btfss	LIN_calcParity@PID,6
  3165  01EA  29ED               	goto	u2500
  3166  01EB  3001               	movlw	1
  3167  01EC  29EE               	goto	u2502
  3168  01ED                     u2500:	
  3169  01ED  3000               	movlw	0
  3170  01EE                     u2502:	
  3171  01EE  064B               	xorwf	??_LIN_calcParity,w
  3172  01EF  1903               	btfsc	3,2
  3173  01F0  29F4               	goto	u2510
  3174  01F1  0020               	movlb	0	; select bank0
  3175  01F2  174D               	bsf	LIN_calcParity@PID,6
  3176  01F3  29F6               	goto	u2524
  3177  01F4                     u2510:	
  3178  01F4  0020               	movlb	0	; select bank0
  3179  01F5  134D               	bcf	LIN_calcParity@PID,6
  3180  01F6                     u2524:	
  3181                           
  3182                           ;lin_master.c: 221: PID.P1 = PID.ID1 ^ PID.ID3;
  3183  01F6  1DCD               	btfss	LIN_calcParity@PID,3
  3184  01F7  29FA               	goto	u2530
  3185  01F8  3001               	movlw	1
  3186  01F9  29FB               	goto	u2532
  3187  01FA                     u2530:	
  3188  01FA  3000               	movlw	0
  3189  01FB                     u2532:	
  3190  01FB  00CB               	movwf	??_LIN_calcParity
  3191  01FC  1CCD               	btfss	LIN_calcParity@PID,1
  3192  01FD  2A00               	goto	u2540
  3193  01FE  3001               	movlw	1
  3194  01FF  2A01               	goto	u2542
  3195  0200                     u2540:	
  3196  0200  3000               	movlw	0
  3197  0201                     u2542:	
  3198  0201  064B               	xorwf	??_LIN_calcParity,w
  3199  0202  1903               	btfsc	3,2
  3200  0203  2A07               	goto	u2550
  3201  0204  0020               	movlb	0	; select bank0
  3202  0205  17CD               	bsf	LIN_calcParity@PID,7
  3203  0206  2A09               	goto	u2564
  3204  0207                     u2550:	
  3205  0207  0020               	movlb	0	; select bank0
  3206  0208  13CD               	bcf	LIN_calcParity@PID,7
  3207  0209                     u2564:	
  3208                           
  3209                           ;lin_master.c: 222: PID.P1 = PID.P1 ^ PID.ID4;
  3210  0209  1E4D               	btfss	LIN_calcParity@PID,4
  3211  020A  2A0D               	goto	u2570
  3212  020B  3001               	movlw	1
  3213  020C  2A0E               	goto	u2572
  3214  020D                     u2570:	
  3215  020D  3000               	movlw	0
  3216  020E                     u2572:	
  3217  020E  00CB               	movwf	??_LIN_calcParity
  3218  020F  1FCD               	btfss	LIN_calcParity@PID,7
  3219  0210  2A13               	goto	u2580
  3220  0211  3001               	movlw	1
  3221  0212  2A14               	goto	u2582
  3222  0213                     u2580:	
  3223  0213  3000               	movlw	0
  3224  0214                     u2582:	
  3225  0214  064B               	xorwf	??_LIN_calcParity,w
  3226  0215  1903               	btfsc	3,2
  3227  0216  2A1A               	goto	u2590
  3228  0217  0020               	movlb	0	; select bank0
  3229  0218  17CD               	bsf	LIN_calcParity@PID,7
  3230  0219  2A1C               	goto	u2604
  3231  021A                     u2590:	
  3232  021A  0020               	movlb	0	; select bank0
  3233  021B  13CD               	bcf	LIN_calcParity@PID,7
  3234  021C                     u2604:	
  3235                           
  3236                           ;lin_master.c: 223: PID.P1 = PID.P1 ^ PID.ID5;
  3237  021C  1ECD               	btfss	LIN_calcParity@PID,5
  3238  021D  2A20               	goto	u2610
  3239  021E  3001               	movlw	1
  3240  021F  2A21               	goto	u2612
  3241  0220                     u2610:	
  3242  0220  3000               	movlw	0
  3243  0221                     u2612:	
  3244  0221  00CB               	movwf	??_LIN_calcParity
  3245  0222  1FCD               	btfss	LIN_calcParity@PID,7
  3246  0223  2A26               	goto	u2620
  3247  0224  3001               	movlw	1
  3248  0225  2A27               	goto	u2622
  3249  0226                     u2620:	
  3250  0226  3000               	movlw	0
  3251  0227                     u2622:	
  3252  0227  064B               	xorwf	??_LIN_calcParity,w
  3253  0228  1903               	btfsc	3,2
  3254  0229  2A2D               	goto	u2630
  3255  022A  0020               	movlb	0	; select bank0
  3256  022B  17CD               	bsf	LIN_calcParity@PID,7
  3257  022C  2A2F               	goto	l2113
  3258  022D                     u2630:	
  3259  022D  0020               	movlb	0	; select bank0
  3260  022E  13CD               	bcf	LIN_calcParity@PID,7
  3261  022F                     l2113:	
  3262                           
  3263                           ;lin_master.c: 224: PID.P1 = ~PID.P1;
  3264  022F  1003               	clrc
  3265  0230  1FCD               	btfss	LIN_calcParity@PID,7
  3266  0231  1403               	setc
  3267  0232  1C03               	btfss	3,0
  3268  0233  2A37               	goto	u2650
  3269  0234  0020               	movlb	0	; select bank0
  3270  0235  17CD               	bsf	LIN_calcParity@PID,7
  3271  0236  2A39               	goto	l2115
  3272  0237                     u2650:	
  3273  0237  0020               	movlb	0	; select bank0
  3274  0238  13CD               	bcf	LIN_calcParity@PID,7
  3275  0239                     l2115:	
  3276                           
  3277                           ;lin_master.c: 226: return PID.rawPID;
  3278  0239  084D               	movf	LIN_calcParity@PID,w
  3279  023A  0008               	return
  3280  023B                     __end_of_LIN_calcParity:	
  3281                           
  3282                           	psect	text14
  3283  0797                     __ptext14:	
  3284 ;; *************** function _LIN_startPeriod *****************
  3285 ;; Defined at:
  3286 ;;		line 275 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		None
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    6
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_LIN_init
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function _LIN_startPeriod
  3316  0797                     _LIN_startPeriod:	
  3317                           
  3318                           ;lin_master.c: 276: LIN_enablePeriodTx = 1;
  3319                           
  3320                           ;incstack = 0
  3321                           ; Regs used in _LIN_startPeriod: []
  3322  0797  0020               	movlb	0	; select bank0
  3323  0798  01E5               	clrf	_LIN_enablePeriodTx
  3324  0799  0AE5               	incf	_LIN_enablePeriodTx,f
  3325  079A  0008               	return
  3326  079B                     __end_of_LIN_startPeriod:	
  3327                           
  3328                           	psect	text15
  3329  0765                     __ptext15:	
  3330 ;; *************** function _LIN_setTimerHandler *****************
  3331 ;; Defined at:
  3332 ;;		line 265 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    7
  3353 ;; This function calls:
  3354 ;;		_TMR0_SetInterruptHandler
  3355 ;; This function is called by:
  3356 ;;		_LIN_init
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _LIN_setTimerHandler
  3362  0765                     _LIN_setTimerHandler:	
  3363                           
  3364                           ;lin_master.c: 266: TMR0_SetInterruptHandler(LIN_timerHandler);
  3365                           
  3366                           ;incstack = 0
  3367                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  3368  0765  3064               	movlw	low _LIN_timerHandler
  3369  0766  0020               	movlb	0	; select bank0
  3370  0767  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3371  0768  3005               	movlw	high _LIN_timerHandler
  3372  0769  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3373  076A  3187  277A         	fcall	_TMR0_SetInterruptHandler
  3374  076C  0008               	return
  3375  076D                     __end_of_LIN_setTimerHandler:	
  3376                           
  3377                           	psect	text16
  3378  077A                     __ptext16:	
  3379 ;; *************** function _TMR0_SetInterruptHandler *****************
  3380 ;; Defined at:
  3381 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  InterruptHan    2    8[BANK0 ] PTR FTN()void 
  3384 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3396 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;Total ram usage:        2 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    6
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_LIN_setTimerHandler
  3407 ;;		_TMR0_Initialize
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _TMR0_SetInterruptHandler
  3413  077A                     _TMR0_SetInterruptHandler:	
  3414                           
  3415                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  3416                           
  3417                           ;incstack = 0
  3418                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3419  077A  0020               	movlb	0	; select bank0
  3420  077B  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3421  077C  00E0               	movwf	_TMR0_InterruptHandler+1
  3422  077D  084B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3423  077E  00DF               	movwf	_TMR0_InterruptHandler
  3424  077F  0008               	return
  3425  0780                     __end_of_TMR0_SetInterruptHandler:	
  3426                           
  3427                           	psect	text17
  3428  0412                     __ptext17:	
  3429 ;; *************** function _EUSART_Initialize *****************
  3430 ;; Defined at:
  3431 ;;		line 85 in file "mcc_generated_files/eusart.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, pclath, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3449 ;;Total ram usage:        1 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    7
  3452 ;; This function calls:
  3453 ;;		_EUSART_SetErrorHandler
  3454 ;;		_EUSART_SetFramingErrorHandler
  3455 ;;		_EUSART_SetOverrunErrorHandler
  3456 ;;		_EUSART_SetRxInterruptHandler
  3457 ;;		_EUSART_SetTxInterruptHandler
  3458 ;; This function is called by:
  3459 ;;		_SYSTEM_Initialize
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _EUSART_Initialize
  3465  0412                     _EUSART_Initialize:	
  3466                           
  3467                           ;eusart.c: 88: PIE1bits.RCIE = 0;
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3471  0412  0021               	movlb	1	; select bank1
  3472  0413  1291               	bcf	17,5	;volatile
  3473                           
  3474                           ;eusart.c: 89: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3475  0414  3055               	movlw	low _EUSART_Receive_ISR
  3476  0415  0020               	movlb	0	; select bank0
  3477  0416  00CB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3478  0417  3004               	movlw	high _EUSART_Receive_ISR
  3479  0418  00CC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3480  0419  3187  2741  3184   	fcall	_EUSART_SetRxInterruptHandler
  3481                           
  3482                           ;eusart.c: 90: PIE1bits.TXIE = 0;
  3483  041C  0021               	movlb	1	; select bank1
  3484  041D  1211               	bcf	17,4	;volatile
  3485                           
  3486                           ;eusart.c: 91: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  3487  041E  3011               	movlw	low _EUSART_Transmit_ISR
  3488  041F  0020               	movlb	0	; select bank0
  3489  0420  00CB               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3490  0421  3006               	movlw	high _EUSART_Transmit_ISR
  3491  0422  00CC               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3492  0423  3187  2738  3184   	fcall	_EUSART_SetTxInterruptHandler
  3493                           
  3494                           ;eusart.c: 95: BAUDCON = 0x08;
  3495  0426  3008               	movlw	8
  3496  0427  0023               	movlb	3	; select bank3
  3497  0428  009F               	movwf	31	;volatile
  3498                           
  3499                           ;eusart.c: 98: RCSTA = 0x90;
  3500  0429  3090               	movlw	144
  3501  042A  009D               	movwf	29	;volatile
  3502                           
  3503                           ;eusart.c: 101: TXSTA = 0x24;
  3504  042B  3024               	movlw	36
  3505  042C  009E               	movwf	30	;volatile
  3506                           
  3507                           ;eusart.c: 104: SPBRGL = 0xCF;
  3508  042D  30CF               	movlw	207
  3509  042E  009B               	movwf	27	;volatile
  3510                           
  3511                           ;eusart.c: 107: SPBRGH = 0x00;
  3512  042F  019C               	clrf	28	;volatile
  3513                           
  3514                           ;eusart.c: 110: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  3515  0430  30AE               	movlw	low _EUSART_DefaultFramingErrorHandler
  3516  0431  0020               	movlb	0	; select bank0
  3517  0432  00CB               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3518  0433  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  3519  0434  00CC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3520  0435  3187  2753  3184   	fcall	_EUSART_SetFramingErrorHandler
  3521                           
  3522                           ;eusart.c: 111: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3523  0438  309F               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3524  0439  0020               	movlb	0	; select bank0
  3525  043A  00CB               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3526  043B  3007               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3527  043C  00CC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3528  043D  3187  274A  3184   	fcall	_EUSART_SetOverrunErrorHandler
  3529                           
  3530                           ;eusart.c: 112: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  3531  0440  30A9               	movlw	low _EUSART_DefaultErrorHandler
  3532  0441  0020               	movlb	0	; select bank0
  3533  0442  00CB               	movwf	EUSART_SetErrorHandler@interruptHandler
  3534  0443  3007               	movlw	high _EUSART_DefaultErrorHandler
  3535  0444  00CC               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3536  0445  3187  275C         	fcall	_EUSART_SetErrorHandler
  3537                           
  3538                           ;eusart.c: 114: eusartRxLastError.status = 0;
  3539  0447  0020               	movlb	0	; select bank0
  3540  0448  01A8               	clrf	_eusartRxLastError	;volatile
  3541                           
  3542                           ;eusart.c: 117: eusartTxHead = 0;
  3543  0449  01AD               	clrf	_eusartTxHead	;volatile
  3544                           
  3545                           ;eusart.c: 118: eusartTxTail = 0;
  3546  044A  01AC               	clrf	_eusartTxTail	;volatile
  3547                           
  3548                           ;eusart.c: 119: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3549  044B  3008               	movlw	8
  3550  044C  00CD               	movwf	??_EUSART_Initialize
  3551  044D  084D               	movf	??_EUSART_Initialize,w
  3552  044E  00E3               	movwf	_eusartTxBufferRemaining	;volatile
  3553                           
  3554                           ;eusart.c: 121: eusartRxHead = 0;
  3555  044F  01AB               	clrf	_eusartRxHead	;volatile
  3556                           
  3557                           ;eusart.c: 122: eusartRxTail = 0;
  3558  0450  01AA               	clrf	_eusartRxTail	;volatile
  3559                           
  3560                           ;eusart.c: 123: eusartRxCount = 0;
  3561  0451  01A9               	clrf	_eusartRxCount	;volatile
  3562                           
  3563                           ;eusart.c: 126: PIE1bits.RCIE = 1;
  3564  0452  0021               	movlb	1	; select bank1
  3565  0453  1691               	bsf	17,5	;volatile
  3566  0454  0008               	return
  3567  0455                     __end_of_EUSART_Initialize:	
  3568                           
  3569                           	psect	text18
  3570  0738                     __ptext18:	
  3571 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3572 ;; Defined at:
  3573 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  3576 ;;		 -> EUSART_Transmit_ISR(1), 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;Total ram usage:        2 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    6
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_EUSART_Initialize
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           
  3603                           ;psect for function _EUSART_SetTxInterruptHandler
  3604  0738                     _EUSART_SetTxInterruptHandler:	
  3605                           
  3606                           ;eusart.c: 274: EUSART_TxDefaultInterruptHandler = interruptHandler;
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3610  0738  0020               	movlb	0	; select bank0
  3611  0739  084C               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3612  073A  0021               	movlb	1	; select bank1
  3613  073B  00CF               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  3614  073C  0020               	movlb	0	; select bank0
  3615  073D  084B               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3616  073E  0021               	movlb	1	; select bank1
  3617  073F  00CE               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  3618  0740  0008               	return
  3619  0741                     __end_of_EUSART_SetTxInterruptHandler:	
  3620                           
  3621                           	psect	text19
  3622  0741                     __ptext19:	
  3623 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3624 ;; Defined at:
  3625 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  3628 ;;		 -> EUSART_Receive_ISR(1), 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;Total ram usage:        2 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    6
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_EUSART_Initialize
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           
  3655                           ;psect for function _EUSART_SetRxInterruptHandler
  3656  0741                     _EUSART_SetRxInterruptHandler:	
  3657                           
  3658                           ;eusart.c: 278: EUSART_RxDefaultInterruptHandler = interruptHandler;
  3659                           
  3660                           ;incstack = 0
  3661                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3662  0741  0020               	movlb	0	; select bank0
  3663  0742  084C               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3664  0743  0021               	movlb	1	; select bank1
  3665  0744  00CD               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  3666  0745  0020               	movlb	0	; select bank0
  3667  0746  084B               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3668  0747  0021               	movlb	1	; select bank1
  3669  0748  00CC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  3670  0749  0008               	return
  3671  074A                     __end_of_EUSART_SetRxInterruptHandler:	
  3672                           
  3673                           	psect	text20
  3674  074A                     __ptext20:	
  3675 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3676 ;; Defined at:
  3677 ;;		line 265 in file "mcc_generated_files/eusart.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  3680 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;Total ram usage:        2 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    6
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_EUSART_Initialize
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _EUSART_SetOverrunErrorHandler
  3708  074A                     _EUSART_SetOverrunErrorHandler:	
  3709                           
  3710                           ;eusart.c: 266: EUSART_OverrunErrorHandler = interruptHandler;
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3714  074A  0020               	movlb	0	; select bank0
  3715  074B  084C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3716  074C  0021               	movlb	1	; select bank1
  3717  074D  00C7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  3718  074E  0020               	movlb	0	; select bank0
  3719  074F  084B               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3720  0750  0021               	movlb	1	; select bank1
  3721  0751  00C6               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  3722  0752  0008               	return
  3723  0753                     __end_of_EUSART_SetOverrunErrorHandler:	
  3724                           
  3725                           	psect	text21
  3726  0753                     __ptext21:	
  3727 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3728 ;; Defined at:
  3729 ;;		line 261 in file "mcc_generated_files/eusart.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  3732 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;Total ram usage:        2 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    6
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_EUSART_Initialize
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           
  3759                           ;psect for function _EUSART_SetFramingErrorHandler
  3760  0753                     _EUSART_SetFramingErrorHandler:	
  3761                           
  3762                           ;eusart.c: 262: EUSART_FramingErrorHandler = interruptHandler;
  3763                           
  3764                           ;incstack = 0
  3765                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3766  0753  0020               	movlb	0	; select bank0
  3767  0754  084C               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3768  0755  0021               	movlb	1	; select bank1
  3769  0756  00C9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  3770  0757  0020               	movlb	0	; select bank0
  3771  0758  084B               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3772  0759  0021               	movlb	1	; select bank1
  3773  075A  00C8               	movwf	_EUSART_FramingErrorHandler^(0+128)
  3774  075B  0008               	return
  3775  075C                     __end_of_EUSART_SetFramingErrorHandler:	
  3776                           
  3777                           	psect	text22
  3778  075C                     __ptext22:	
  3779 ;; *************** function _EUSART_SetErrorHandler *****************
  3780 ;; Defined at:
  3781 ;;		line 269 in file "mcc_generated_files/eusart.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  3784 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3800 ;;Total ram usage:        2 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    6
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_EUSART_Initialize
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           
  3811                           ;psect for function _EUSART_SetErrorHandler
  3812  075C                     _EUSART_SetErrorHandler:	
  3813                           
  3814                           ;eusart.c: 270: EUSART_ErrorHandler = interruptHandler;
  3815                           
  3816                           ;incstack = 0
  3817                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3818  075C  0020               	movlb	0	; select bank0
  3819  075D  084C               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3820  075E  0021               	movlb	1	; select bank1
  3821  075F  00C5               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  3822  0760  0020               	movlb	0	; select bank0
  3823  0761  084B               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3824  0762  0021               	movlb	1	; select bank1
  3825  0763  00C4               	movwf	_EUSART_ErrorHandler^(0+128)
  3826  0764  0008               	return
  3827  0765                     __end_of_EUSART_SetErrorHandler:	
  3828                           
  3829                           	psect	text23
  3830  03A0                     __ptext23:	
  3831 ;; *************** function _LIN_handler *****************
  3832 ;; Defined at:
  3833 ;;		line 107 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      enum E119
  3840 ;; Registers used:
  3841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;Total ram usage:        1 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    9
  3854 ;; This function calls:
  3855 ;;		Absolute function
  3856 ;;		_EUSART_is_rx_ready
  3857 ;;		_LIN_disableRx
  3858 ;;		_LIN_enableRx
  3859 ;;		_LIN_receivePacket
  3860 ;;		_LIN_sendPacket
  3861 ;;		_LIN_startTimer
  3862 ;;		_memset
  3863 ;;		_processLIN
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           
  3870                           ;psect for function _LIN_handler
  3871  03A0                     _LIN_handler:	
  3872                           
  3873                           ;lin_master.c: 108: static lin_state_t LIN_state = LIN_IDLE;
  3874                           ;lin_master.c: 111: switch(LIN_state){
  3875                           
  3876                           ;incstack = 0
  3877                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3878  03A0  2C02               	goto	l2759
  3879  03A1                     l2717:	
  3880                           ;lin_master.c: 112: case LIN_IDLE:
  3881                           
  3882                           
  3883                           ;lin_master.c: 113: if(LIN_txReady == 1){
  3884  03A1  0020               	movlb	0	; select bank0
  3885  03A2  0335               	decf	_LIN_txReady,w
  3886  03A3  1D03               	btfss	3,2
  3887  03A4  0008               	return
  3888                           
  3889                           ;lin_master.c: 114: LIN_txReady = 0;
  3890  03A5  01B5               	clrf	_LIN_txReady
  3891                           
  3892                           ;lin_master.c: 115: LIN_disableRx();
  3893  03A6  3187  278A  3183   	fcall	_LIN_disableRx
  3894                           
  3895                           ;lin_master.c: 117: LIN_sendPacket();
  3896  03A9  3184  24BB  3183   	fcall	_LIN_sendPacket
  3897                           
  3898                           ;lin_master.c: 118: memset(LIN_packet.rawPacket, 0, sizeof(LIN_packet.rawPacket));
  3899  03AC  3000               	movlw	0
  3900  03AD  0020               	movlb	0	; select bank0
  3901  03AE  00CB               	movwf	memset@c
  3902  03AF  00CC               	movwf	memset@c+1
  3903  03B0  300B               	movlw	11
  3904  03B1  00CD               	movwf	memset@n
  3905  03B2  3000               	movlw	0
  3906  03B3  00CE               	movwf	memset@n+1
  3907  03B4  3036               	movlw	(low (_LIN_packet| 0))& (0+255)
  3908  03B5  3186  264A         	fcall	_memset
  3909                           
  3910                           ;lin_master.c: 119: LIN_state = LIN_TX_IP;
  3911  03B7  0020               	movlb	0	; select bank0
  3912  03B8  01B0               	clrf	LIN_handler@LIN_state
  3913  03B9  0AB0               	incf	LIN_handler@LIN_state,f
  3914                           
  3915                           ;lin_master.c: 122: }
  3916                           ;lin_master.c: 123: break;
  3917                           
  3918                           ;lin_master.c: 120: } else {
  3919  03BA  0008               	return
  3920  03BB                     l126:	
  3921                           ;lin_master.c: 124: case LIN_TX_IP:
  3922                           
  3923                           
  3924                           ;lin_master.c: 126: if(PIE1bits.TXIE == 0){
  3925  03BB  0021               	movlb	1	; select bank1
  3926  03BC  1A11               	btfsc	17,4	;volatile
  3927  03BD  0008               	return
  3928                           
  3929                           ;lin_master.c: 127: if(TXSTAbits.TRMT == 1){
  3930  03BE  0023               	movlb	3	; select bank3
  3931  03BF  1C9E               	btfss	30,1	;volatile
  3932  03C0  0008               	return
  3933                           
  3934                           ;lin_master.c: 129: if(LIN_rxPacket.rxLength > 0){
  3935  03C1  0021               	movlb	1	; select bank1
  3936  03C2  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  3937  03C3  1903               	btfsc	3,2
  3938  03C4  2BD2               	goto	l2737
  3939                           
  3940                           ;lin_master.c: 131: LIN_startTimer(LIN_rxPacket.timeout);
  3941  03C5  083B               	movf	(_LIN_rxPacket^(0+128)+11),w
  3942  03C6  3187  270F  3183   	fcall	_LIN_startTimer
  3943                           
  3944                           ;lin_master.c: 132: LIN_enableRx();
  3945  03C9  3187  2785         	fcall	_LIN_enableRx
  3946                           
  3947                           ;lin_master.c: 133: LIN_state = LIN_RX_IP;
  3948  03CB  3002               	movlw	2
  3949  03CC  0021               	movlb	1	; select bank1
  3950  03CD  00D0               	movwf	??_LIN_handler^(0+128)
  3951  03CE  0850               	movf	??_LIN_handler^(0+128),w
  3952  03CF  0020               	movlb	0	; select bank0
  3953  03D0  00B0               	movwf	LIN_handler@LIN_state
  3954                           
  3955                           ;lin_master.c: 134: } else {
  3956  03D1  0008               	return
  3957  03D2                     l2737:	
  3958                           
  3959                           ;lin_master.c: 135: LIN_state = LIN_IDLE;
  3960  03D2  0020               	movlb	0	; select bank0
  3961  03D3  01B0               	clrf	LIN_handler@LIN_state
  3962                           
  3963                           ;lin_master.c: 136: }
  3964                           ;lin_master.c: 137: }
  3965                           ;lin_master.c: 138: }
  3966                           ;lin_master.c: 139: break;
  3967  03D4  0008               	return
  3968  03D5                     l2739:	
  3969                           ;lin_master.c: 140: case LIN_RX_IP:
  3970                           
  3971                           
  3972                           ;lin_master.c: 142: if(LIN_timerRunning == 0){
  3973  03D5  0833               	movf	_LIN_timerRunning,w
  3974  03D6  1D03               	btfss	3,2
  3975  03D7  2BE4               	goto	l2745
  3976                           
  3977                           ;lin_master.c: 144: LIN_state = LIN_IDLE;
  3978  03D8  01B0               	clrf	LIN_handler@LIN_state
  3979                           
  3980                           ;lin_master.c: 145: memset(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3981  03D9  3000               	movlw	0
  3982  03DA  00CB               	movwf	memset@c
  3983  03DB  00CC               	movwf	memset@c+1
  3984  03DC  300C               	movlw	12
  3985  03DD  00CD               	movwf	memset@n
  3986  03DE  3000               	movlw	0
  3987  03DF  00CE               	movwf	memset@n+1
  3988  03E0  30B0               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3989  03E1  3186  264A         	fcall	_memset
  3990                           
  3991                           ;lin_master.c: 146: } else if(EUSART_is_rx_ready()){
  3992  03E3  0008               	return
  3993  03E4                     l2745:	
  3994  03E4  3187  27A6  3183   	fcall	_EUSART_is_rx_ready
  3995  03E7  3A00               	xorlw	0
  3996  03E8  1903               	skipnz
  3997  03E9  0008               	return
  3998                           
  3999                           ;lin_master.c: 147: if(LIN_receivePacket() == 1){
  4000  03EA  3184  248B  3183   	fcall	_LIN_receivePacket
  4001  03ED  3A01               	xorlw	1
  4002  03EE  1D03               	skipz
  4003  03EF  0008               	return
  4004                           
  4005                           ;lin_master.c: 149: LIN_disableRx();
  4006  03F0  3187  278A         	fcall	_LIN_disableRx
  4007                           
  4008                           ;lin_master.c: 150: LIN_state = LIN_RX_RDY;
  4009  03F2  3003               	movlw	3
  4010  03F3  0021               	movlb	1	; select bank1
  4011  03F4  00D0               	movwf	??_LIN_handler^(0+128)
  4012  03F5  0850               	movf	??_LIN_handler^(0+128),w
  4013  03F6  0020               	movlb	0	; select bank0
  4014  03F7  00B0               	movwf	LIN_handler@LIN_state
  4015                           
  4016                           ;lin_master.c: 151: }
  4017                           ;lin_master.c: 152: }
  4018                           ;lin_master.c: 153: break;
  4019  03F8  0008               	return
  4020  03F9                     l2753:	
  4021                           ;lin_master.c: 154: case LIN_RX_RDY:
  4022                           
  4023                           
  4024                           ;lin_master.c: 156: LIN_processData();
  4025  03F9  0021               	movlb	1	; select bank1
  4026  03FA  084B               	movf	(_LIN_processData+1)^(0+128),w
  4027  03FB  008A               	movwf	10
  4028  03FC  084A               	movf	_LIN_processData^(0+128),w
  4029  03FD  000A               	callw
  4030  03FE  3183               	pagesel	$
  4031                           
  4032                           ;lin_master.c: 157: LIN_state = LIN_IDLE;
  4033  03FF  0020               	movlb	0	; select bank0
  4034  0400  01B0               	clrf	LIN_handler@LIN_state
  4035                           
  4036                           ;lin_master.c: 159: }
  4037                           
  4038                           ;lin_master.c: 158: break;
  4039  0401  0008               	return
  4040  0402                     l2759:	
  4041  0402  0020               	movlb	0	; select bank0
  4042  0403  0830               	movf	LIN_handler@LIN_state,w
  4043                           
  4044                           ; Switch size 1, requested type "space"
  4045                           ; Number of cases is 4, Range of values is 0 to 3
  4046                           ; switch strategies available:
  4047                           ; Name         Instructions Cycles
  4048                           ; simple_byte           13     7 (average)
  4049                           ; direct_byte           14     6 (fixed)
  4050                           ; jumptable            260     6 (fixed)
  4051                           ;	Chosen strategy is simple_byte
  4052  0404  3A00               	xorlw	0	; case 0
  4053  0405  1903               	skipnz
  4054  0406  2BA1               	goto	l2717
  4055  0407  3A01               	xorlw	1	; case 1
  4056  0408  1903               	skipnz
  4057  0409  2BBB               	goto	l126
  4058  040A  3A03               	xorlw	3	; case 2
  4059  040B  1903               	skipnz
  4060  040C  2BD5               	goto	l2739
  4061  040D  3A01               	xorlw	1	; case 3
  4062  040E  1903               	skipnz
  4063  040F  2BF9               	goto	l2753
  4064  0410  2C11               	goto	l137
  4065  0411                     l137:	
  4066                           ;lin_master.c: 160: return LIN_state;
  4067                           ;	Return value of _LIN_handler is never used
  4068                           
  4069  0411  0008               	return
  4070  0412                     __end_of_LIN_handler:	
  4071                           
  4072                           	psect	text24
  4073  06D7                     __ptext24:	
  4074 ;; *************** function _processLIN *****************
  4075 ;; Defined at:
  4076 ;;		line 49 in file "mcc_generated_files/LINDrivers/lin_app.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  tempRxData      8   19[BANK0 ] unsigned char [8]
  4081 ;;  cmd             1   27[BANK0 ] unsigned char 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4092 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;Total ram usage:       10 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    8
  4098 ;; This function calls:
  4099 ;;		_LIN_getPacket
  4100 ;; This function is called by:
  4101 ;;		_LIN_Master_Initialize
  4102 ;;		_LIN_handler
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           
  4107                           ;psect for function _processLIN
  4108  06D7                     _processLIN:	
  4109                           
  4110                           ;lin_app.c: 50: uint8_t tempRxData[8];
  4111                           ;lin_app.c: 51: uint8_t cmd;
  4112                           ;lin_app.c: 53: cmd = LIN_getPacket(tempRxData);
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4116  06D7  3056               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  4117  06D8  3185  258A  3186   	fcall	_LIN_getPacket
  4118  06DB  0020               	movlb	0	; select bank0
  4119  06DC  00D5               	movwf	??_processLIN
  4120  06DD  0855               	movf	??_processLIN,w
  4121  06DE  00DE               	movwf	processLIN@cmd
  4122                           
  4123                           ;lin_app.c: 63: }
  4124                           
  4125                           ;lin_app.c: 62: break;
  4126                           
  4127                           ;lin_app.c: 61: default:
  4128                           
  4129                           ;lin_app.c: 60: break;
  4130                           
  4131                           ;lin_app.c: 59: case LFRX:
  4132                           
  4133                           ;lin_app.c: 58: break;
  4134                           
  4135                           ;lin_app.c: 57: case RSSI:
  4136                           
  4137                           ;lin_app.c: 56: break;
  4138                           
  4139                           ;lin_app.c: 55: case UNLOCK:
  4140                           
  4141                           ;lin_app.c: 54: switch(cmd){
  4142  06DF  085E               	movf	processLIN@cmd,w
  4143                           
  4144                           ; Switch size 1, requested type "space"
  4145                           ; Number of cases is 3, Range of values is 0 to 2
  4146                           ; switch strategies available:
  4147                           ; Name         Instructions Cycles
  4148                           ; simple_byte           10     6 (average)
  4149                           ; direct_byte           12     6 (fixed)
  4150                           ; jumptable            260     6 (fixed)
  4151                           ;	Chosen strategy is simple_byte
  4152  06E0  3A00               	xorlw	0	; case 0
  4153  06E1  1903               	skipnz
  4154  06E2  2EEA               	goto	l26
  4155  06E3  3A01               	xorlw	1	; case 1
  4156  06E4  1903               	skipnz
  4157  06E5  2EEA               	goto	l26
  4158  06E6  3A03               	xorlw	3	; case 2
  4159  06E7  1903               	skipnz
  4160  06E8  2EEA               	goto	l26
  4161  06E9  2EEA               	goto	l26
  4162  06EA                     l26:	
  4163  06EA  0008               	return
  4164  06EB                     __end_of_processLIN:	
  4165                           
  4166                           	psect	text25
  4167  058A                     __ptext25:	
  4168 ;; *************** function _LIN_getPacket *****************
  4169 ;; Defined at:
  4170 ;;		line 202 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  data            1    wreg     PTR unsigned char 
  4173 ;;		 -> processLIN@tempRxData(8), 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  data            1   17[BANK0 ] PTR unsigned char 
  4176 ;;		 -> processLIN@tempRxData(8), 
  4177 ;;  cmd             1   16[BANK0 ] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      unsigned char 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;Total ram usage:        3 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    7
  4194 ;; This function calls:
  4195 ;;		_memset
  4196 ;; This function is called by:
  4197 ;;		_processLIN
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function _LIN_getPacket
  4203  058A                     _LIN_getPacket:	
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _LIN_getPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4207                           ;LIN_getPacket@data stored from wreg
  4208  058A  0020               	movlb	0	; select bank0
  4209  058B  00D4               	movwf	LIN_getPacket@data
  4210                           
  4211                           ;lin_master.c: 203: uint8_t cmd = LIN_rxPacket.cmd & 0x3F;
  4212  058C  0021               	movlb	1	; select bank1
  4213  058D  0830               	movf	_LIN_rxPacket^(0+128),w
  4214  058E  393F               	andlw	63
  4215  058F  0020               	movlb	0	; select bank0
  4216  0590  00D2               	movwf	??_LIN_getPacket
  4217  0591  0852               	movf	??_LIN_getPacket,w
  4218  0592  00D3               	movwf	LIN_getPacket@cmd
  4219                           
  4220                           ;lin_master.c: 205: __builtin_memcpy(data,LIN_rxPacket.data,sizeof(LIN_rxPacket.data));
  4221  0593  0854               	movf	LIN_getPacket@data,w
  4222  0594  0086               	movwf	6
  4223  0595  0187               	clrf	7
  4224  0596  3002               	movlw	2
  4225  0597  3EB0               	addlw	(low (_LIN_rxPacket| 0))& (0+255)
  4226  0598  0084               	movwf	4
  4227  0599  0185               	clrf	5
  4228  059A  3008               	movlw	8
  4229  059B  0020               	movlb	0	; select bank0
  4230  059C  00D2               	movwf	??_LIN_getPacket
  4231  059D                     u203m0:	
  4232  059D  0012               	moviw fsr0++
  4233  059E  001E               	movwi fsr1++
  4234  059F  0BD2               	decfsz	??_LIN_getPacket,f
  4235  05A0  2D9D               	goto	u203m0
  4236                           
  4237                           ;lin_master.c: 206: memset(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  4238  05A1  3000               	movlw	0
  4239  05A2  0020               	movlb	0	; select bank0
  4240  05A3  00CB               	movwf	memset@c
  4241  05A4  00CC               	movwf	memset@c+1
  4242  05A5  300C               	movlw	12
  4243  05A6  00CD               	movwf	memset@n
  4244  05A7  3000               	movlw	0
  4245  05A8  00CE               	movwf	memset@n+1
  4246  05A9  30B0               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  4247  05AA  3186  264A         	fcall	_memset
  4248                           
  4249                           ;lin_master.c: 208: return cmd;
  4250  05AC  0020               	movlb	0	; select bank0
  4251  05AD  0853               	movf	LIN_getPacket@cmd,w
  4252  05AE  0008               	return
  4253  05AF                     __end_of_LIN_getPacket:	
  4254                           
  4255                           	psect	text26
  4256  064A                     __ptext26:	
  4257 ;; *************** function _memset *****************
  4258 ;; Defined at:
  4259 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memset.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  p1              1    wreg     PTR void 
  4262 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  4263 ;;  c               2    8[BANK0 ] int 
  4264 ;;  n               2   10[BANK0 ] unsigned int 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  p1              1   14[BANK0 ] PTR void 
  4267 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  4268 ;;  p               1   13[BANK0 ] PTR unsigned char 
  4269 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      PTR void 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4279 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;Total ram usage:        7 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    6
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_LIN_handler
  4290 ;;		_LIN_getPacket
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _memset
  4296  064A                     _memset:	
  4297                           
  4298                           ;incstack = 0
  4299                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4300                           ;memset@p1 stored from wreg
  4301  064A  0020               	movlb	0	; select bank0
  4302  064B  00D1               	movwf	memset@p1
  4303  064C  0851               	movf	memset@p1,w
  4304  064D  00CF               	movwf	??_memset
  4305  064E  084F               	movf	??_memset,w
  4306  064F  00D0               	movwf	memset@p
  4307  0650                     l1693:	
  4308  0650  3001               	movlw	1
  4309  0651  02CD               	subwf	memset@n,f
  4310  0652  3000               	movlw	0
  4311  0653  3BCE               	subwfb	memset@n+1,f
  4312  0654  0A4D               	incf	memset@n,w
  4313  0655  1903               	btfsc	3,2
  4314  0656  0A4E               	incf	memset@n+1,w
  4315  0657  1903               	btfsc	3,2
  4316  0658  0008               	return
  4317  0659  084B               	movf	memset@c,w
  4318  065A  00CF               	movwf	??_memset
  4319  065B  0850               	movf	memset@p,w
  4320  065C  0086               	movwf	6
  4321  065D  0187               	clrf	7
  4322  065E  084F               	movf	??_memset,w
  4323  065F  0081               	movwf	1
  4324  0660  3001               	movlw	1
  4325  0661  00CF               	movwf	??_memset
  4326  0662  084F               	movf	??_memset,w
  4327  0663  07D0               	addwf	memset@p,f
  4328  0664  2E50               	goto	l1693
  4329  0665                     __end_of_memset:	
  4330                           ;	Return value of _memset is never used
  4331                           
  4332                           
  4333                           	psect	text27
  4334  070F                     __ptext27:	
  4335 ;; *************** function _LIN_startTimer *****************
  4336 ;; Defined at:
  4337 ;;		line 242 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  timeout         1    wreg     unsigned char 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  timeout         1   10[BANK0 ] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, pclath, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;Total ram usage:        2 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    7
  4358 ;; This function calls:
  4359 ;;		_TMR0_WriteTimer
  4360 ;; This function is called by:
  4361 ;;		_LIN_handler
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function _LIN_startTimer
  4367  070F                     _LIN_startTimer:	
  4368                           
  4369                           ;incstack = 0
  4370                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  4371                           ;LIN_startTimer@timeout stored from wreg
  4372  070F  0020               	movlb	0	; select bank0
  4373  0710  00CD               	movwf	LIN_startTimer@timeout
  4374                           
  4375                           ;lin_master.c: 243: LIN_timeout = timeout;
  4376  0711  084D               	movf	LIN_startTimer@timeout,w
  4377  0712  00CC               	movwf	??_LIN_startTimer
  4378  0713  084C               	movf	??_LIN_startTimer,w
  4379  0714  00E7               	movwf	_LIN_timeout
  4380                           
  4381                           ;lin_master.c: 244: TMR0_WriteTimer(0);
  4382  0715  3000               	movlw	0
  4383  0716  3187  2780         	fcall	_TMR0_WriteTimer
  4384                           
  4385                           ;lin_master.c: 245: __nop();
  4386  0718  0000               	nop
  4387                           
  4388                           ;lin_master.c: 246: LIN_timerRunning = 1;
  4389  0719  0020               	movlb	0	; select bank0
  4390  071A  01B3               	clrf	_LIN_timerRunning
  4391  071B  0AB3               	incf	_LIN_timerRunning,f
  4392  071C  0008               	return
  4393  071D                     __end_of_LIN_startTimer:	
  4394                           
  4395                           	psect	text28
  4396  0780                     __ptext28:	
  4397 ;; *************** function _TMR0_WriteTimer *****************
  4398 ;; Defined at:
  4399 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  timerVal        1    wreg     unsigned char 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  timerVal        1    8[BANK0 ] unsigned char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;Total ram usage:        1 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    6
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_LIN_startTimer
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _TMR0_WriteTimer
  4429  0780                     _TMR0_WriteTimer:	
  4430                           
  4431                           ;incstack = 0
  4432                           ; Regs used in _TMR0_WriteTimer: [wreg]
  4433                           ;TMR0_WriteTimer@timerVal stored from wreg
  4434  0780  0020               	movlb	0	; select bank0
  4435  0781  00CB               	movwf	TMR0_WriteTimer@timerVal
  4436                           
  4437                           ;tmr0.c: 99: TMR0 = timerVal;
  4438  0782  084B               	movf	TMR0_WriteTimer@timerVal,w
  4439  0783  0095               	movwf	21	;volatile
  4440  0784  0008               	return
  4441  0785                     __end_of_TMR0_WriteTimer:	
  4442                           
  4443                           	psect	text29
  4444  04BB                     __ptext29:	
  4445 ;; *************** function _LIN_sendPacket *****************
  4446 ;; Defined at:
  4447 ;;		line 181 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  i               1   11[BANK0 ] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;Total ram usage:        2 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    7
  4468 ;; This function calls:
  4469 ;;		_EUSART_Write
  4470 ;;		_LIN_sendBreak
  4471 ;; This function is called by:
  4472 ;;		_LIN_handler
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _LIN_sendPacket
  4478  04BB                     _LIN_sendPacket:	
  4479                           
  4480                           ;lin_master.c: 184: LIN_sendBreak();
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4484  04BB  3187  27A3  3184   	fcall	_LIN_sendBreak
  4485                           
  4486                           ;lin_master.c: 185: EUSART_Write(0x00);
  4487  04BE  3000               	movlw	0
  4488  04BF  3185  25AF  3184   	fcall	_EUSART_Write
  4489                           
  4490                           ;lin_master.c: 187: EUSART_Write(0x55);
  4491  04C2  3055               	movlw	85
  4492  04C3  3185  25AF  3184   	fcall	_EUSART_Write
  4493                           
  4494                           ;lin_master.c: 189: EUSART_Write(LIN_packet.PID);
  4495  04C6  0020               	movlb	0	; select bank0
  4496  04C7  0836               	movf	_LIN_packet,w
  4497  04C8  3185  25AF  3184   	fcall	_EUSART_Write
  4498                           
  4499                           ;lin_master.c: 191: if(LIN_rxPacket.rxLength == 0){
  4500  04CB  0021               	movlb	1	; select bank1
  4501  04CC  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  4502  04CD  1D03               	btfss	3,2
  4503  04CE  0008               	return
  4504                           
  4505                           ;lin_master.c: 194: for(uint8_t i = 0; i < LIN_packet.length; i++){
  4506  04CF  0020               	movlb	0	; select bank0
  4507  04D0  01CE               	clrf	LIN_sendPacket@i
  4508  04D1                     l1869:	
  4509  04D1  0840               	movf	_LIN_packet+10,w
  4510  04D2  024E               	subwf	LIN_sendPacket@i,w
  4511  04D3  1803               	btfsc	3,0
  4512  04D4  2CE4               	goto	l1871
  4513                           
  4514                           ;lin_master.c: 195: EUSART_Write(LIN_packet.data[i]);
  4515  04D5  084E               	movf	LIN_sendPacket@i,w
  4516  04D6  3E01               	addlw	1
  4517  04D7  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  4518  04D8  0086               	movwf	6
  4519  04D9  0187               	clrf	7
  4520  04DA  0801               	movf	1,w
  4521  04DB  3185  25AF  3184   	fcall	_EUSART_Write
  4522  04DE  3001               	movlw	1
  4523  04DF  0020               	movlb	0	; select bank0
  4524  04E0  00CD               	movwf	??_LIN_sendPacket
  4525  04E1  084D               	movf	??_LIN_sendPacket,w
  4526  04E2  07CE               	addwf	LIN_sendPacket@i,f
  4527  04E3  2CD1               	goto	l1869
  4528  04E4                     l1871:	
  4529                           
  4530                           ;lin_master.c: 196: }
  4531                           ;lin_master.c: 198: EUSART_Write(LIN_packet.checksum);
  4532  04E4  083F               	movf	_LIN_packet+9,w
  4533  04E5  3185  25AF         	fcall	_EUSART_Write
  4534  04E7  0008               	return
  4535  04E8                     __end_of_LIN_sendPacket:	
  4536                           
  4537                           	psect	text30
  4538  07A3                     __ptext30:	
  4539 ;; *************** function _LIN_sendBreak *****************
  4540 ;; Defined at:
  4541 ;;		line 295 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		None
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;Total ram usage:        0 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    6
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_LIN_sendPacket
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           
  4570                           ;psect for function _LIN_sendBreak
  4571  07A3                     _LIN_sendBreak:	
  4572                           
  4573                           ;lin_master.c: 296: TXSTAbits.SENDB = 1;
  4574                           
  4575                           ;incstack = 0
  4576                           ; Regs used in _LIN_sendBreak: []
  4577  07A3  0023               	movlb	3	; select bank3
  4578  07A4  159E               	bsf	30,3	;volatile
  4579  07A5  0008               	return
  4580  07A6                     __end_of_LIN_sendBreak:	
  4581                           
  4582                           	psect	text31
  4583  05AF                     __ptext31:	
  4584 ;; *************** function _EUSART_Write *****************
  4585 ;; Defined at:
  4586 ;;		line 170 in file "mcc_generated_files/eusart.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  txData          1    wreg     unsigned char 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  txData          1    9[BANK0 ] unsigned char 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      void 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;Total ram usage:        2 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    6
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		_LIN_sendPacket
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           
  4615                           ;psect for function _EUSART_Write
  4616  05AF                     _EUSART_Write:	
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4620                           ;EUSART_Write@txData stored from wreg
  4621  05AF  0020               	movlb	0	; select bank0
  4622  05B0  00CC               	movwf	EUSART_Write@txData
  4623  05B1                     l1785:	
  4624                           ;eusart.c: 173: {
  4625                           
  4626                           ;eusart.c: 172: while(0 == eusartTxBufferRemaining)
  4627                           
  4628  05B1  0863               	movf	_eusartTxBufferRemaining,w	;volatile
  4629  05B2  1903               	btfsc	3,2
  4630  05B3  2DB1               	goto	l1785
  4631                           
  4632                           ;eusart.c: 174: }
  4633                           ;eusart.c: 176: if(0 == PIE1bits.TXIE)
  4634  05B4  0021               	movlb	1	; select bank1
  4635  05B5  1A11               	btfsc	17,4	;volatile
  4636  05B6  2DBC               	goto	l441
  4637                           
  4638                           ;eusart.c: 177: {
  4639                           ;eusart.c: 178: TXREG = txData;
  4640  05B7  0020               	movlb	0	; select bank0
  4641  05B8  084C               	movf	EUSART_Write@txData,w
  4642  05B9  0023               	movlb	3	; select bank3
  4643  05BA  009A               	movwf	26	;volatile
  4644                           
  4645                           ;eusart.c: 179: }
  4646  05BB  2DD0               	goto	l1799
  4647  05BC                     l441:	
  4648                           
  4649                           ;eusart.c: 180: else
  4650                           ;eusart.c: 181: {
  4651                           ;eusart.c: 182: PIE1bits.TXIE = 0;
  4652  05BC  1211               	bcf	17,4	;volatile
  4653                           
  4654                           ;eusart.c: 183: eusartTxBuffer[eusartTxHead++] = txData;
  4655  05BD  0020               	movlb	0	; select bank0
  4656  05BE  084C               	movf	EUSART_Write@txData,w
  4657  05BF  00CB               	movwf	??_EUSART_Write
  4658  05C0  082D               	movf	_eusartTxHead,w
  4659  05C1  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4660  05C2  0086               	movwf	6
  4661  05C3  0187               	clrf	7
  4662  05C4  084B               	movf	??_EUSART_Write,w
  4663  05C5  0081               	movwf	1
  4664  05C6  3001               	movlw	1
  4665  05C7  00CB               	movwf	??_EUSART_Write
  4666  05C8  084B               	movf	??_EUSART_Write,w
  4667  05C9  07AD               	addwf	_eusartTxHead,f	;volatile
  4668                           
  4669                           ;eusart.c: 184: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4670  05CA  3008               	movlw	8
  4671  05CB  022D               	subwf	_eusartTxHead,w	;volatile
  4672  05CC  1803               	btfsc	3,0
  4673                           
  4674                           ;eusart.c: 185: {
  4675                           ;eusart.c: 186: eusartTxHead = 0;
  4676  05CD  01AD               	clrf	_eusartTxHead	;volatile
  4677                           
  4678                           ;eusart.c: 187: }
  4679                           ;eusart.c: 188: eusartTxBufferRemaining--;
  4680  05CE  3001               	movlw	1
  4681  05CF  02E3               	subwf	_eusartTxBufferRemaining,f	;volatile
  4682  05D0                     l1799:	
  4683                           
  4684                           ;eusart.c: 189: }
  4685                           ;eusart.c: 190: PIE1bits.TXIE = 1;
  4686  05D0  0021               	movlb	1	; select bank1
  4687  05D1  1611               	bsf	17,4	;volatile
  4688  05D2  0008               	return
  4689  05D3                     __end_of_EUSART_Write:	
  4690                           
  4691                           	psect	text32
  4692  048B                     __ptext32:	
  4693 ;; *************** function _LIN_receivePacket *****************
  4694 ;; Defined at:
  4695 ;;		line 163 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      unsigned char 
  4702 ;; Registers used:
  4703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    7
  4716 ;; This function calls:
  4717 ;;		_EUSART_Read
  4718 ;;		_LIN_getChecksum
  4719 ;; This function is called by:
  4720 ;;		_LIN_handler
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           
  4725                           ;psect for function _LIN_receivePacket
  4726  048B                     _LIN_receivePacket:	
  4727                           
  4728                           ;lin_master.c: 164: static uint8_t rxIndex = 0;
  4729                           ;lin_master.c: 166: if(rxIndex < LIN_rxPacket.rxLength){
  4730                           
  4731                           ;incstack = 0
  4732                           ; Regs used in _LIN_receivePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4733  048B  0021               	movlb	1	; select bank1
  4734  048C  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  4735  048D  0020               	movlb	0	; select bank0
  4736  048E  022F               	subwf	LIN_receivePacket@rxIndex,w
  4737  048F  1803               	skipnc
  4738  0490  2CA3               	goto	l2239
  4739                           
  4740                           ;lin_master.c: 168: LIN_rxPacket.data[rxIndex++] = EUSART_Read();
  4741  0491  3185  253D  3184   	fcall	_EUSART_Read
  4742  0494  0020               	movlb	0	; select bank0
  4743  0495  00D1               	movwf	??_LIN_receivePacket
  4744  0496  082F               	movf	LIN_receivePacket@rxIndex,w
  4745  0497  3E02               	addlw	2
  4746  0498  3EB0               	addlw	(low (_LIN_rxPacket| 0))& (0+255)
  4747  0499  0086               	movwf	6
  4748  049A  0187               	clrf	7
  4749  049B  0851               	movf	??_LIN_receivePacket,w
  4750  049C  0081               	movwf	1
  4751  049D  3001               	movlw	1
  4752  049E  00D1               	movwf	??_LIN_receivePacket
  4753  049F  0851               	movf	??_LIN_receivePacket,w
  4754  04A0  07AF               	addwf	LIN_receivePacket@rxIndex,f
  4755                           
  4756                           ;lin_master.c: 169: __nop();
  4757  04A1  0000               	nop
  4758                           
  4759                           ;lin_master.c: 170: } else {
  4760  04A2  2CB9               	goto	l2247
  4761  04A3                     l2239:	
  4762                           
  4763                           ;lin_master.c: 171: rxIndex = 0;
  4764  04A3  0020               	movlb	0	; select bank0
  4765  04A4  01AF               	clrf	LIN_receivePacket@rxIndex
  4766                           
  4767                           ;lin_master.c: 173: if(EUSART_Read() == LIN_getChecksum(LIN_rxPacket.rxLength, LIN_rxPac
      +                          ket.data))
  4768  04A5  30B2               	movlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  4769  04A6  00D1               	movwf	??_LIN_receivePacket
  4770  04A7  0851               	movf	??_LIN_receivePacket,w
  4771  04A8  00CB               	movwf	LIN_getChecksum@data
  4772  04A9  0021               	movlb	1	; select bank1
  4773  04AA  0831               	movf	(_LIN_rxPacket^(0+128)+1),w
  4774  04AB  3184  24E8  3184   	fcall	_LIN_getChecksum
  4775  04AE  0020               	movlb	0	; select bank0
  4776  04AF  00D2               	movwf	??_LIN_receivePacket+1
  4777  04B0  3185  253D  3184   	fcall	_EUSART_Read
  4778  04B3  0020               	movlb	0	; select bank0
  4779  04B4  0652               	xorwf	??_LIN_receivePacket+1,w
  4780  04B5  1D03               	skipz
  4781  04B6  2CB9               	goto	l2247
  4782                           
  4783                           ;lin_master.c: 174: return 1;
  4784  04B7  3001               	movlw	1
  4785  04B8  0008               	return
  4786  04B9                     l2247:	
  4787                           
  4788                           ;lin_master.c: 176: }
  4789                           ;lin_master.c: 178: return 0;
  4790  04B9  3000               	movlw	0
  4791  04BA  0008               	return
  4792  04BB                     __end_of_LIN_receivePacket:	
  4793                           
  4794                           	psect	text33
  4795  04E8                     __ptext33:	
  4796 ;; *************** function _LIN_getChecksum *****************
  4797 ;; Defined at:
  4798 ;;		line 229 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  length          1    wreg     unsigned char 
  4801 ;;  data            1    8[BANK0 ] PTR unsigned char 
  4802 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  length          1   10[BANK0 ] unsigned char 
  4805 ;;  i               1   11[BANK0 ] unsigned char 
  4806 ;;  checksum        2   12[BANK0 ] unsigned int 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      unsigned char 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4816 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;Total ram usage:        6 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    6
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_LIN_queuePacket
  4827 ;;		_LIN_receivePacket
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           
  4832                           ;psect for function _LIN_getChecksum
  4833  04E8                     _LIN_getChecksum:	
  4834                           
  4835                           ;incstack = 0
  4836                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4837                           ;LIN_getChecksum@length stored from wreg
  4838  04E8  0020               	movlb	0	; select bank0
  4839  04E9  00CD               	movwf	LIN_getChecksum@length
  4840                           
  4841                           ;lin_master.c: 230: uint16_t checksum = 0;
  4842  04EA  01CF               	clrf	LIN_getChecksum@checksum
  4843  04EB  01D0               	clrf	LIN_getChecksum@checksum+1
  4844                           
  4845                           ;lin_master.c: 232: for (uint8_t i = 0; i < length; i++){
  4846  04EC  01CE               	clrf	LIN_getChecksum@i
  4847  04ED                     l2131:	
  4848  04ED  084D               	movf	LIN_getChecksum@length,w
  4849  04EE  024E               	subwf	LIN_getChecksum@i,w
  4850  04EF  1803               	btfsc	3,0
  4851  04F0  2D0F               	goto	l164
  4852                           
  4853                           ;lin_master.c: 233: checksum = checksum + *data++;
  4854  04F1  084B               	movf	LIN_getChecksum@data,w
  4855  04F2  0086               	movwf	6
  4856  04F3  0187               	clrf	7
  4857  04F4  0801               	movf	1,w
  4858  04F5  074F               	addwf	LIN_getChecksum@checksum,w
  4859  04F6  00CF               	movwf	LIN_getChecksum@checksum
  4860  04F7  0850               	movf	LIN_getChecksum@checksum+1,w
  4861  04F8  1803               	skipnc
  4862  04F9  0A50               	incf	LIN_getChecksum@checksum+1,w
  4863  04FA  00D0               	movwf	LIN_getChecksum@checksum+1
  4864  04FB  3001               	movlw	1
  4865  04FC  00CC               	movwf	??_LIN_getChecksum
  4866  04FD  084C               	movf	??_LIN_getChecksum,w
  4867  04FE  07CB               	addwf	LIN_getChecksum@data,f
  4868                           
  4869                           ;lin_master.c: 234: if(checksum > 0xFF)
  4870  04FF  3001               	movlw	1
  4871  0500  0250               	subwf	LIN_getChecksum@checksum+1,w
  4872  0501  3000               	movlw	0
  4873  0502  1903               	skipnz
  4874  0503  024F               	subwf	LIN_getChecksum@checksum,w
  4875  0504  1C03               	skipc
  4876  0505  2D0A               	goto	l2129
  4877                           
  4878                           ;lin_master.c: 235: checksum -= 0xFF;
  4879  0506  30FF               	movlw	255
  4880  0507  02CF               	subwf	LIN_getChecksum@checksum,f
  4881  0508  3000               	movlw	0
  4882  0509  3BD0               	subwfb	LIN_getChecksum@checksum+1,f
  4883  050A                     l2129:	
  4884  050A  3001               	movlw	1
  4885  050B  00CC               	movwf	??_LIN_getChecksum
  4886  050C  084C               	movf	??_LIN_getChecksum,w
  4887  050D  07CE               	addwf	LIN_getChecksum@i,f
  4888  050E  2CED               	goto	l2131
  4889  050F                     l164:	
  4890                           
  4891                           ;lin_master.c: 236: }
  4892                           ;lin_master.c: 237: checksum = ~checksum;
  4893  050F  09CF               	comf	LIN_getChecksum@checksum,f
  4894  0510  09D0               	comf	LIN_getChecksum@checksum+1,f
  4895                           
  4896                           ;lin_master.c: 239: return (uint8_t)checksum;
  4897  0511  084F               	movf	LIN_getChecksum@checksum,w
  4898  0512  0008               	return
  4899  0513                     __end_of_LIN_getChecksum:	
  4900                           
  4901                           	psect	text34
  4902  053D                     __ptext34:	
  4903 ;; *************** function _EUSART_Read *****************
  4904 ;; Defined at:
  4905 ;;		line 148 in file "mcc_generated_files/eusart.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  readValue       1    9[BANK0 ] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      unsigned char 
  4912 ;; Registers used:
  4913 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4921 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4923 ;;Total ram usage:        2 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    6
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_LIN_receivePacket
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _EUSART_Read
  4935  053D                     _EUSART_Read:	
  4936                           
  4937                           ;eusart.c: 150: uint8_t readValue = 0;
  4938                           
  4939                           ;incstack = 0
  4940                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4941  053D  0020               	movlb	0	; select bank0
  4942  053E  01CC               	clrf	EUSART_Read@readValue
  4943  053F                     l1761:	
  4944                           ;eusart.c: 153: {
  4945                           
  4946                           ;eusart.c: 152: while(0 == eusartRxCount)
  4947                           
  4948  053F  0829               	movf	_eusartRxCount,w	;volatile
  4949  0540  1903               	btfsc	3,2
  4950  0541  2D3F               	goto	l1761
  4951                           
  4952                           ;eusart.c: 154: }
  4953                           ;eusart.c: 156: eusartRxLastError = eusartRxStatusBuffer[eusartRxTail];
  4954  0542  082A               	movf	_eusartRxTail,w	;volatile
  4955  0543  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4956  0544  0086               	movwf	6
  4957  0545  0187               	clrf	7
  4958  0546  0801               	movf	1,w
  4959  0547  00CB               	movwf	??_EUSART_Read
  4960  0548  084B               	movf	??_EUSART_Read,w
  4961  0549  00A8               	movwf	_eusartRxLastError	;volatile
  4962                           
  4963                           ;eusart.c: 158: readValue = eusartRxBuffer[eusartRxTail++];
  4964  054A  082A               	movf	_eusartRxTail,w
  4965  054B  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4966  054C  0086               	movwf	6
  4967  054D  0187               	clrf	7
  4968  054E  0801               	movf	1,w
  4969  054F  00CB               	movwf	??_EUSART_Read
  4970  0550  084B               	movf	??_EUSART_Read,w
  4971  0551  00CC               	movwf	EUSART_Read@readValue
  4972  0552  3001               	movlw	1
  4973  0553  00CB               	movwf	??_EUSART_Read
  4974  0554  084B               	movf	??_EUSART_Read,w
  4975  0555  07AA               	addwf	_eusartRxTail,f	;volatile
  4976                           
  4977                           ;eusart.c: 159: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4978  0556  3008               	movlw	8
  4979  0557  022A               	subwf	_eusartRxTail,w	;volatile
  4980  0558  1803               	btfsc	3,0
  4981                           
  4982                           ;eusart.c: 160: {
  4983                           ;eusart.c: 161: eusartRxTail = 0;
  4984  0559  01AA               	clrf	_eusartRxTail	;volatile
  4985                           
  4986                           ;eusart.c: 162: }
  4987                           ;eusart.c: 163: PIE1bits.RCIE = 0;
  4988  055A  0021               	movlb	1	; select bank1
  4989  055B  1291               	bcf	17,5	;volatile
  4990                           
  4991                           ;eusart.c: 164: eusartRxCount--;
  4992  055C  3001               	movlw	1
  4993  055D  0020               	movlb	0	; select bank0
  4994  055E  02A9               	subwf	_eusartRxCount,f	;volatile
  4995                           
  4996                           ;eusart.c: 165: PIE1bits.RCIE = 1;
  4997  055F  0021               	movlb	1	; select bank1
  4998  0560  1691               	bsf	17,5	;volatile
  4999                           
  5000                           ;eusart.c: 167: return readValue;
  5001  0561  0020               	movlb	0	; select bank0
  5002  0562  084C               	movf	EUSART_Read@readValue,w
  5003  0563  0008               	return
  5004  0564                     __end_of_EUSART_Read:	
  5005                           
  5006                           	psect	text35
  5007  0785                     __ptext35:	
  5008 ;; *************** function _LIN_enableRx *****************
  5009 ;; Defined at:
  5010 ;;		line 285 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		None
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;Total ram usage:        0 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    6
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_LIN_handler
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           
  5039                           ;psect for function _LIN_enableRx
  5040  0785                     _LIN_enableRx:	
  5041                           
  5042                           ;lin_master.c: 286: RCSTAbits.CREN = 1;
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in _LIN_enableRx: []
  5046  0785  0023               	movlb	3	; select bank3
  5047  0786  161D               	bsf	29,4	;volatile
  5048                           
  5049                           ;lin_master.c: 287: PIE1bits.RCIE = 1;
  5050  0787  0021               	movlb	1	; select bank1
  5051  0788  1691               	bsf	17,5	;volatile
  5052  0789  0008               	return
  5053  078A                     __end_of_LIN_enableRx:	
  5054                           
  5055                           	psect	text36
  5056  078A                     __ptext36:	
  5057 ;; *************** function _LIN_disableRx *****************
  5058 ;; Defined at:
  5059 ;;		line 290 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		None
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    6
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_LIN_handler
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function _LIN_disableRx
  5089  078A                     _LIN_disableRx:	
  5090                           
  5091                           ;lin_master.c: 291: RCSTAbits.CREN = 0;
  5092                           
  5093                           ;incstack = 0
  5094                           ; Regs used in _LIN_disableRx: []
  5095  078A  0023               	movlb	3	; select bank3
  5096  078B  121D               	bcf	29,4	;volatile
  5097                           
  5098                           ;lin_master.c: 292: PIE1bits.RCIE = 0;
  5099  078C  0021               	movlb	1	; select bank1
  5100  078D  1291               	bcf	17,5	;volatile
  5101  078E  0008               	return
  5102  078F                     __end_of_LIN_disableRx:	
  5103                           
  5104                           	psect	text37
  5105  07A6                     __ptext37:	
  5106 ;; *************** function _EUSART_is_rx_ready *****************
  5107 ;; Defined at:
  5108 ;;		line 134 in file "mcc_generated_files/eusart.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;		None
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      unsigned char 
  5115 ;; Registers used:
  5116 ;;		wreg
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5126 ;;Total ram usage:        0 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    6
  5129 ;; This function calls:
  5130 ;;		Nothing
  5131 ;; This function is called by:
  5132 ;;		_LIN_handler
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           
  5137                           ;psect for function _EUSART_is_rx_ready
  5138  07A6                     _EUSART_is_rx_ready:	
  5139                           
  5140                           ;eusart.c: 136: return eusartRxCount;
  5141                           
  5142                           ;incstack = 0
  5143                           ; Regs used in _EUSART_is_rx_ready: [wreg]
  5144  07A6  0020               	movlb	0	; select bank0
  5145  07A7  0829               	movf	_eusartRxCount,w	;volatile
  5146  07A8  0008               	return
  5147  07A9                     __end_of_EUSART_is_rx_ready:	
  5148                           
  5149                           	psect	intentry
  5150  0004                     __pintentry:	
  5151 ;; *************** function _INTERRUPT_InterruptManager *****************
  5152 ;; Defined at:
  5153 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;		None
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;Total ram usage:        1 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    5
  5174 ;; This function calls:
  5175 ;;		Absolute function
  5176 ;;		_EUSART_Receive_ISR
  5177 ;;		_EUSART_Transmit_ISR
  5178 ;;		_TMR0_ISR
  5179 ;; This function is called by:
  5180 ;;		Interrupt level 1
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184  0004                     _INTERRUPT_InterruptManager:	
  5185                           
  5186                           ;incstack = 0
  5187  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5188                           
  5189                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5190  0005  3180               	pagesel	$
  5191  0006  0020               	movlb	0	; select bank0
  5192  0007  087F               	movf	127,w
  5193  0008  00CA               	movwf	??_INTERRUPT_InterruptManager
  5194                           
  5195                           ;interrupt_manager.c: 55: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5196  0009  1A8B               	btfsc	11,5	;volatile
  5197  000A  1D0B               	btfss	11,2	;volatile
  5198  000B  2810               	goto	i1l333
  5199                           
  5200                           ;interrupt_manager.c: 56: {
  5201                           ;interrupt_manager.c: 57: TMR0_ISR();
  5202  000C  3187  271D  3180   	fcall	_TMR0_ISR
  5203                           
  5204                           ;interrupt_manager.c: 58: }
  5205  000F  282B               	goto	i1l341
  5206  0010                     i1l333:	
  5207                           
  5208                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
  5209  0010  1F0B               	btfss	11,6	;volatile
  5210  0011  282B               	goto	i1l341
  5211                           
  5212                           ;interrupt_manager.c: 60: {
  5213                           ;interrupt_manager.c: 61: if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5214  0012  0021               	movlb	1	; select bank1
  5215  0013  1E11               	btfss	17,4	;volatile
  5216  0014  281F               	goto	i1l336
  5217  0015  0020               	movlb	0	; select bank0
  5218  0016  1E11               	btfss	17,4	;volatile
  5219  0017  281F               	goto	i1l336
  5220                           
  5221                           ;interrupt_manager.c: 62: {
  5222                           ;interrupt_manager.c: 63: EUSART_TxDefaultInterruptHandler();
  5223  0018  0021               	movlb	1	; select bank1
  5224  0019  084F               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
  5225  001A  008A               	movwf	10
  5226  001B  084E               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
  5227  001C  000A               	callw
  5228  001D  3180               	pagesel	$
  5229                           
  5230                           ;interrupt_manager.c: 64: }
  5231  001E  282B               	goto	i1l341
  5232  001F                     i1l336:	
  5233                           
  5234                           ;interrupt_manager.c: 65: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  5235  001F  0021               	movlb	1	; select bank1
  5236  0020  1E91               	btfss	17,5	;volatile
  5237  0021  282B               	goto	i1l341
  5238  0022  0020               	movlb	0	; select bank0
  5239  0023  1E91               	btfss	17,5	;volatile
  5240  0024  282B               	goto	i1l341
  5241                           
  5242                           ;interrupt_manager.c: 66: {
  5243                           ;interrupt_manager.c: 67: EUSART_RxDefaultInterruptHandler();
  5244  0025  0021               	movlb	1	; select bank1
  5245  0026  084D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  5246  0027  008A               	movwf	10
  5247  0028  084C               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  5248  0029  000A               	callw
  5249  002A  3180               	pagesel	$
  5250  002B                     i1l341:	
  5251                           ;interrupt_manager.c: 74: else
  5252                           ;interrupt_manager.c: 75: {
  5253                           
  5254                           ;interrupt_manager.c: 72: }
  5255                           ;interrupt_manager.c: 73: }
  5256                           
  5257                           ;interrupt_manager.c: 69: else
  5258                           ;interrupt_manager.c: 70: {
  5259                           
  5260                           ;interrupt_manager.c: 68: }
  5261                           
  5262  002B  0020               	movlb	0	; select bank0
  5263  002C  084A               	movf	??_INTERRUPT_InterruptManager,w
  5264  002D  00FF               	movwf	127
  5265  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5266  002F  0009               	retfie
  5267  0030                     __end_of_INTERRUPT_InterruptManager:	
  5268                           
  5269                           	psect	text39
  5270  071D                     __ptext39:	
  5271 ;; *************** function _TMR0_ISR *****************
  5272 ;; Defined at:
  5273 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    4
  5294 ;; This function calls:
  5295 ;;		Absolute function
  5296 ;;		_TMR0_DefaultInterruptHandler
  5297 ;;		i1_LIN_timerHandler
  5298 ;; This function is called by:
  5299 ;;		_INTERRUPT_InterruptManager
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           
  5304                           ;psect for function _TMR0_ISR
  5305  071D                     _TMR0_ISR:	
  5306                           
  5307                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  5308                           
  5309                           ;incstack = 0
  5310                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5311  071D  110B               	bcf	11,2	;volatile
  5312                           
  5313                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  5314  071E  0020               	movlb	0	; select bank0
  5315  071F  0864               	movf	_timer0ReloadVal,w	;volatile
  5316  0720  0095               	movwf	21	;volatile
  5317                           
  5318                           ;tmr0.c: 116: if(TMR0_InterruptHandler)
  5319  0721  085F               	movf	_TMR0_InterruptHandler,w
  5320  0722  0460               	iorwf	_TMR0_InterruptHandler+1,w
  5321  0723  1903               	btfsc	3,2
  5322  0724  0008               	return
  5323                           
  5324                           ;tmr0.c: 117: {
  5325                           ;tmr0.c: 118: TMR0_InterruptHandler();
  5326  0725  0860               	movf	_TMR0_InterruptHandler+1,w
  5327  0726  008A               	movwf	10
  5328  0727  085F               	movf	_TMR0_InterruptHandler,w
  5329  0728  000A               	callw
  5330  0729  3187               	pagesel	$
  5331  072A  0008               	return
  5332  072B                     __end_of_TMR0_ISR:	
  5333                           
  5334                           	psect	text40
  5335  07AD                     __ptext40:	
  5336 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5337 ;; Defined at:
  5338 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      void 
  5345 ;; Registers used:
  5346 ;;		None
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_TMR0_Initialize
  5362 ;;		_TMR0_ISR
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           
  5367                           ;psect for function _TMR0_DefaultInterruptHandler
  5368  07AD                     _TMR0_DefaultInterruptHandler:	
  5369                           
  5370                           ;incstack = 0
  5371                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5372  07AD  0008               	return
  5373  07AE                     __end_of_TMR0_DefaultInterruptHandler:	
  5374                           
  5375                           	psect	text41
  5376  05F3                     __ptext41:	
  5377 ;; *************** function i1_LIN_timerHandler *****************
  5378 ;; Defined at:
  5379 ;;		line 249 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;Total ram usage:        1 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:    3
  5400 ;; This function calls:
  5401 ;;		i1_LIN_sendPeriodicTx
  5402 ;;		i1_LIN_stopTimer
  5403 ;; This function is called by:
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function i1_LIN_timerHandler
  5409  05F3                     i1_LIN_timerHandler:	
  5410  05F3                     i1l1975:	
  5411                           ;incstack = 0
  5412                           ; Regs used in i1_LIN_timerHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5413                           
  5414                           
  5415                           ;lin_master.c: 251: if(LIN_timerRunning == 1){
  5416  05F3  0020               	movlb	0	; select bank0
  5417  05F4  0333               	decf	_LIN_timerRunning,w
  5418  05F5  1D03               	btfss	3,2
  5419  05F6  2E02               	goto	i1l1981
  5420                           
  5421                           ;lin_master.c: 252: if (++LIN_timerCallBack >= LIN_timeout){
  5422  05F7  3001               	movlw	1
  5423  05F8  00C9               	movwf	??i1_LIN_timerHandler
  5424  05F9  0849               	movf	??i1_LIN_timerHandler,w
  5425  05FA  07B2               	addwf	_LIN_timerCallBack,f	;volatile
  5426  05FB  0867               	movf	_LIN_timeout,w
  5427  05FC  0232               	subwf	_LIN_timerCallBack,w	;volatile
  5428  05FD  1C03               	skipc
  5429  05FE  2E02               	goto	i1l1981
  5430                           
  5431                           ;lin_master.c: 254: LIN_stopTimer();
  5432  05FF  3187  279B  3185   	fcall	i1_LIN_stopTimer
  5433  0602                     i1l1981:	
  5434                           
  5435                           ;lin_master.c: 255: }
  5436                           ;lin_master.c: 256: }
  5437                           ;lin_master.c: 257: if(LIN_enablePeriodTx == 1){
  5438  0602  0020               	movlb	0	; select bank0
  5439  0603  0365               	decf	_LIN_enablePeriodTx,w
  5440  0604  1D03               	btfss	3,2
  5441  0605  0008               	return
  5442                           
  5443                           ;lin_master.c: 258: if(++LIN_periodCallBack >= LIN_period){
  5444  0606  3001               	movlw	1
  5445  0607  00C9               	movwf	??i1_LIN_timerHandler
  5446  0608  0849               	movf	??i1_LIN_timerHandler,w
  5447  0609  07B1               	addwf	_LIN_periodCallBack,f	;volatile
  5448  060A  0834               	movf	_LIN_period,w
  5449  060B  0231               	subwf	_LIN_periodCallBack,w	;volatile
  5450  060C  1C03               	skipc
  5451  060D  0008               	return
  5452                           
  5453                           ;lin_master.c: 259: LIN_sendPeriodicTx();
  5454  060E  3182  22B3         	fcall	i1_LIN_sendPeriodicTx
  5455  0610  0008               	return
  5456  0611                     __end_ofi1_LIN_timerHandler:	
  5457                           
  5458                           	psect	text42
  5459  079B                     __ptext42:	
  5460 ;; *************** function i1_LIN_stopTimer *****************
  5461 ;; Defined at:
  5462 ;;		line 269 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		status,2
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;Total ram usage:        0 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		i1_LIN_timerHandler
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           
  5490                           ;psect for function i1_LIN_stopTimer
  5491  079B                     i1_LIN_stopTimer:	
  5492                           
  5493                           ;lin_master.c: 271: LIN_timerCallBack = 0;
  5494                           
  5495                           ;incstack = 0
  5496                           ; Regs used in i1_LIN_stopTimer: [status,2]
  5497  079B  0020               	movlb	0	; select bank0
  5498  079C  01B2               	clrf	_LIN_timerCallBack	;volatile
  5499                           
  5500                           ;lin_master.c: 272: LIN_timerRunning = 0;
  5501  079D  01B3               	clrf	_LIN_timerRunning
  5502  079E  0008               	return
  5503  079F                     __end_ofi1_LIN_stopTimer:	
  5504                           
  5505                           	psect	text43
  5506  02B3                     __ptext43:	
  5507 ;; *************** function i1_LIN_sendPeriodicTx *****************
  5508 ;; Defined at:
  5509 ;;		line 299 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;		None
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  LIN_sendPeri    2    4[BANK0 ] PTR const struct .
  5514 ;;		 -> ROM(8192), scheduleTable(18), 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;Total ram usage:        5 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    2
  5531 ;; This function calls:
  5532 ;;		i1_LIN_queuePacket
  5533 ;;		i1___wmul
  5534 ;; This function is called by:
  5535 ;;		i1_LIN_timerHandler
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function i1_LIN_sendPeriodicTx
  5541  02B3                     i1_LIN_sendPeriodicTx:	
  5542                           
  5543                           ;lin_master.c: 300: static volatile uint8_t scheduleIndex = 0;
  5544                           ;lin_master.c: 301: const lin_cmd_packet_t* periodicTx;
  5545                           ;lin_master.c: 303: LIN_periodCallBack = 0;
  5546                           
  5547                           ;incstack = 0
  5548                           ; Regs used in i1_LIN_sendPeriodicTx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5549  02B3  0020               	movlb	0	; select bank0
  5550  02B4  01B1               	clrf	_LIN_periodCallBack	;volatile
  5551                           
  5552                           ;lin_master.c: 304: periodicTx = schedule + scheduleIndex;
  5553  02B5  082E               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5554  02B6  00FB               	movwf	??i1_LIN_sendPeriodicTx
  5555  02B7  01FC               	clrf	??i1_LIN_sendPeriodicTx+1
  5556  02B8  087B               	movf	??i1_LIN_sendPeriodicTx,w
  5557  02B9  00F0               	movwf	i1___wmul@multiplier
  5558  02BA  087C               	movf	??i1_LIN_sendPeriodicTx+1,w
  5559  02BB  00F1               	movwf	i1___wmul@multiplier+1
  5560  02BC  3006               	movlw	6
  5561  02BD  00F2               	movwf	i1___wmul@multiplicand
  5562  02BE  3000               	movlw	0
  5563  02BF  00F3               	movwf	i1___wmul@multiplicand+1
  5564  02C0  3186  2665  3182   	fcall	i1___wmul
  5565  02C3  0870               	movf	?i1___wmul,w
  5566  02C4  0020               	movlb	0	; select bank0
  5567  02C5  0761               	addwf	_schedule,w
  5568  02C6  00C7               	movwf	i1LIN_sendPeriodicTx@periodicTx
  5569  02C7  0871               	movf	?i1___wmul+1,w
  5570  02C8  3D62               	addwfc	_schedule+1,w
  5571  02C9  00C8               	movwf	i1LIN_sendPeriodicTx@periodicTx+1
  5572                           
  5573                           ;lin_master.c: 306: if(periodicTx->period > 0){
  5574  02CA  0848               	movf	i1LIN_sendPeriodicTx@periodicTx+1,w
  5575  02CB  00FC               	movwf	??i1_LIN_sendPeriodicTx+1
  5576  02CC  0847               	movf	i1LIN_sendPeriodicTx@periodicTx,w
  5577  02CD  00FB               	movwf	??i1_LIN_sendPeriodicTx
  5578  02CE  3004               	movlw	4
  5579  02CF  077B               	addwf	??i1_LIN_sendPeriodicTx,w
  5580  02D0  0084               	movwf	4
  5581  02D1  087C               	movf	??i1_LIN_sendPeriodicTx+1,w
  5582  02D2  1803               	skipnc
  5583  02D3  0A7C               	incf	??i1_LIN_sendPeriodicTx+1,w
  5584  02D4  0085               	movwf	5
  5585  02D5  0012               	moviw fsr0++
  5586  02D6  1903               	btfsc	3,2
  5587  02D7  2AEF               	goto	i1l1833
  5588                           
  5589                           ;lin_master.c: 307: LIN_queuePacket(periodicTx->cmd, periodicTx->data);
  5590  02D8  0848               	movf	i1LIN_sendPeriodicTx@periodicTx+1,w
  5591  02D9  00FC               	movwf	??i1_LIN_sendPeriodicTx+1
  5592  02DA  0847               	movf	i1LIN_sendPeriodicTx@periodicTx,w
  5593  02DB  00FB               	movwf	??i1_LIN_sendPeriodicTx
  5594  02DC  3005               	movlw	5
  5595  02DD  077B               	addwf	??i1_LIN_sendPeriodicTx,w
  5596  02DE  0084               	movwf	4
  5597  02DF  087C               	movf	??i1_LIN_sendPeriodicTx+1,w
  5598  02E0  1803               	skipnc
  5599  02E1  0A7C               	incf	??i1_LIN_sendPeriodicTx+1,w
  5600  02E2  0085               	movwf	5
  5601  02E3  0800               	movf	0,w	;code access
  5602  02E4  00FD               	movwf	??i1_LIN_sendPeriodicTx+2
  5603  02E5  087D               	movf	??i1_LIN_sendPeriodicTx+2,w
  5604  02E6  00F6               	movwf	i1LIN_queuePacket@data
  5605  02E7  0847               	movf	i1LIN_sendPeriodicTx@periodicTx,w
  5606  02E8  0084               	movwf	4
  5607  02E9  0848               	movf	i1LIN_sendPeriodicTx@periodicTx+1,w
  5608  02EA  0085               	movwf	5
  5609  02EB  0800               	movf	0,w	;code access
  5610  02EC  3181  2100  3182   	fcall	i1_LIN_queuePacket
  5611  02EF                     i1l1833:	
  5612                           ;lin_master.c: 308: }
  5613                           ;lin_master.c: 310: do{
  5614                           
  5615                           
  5616                           ;lin_master.c: 311: if(++scheduleIndex >= scheduleLength){
  5617  02EF  3001               	movlw	1
  5618  02F0  00FB               	movwf	??i1_LIN_sendPeriodicTx
  5619  02F1  087B               	movf	??i1_LIN_sendPeriodicTx,w
  5620  02F2  0020               	movlb	0	; select bank0
  5621  02F3  07AE               	addwf	LIN_sendPeriodicTx@scheduleIndex,f	;volatile
  5622  02F4  0866               	movf	_scheduleLength,w
  5623  02F5  022E               	subwf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5624  02F6  1803               	btfsc	3,0
  5625                           
  5626                           ;lin_master.c: 312: scheduleIndex = 0;
  5627  02F7  01AE               	clrf	LIN_sendPeriodicTx@scheduleIndex	;volatile
  5628                           
  5629                           ;lin_master.c: 313: }
  5630                           ;lin_master.c: 314: periodicTx = schedule + scheduleIndex;
  5631  02F8  082E               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5632  02F9  00FB               	movwf	??i1_LIN_sendPeriodicTx
  5633  02FA  01FC               	clrf	??i1_LIN_sendPeriodicTx+1
  5634  02FB  087B               	movf	??i1_LIN_sendPeriodicTx,w
  5635  02FC  00F0               	movwf	i1___wmul@multiplier
  5636  02FD  087C               	movf	??i1_LIN_sendPeriodicTx+1,w
  5637  02FE  00F1               	movwf	i1___wmul@multiplier+1
  5638  02FF  3006               	movlw	6
  5639  0300  00F2               	movwf	i1___wmul@multiplicand
  5640  0301  3000               	movlw	0
  5641  0302  00F3               	movwf	i1___wmul@multiplicand+1
  5642  0303  3186  2665  3182   	fcall	i1___wmul
  5643  0306  0870               	movf	?i1___wmul,w
  5644  0307  0020               	movlb	0	; select bank0
  5645  0308  0761               	addwf	_schedule,w
  5646  0309  00C7               	movwf	i1LIN_sendPeriodicTx@periodicTx
  5647  030A  0871               	movf	?i1___wmul+1,w
  5648  030B  3D62               	addwfc	_schedule+1,w
  5649  030C  00C8               	movwf	i1LIN_sendPeriodicTx@periodicTx+1
  5650                           
  5651                           ;lin_master.c: 315: } while(periodicTx->period == 0);
  5652  030D  0848               	movf	i1LIN_sendPeriodicTx@periodicTx+1,w
  5653  030E  00FC               	movwf	??i1_LIN_sendPeriodicTx+1
  5654  030F  0847               	movf	i1LIN_sendPeriodicTx@periodicTx,w
  5655  0310  00FB               	movwf	??i1_LIN_sendPeriodicTx
  5656  0311  3004               	movlw	4
  5657  0312  077B               	addwf	??i1_LIN_sendPeriodicTx,w
  5658  0313  0084               	movwf	4
  5659  0314  087C               	movf	??i1_LIN_sendPeriodicTx+1,w
  5660  0315  1803               	skipnc
  5661  0316  0A7C               	incf	??i1_LIN_sendPeriodicTx+1,w
  5662  0317  0085               	movwf	5
  5663  0318  0012               	moviw fsr0++
  5664  0319  1903               	btfsc	3,2
  5665  031A  2AEF               	goto	i1l1833
  5666                           
  5667                           ;lin_master.c: 317: LIN_period = periodicTx->period;
  5668  031B  0848               	movf	i1LIN_sendPeriodicTx@periodicTx+1,w
  5669  031C  00FC               	movwf	??i1_LIN_sendPeriodicTx+1
  5670  031D  0847               	movf	i1LIN_sendPeriodicTx@periodicTx,w
  5671  031E  00FB               	movwf	??i1_LIN_sendPeriodicTx
  5672  031F  3004               	movlw	4
  5673  0320  077B               	addwf	??i1_LIN_sendPeriodicTx,w
  5674  0321  0084               	movwf	4
  5675  0322  087C               	movf	??i1_LIN_sendPeriodicTx+1,w
  5676  0323  1803               	skipnc
  5677  0324  0A7C               	incf	??i1_LIN_sendPeriodicTx+1,w
  5678  0325  0085               	movwf	5
  5679  0326  0800               	movf	0,w	;code access
  5680  0327  00FD               	movwf	??i1_LIN_sendPeriodicTx+2
  5681  0328  087D               	movf	??i1_LIN_sendPeriodicTx+2,w
  5682  0329  00B4               	movwf	_LIN_period
  5683  032A  0008               	return
  5684  032B                     __end_ofi1_LIN_sendPeriodicTx:	
  5685                           
  5686                           	psect	text44
  5687  0665                     __ptext44:	
  5688 ;; *************** function i1___wmul *****************
  5689 ;; Defined at:
  5690 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  multiplier      2    0[COMMON] unsigned int 
  5693 ;;  multiplicand    2    2[COMMON] unsigned int 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  __wmul          2    4[COMMON] unsigned int 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  2    0[COMMON] unsigned int 
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;Total ram usage:        6 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		i1_LIN_sendPeriodicTx
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           
  5719                           ;psect for function i1___wmul
  5720  0665                     i1___wmul:	
  5721                           
  5722                           ;incstack = 0
  5723                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5724  0665  01F4               	clrf	i1___wmul@product
  5725  0666  01F5               	clrf	i1___wmul@product+1
  5726  0667                     i1l1729:	
  5727  0667  1C70               	btfss	i1___wmul@multiplier,0
  5728  0668  2E6D               	goto	i1l593
  5729  0669  0872               	movf	i1___wmul@multiplicand,w
  5730  066A  07F4               	addwf	i1___wmul@product,f
  5731  066B  0873               	movf	i1___wmul@multiplicand+1,w
  5732  066C  3DF5               	addwfc	i1___wmul@product+1,f
  5733  066D                     i1l593:	
  5734  066D  3001               	movlw	1
  5735  066E                     u200_25:	
  5736  066E  35F2               	lslf	i1___wmul@multiplicand,f
  5737  066F  0DF3               	rlf	i1___wmul@multiplicand+1,f
  5738  0670  0B89               	decfsz	9,f
  5739  0671  2E6E               	goto	u200_25
  5740  0672  3001               	movlw	1
  5741  0673                     u201_25:	
  5742  0673  36F1               	lsrf	i1___wmul@multiplier+1,f
  5743  0674  0CF0               	rrf	i1___wmul@multiplier,f
  5744  0675  0B89               	decfsz	9,f
  5745  0676  2E73               	goto	u201_25
  5746  0677  0870               	movf	i1___wmul@multiplier,w
  5747  0678  0471               	iorwf	i1___wmul@multiplier+1,w
  5748  0679  1D03               	btfss	3,2
  5749  067A  2E67               	goto	i1l1729
  5750  067B  0875               	movf	i1___wmul@product+1,w
  5751  067C  00F1               	movwf	?i1___wmul+1
  5752  067D  0874               	movf	i1___wmul@product,w
  5753  067E  00F0               	movwf	?i1___wmul
  5754  067F  0008               	return
  5755  0680                     __end_ofi1___wmul:	
  5756                           
  5757                           	psect	text45
  5758  0100                     __ptext45:	
  5759 ;; *************** function i1_LIN_queuePacket *****************
  5760 ;; Defined at:
  5761 ;;		line 71 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  cmd             1    wreg     unsigned char 
  5764 ;;  data            1    6[COMMON] PTR unsigned char 
  5765 ;;		 -> LFRX_Data(8), RSSI_Data(1), UNLOCK_Data(1), 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  cmd             1    0[BANK0 ] unsigned char 
  5768 ;;  LIN_queuePac    2    2[BANK0 ] PTR const struct .
  5769 ;;		 -> ROM(8192), scheduleTable(18), 
  5770 ;;  LIN_queuePac    1    1[BANK0 ] unsigned char 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5780 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5782 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5783 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;Total ram usage:        9 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    1
  5787 ;; This function calls:
  5788 ;;		i1_LIN_calcParity
  5789 ;;		i1_LIN_getChecksum
  5790 ;; This function is called by:
  5791 ;;		i1_LIN_sendPeriodicTx
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           
  5796                           ;psect for function i1_LIN_queuePacket
  5797  0100                     i1_LIN_queuePacket:	
  5798                           
  5799                           ;incstack = 0
  5800                           ; Regs used in i1_LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5801                           ;i1LIN_queuePacket@cmd stored from wreg
  5802  0100  0020               	movlb	0	; select bank0
  5803  0101  00C3               	movwf	i1LIN_queuePacket@cmd
  5804                           
  5805                           ;lin_master.c: 72: const lin_cmd_packet_t* tempSchedule = schedule;
  5806  0102  0862               	movf	_schedule+1,w
  5807  0103  00C6               	movwf	i1LIN_queuePacket@tempSchedule+1
  5808  0104  0861               	movf	_schedule,w
  5809  0105  00C5               	movwf	i1LIN_queuePacket@tempSchedule
  5810                           
  5811                           ;lin_master.c: 74: for(uint8_t i = 0; i < scheduleLength; i++){
  5812  0106  01C4               	clrf	i1LIN_queuePacket@i
  5813  0107                     i1l1707:	
  5814  0107  0866               	movf	_scheduleLength,w
  5815  0108  0244               	subwf	i1LIN_queuePacket@i,w
  5816  0109  1803               	btfsc	3,0
  5817  010A  291C               	goto	i1l1709
  5818                           
  5819                           ;lin_master.c: 75: if(cmd == tempSchedule->cmd){
  5820  010B  0845               	movf	i1LIN_queuePacket@tempSchedule,w
  5821  010C  0084               	movwf	4
  5822  010D  0846               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5823  010E  0085               	movwf	5
  5824  010F  0800               	movf	0,w	;code access
  5825  0110  0643               	xorwf	i1LIN_queuePacket@cmd,w
  5826  0111  1903               	btfsc	3,2
  5827  0112  291C               	goto	i1l1709
  5828                           
  5829                           ;lin_master.c: 77: }
  5830                           ;lin_master.c: 78: tempSchedule++;
  5831                           
  5832                           ;lin_master.c: 76: break;
  5833  0113  3006               	movlw	6
  5834  0114  07C5               	addwf	i1LIN_queuePacket@tempSchedule,f
  5835  0115  3000               	movlw	0
  5836  0116  3DC6               	addwfc	i1LIN_queuePacket@tempSchedule+1,f
  5837  0117  3001               	movlw	1
  5838  0118  00F7               	movwf	??i1_LIN_queuePacket
  5839  0119  0877               	movf	??i1_LIN_queuePacket,w
  5840  011A  07C4               	addwf	i1LIN_queuePacket@i,f
  5841  011B  2907               	goto	i1l1707
  5842  011C                     i1l1709:	
  5843                           
  5844                           ;lin_master.c: 79: }
  5845                           ;lin_master.c: 82: LIN_packet.PID = LIN_calcParity(tempSchedule->cmd);
  5846  011C  0845               	movf	i1LIN_queuePacket@tempSchedule,w
  5847  011D  0084               	movwf	4
  5848  011E  0846               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5849  011F  0085               	movwf	5
  5850  0120  0800               	movf	0,w	;code access
  5851  0121  3183  232B  3181   	fcall	i1_LIN_calcParity
  5852  0124  00F7               	movwf	??i1_LIN_queuePacket
  5853  0125  0877               	movf	??i1_LIN_queuePacket,w
  5854  0126  0020               	movlb	0	; select bank0
  5855  0127  00B6               	movwf	_LIN_packet
  5856                           
  5857                           ;lin_master.c: 84: if(tempSchedule->type == TRANSMIT){
  5858  0128  0846               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5859  0129  00F8               	movwf	??i1_LIN_queuePacket+1
  5860  012A  0845               	movf	i1LIN_queuePacket@tempSchedule,w
  5861  012B  00F7               	movwf	??i1_LIN_queuePacket
  5862  012C  3001               	movlw	1
  5863  012D  0777               	addwf	??i1_LIN_queuePacket,w
  5864  012E  0084               	movwf	4
  5865  012F  0878               	movf	??i1_LIN_queuePacket+1,w
  5866  0130  1803               	skipnc
  5867  0131  0A78               	incf	??i1_LIN_queuePacket+1,w
  5868  0132  0085               	movwf	5
  5869  0133  0012               	moviw fsr0++
  5870  0134  1D03               	btfss	3,2
  5871  0135  2988               	goto	i1l1723
  5872                           
  5873                           ;lin_master.c: 87: if(tempSchedule->length > 0){
  5874  0136  0846               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5875  0137  00F8               	movwf	??i1_LIN_queuePacket+1
  5876  0138  0845               	movf	i1LIN_queuePacket@tempSchedule,w
  5877  0139  00F7               	movwf	??i1_LIN_queuePacket
  5878  013A  3002               	movlw	2
  5879  013B  0777               	addwf	??i1_LIN_queuePacket,w
  5880  013C  0084               	movwf	4
  5881  013D  0878               	movf	??i1_LIN_queuePacket+1,w
  5882  013E  1803               	skipnc
  5883  013F  0A78               	incf	??i1_LIN_queuePacket+1,w
  5884  0140  0085               	movwf	5
  5885  0141  0012               	moviw fsr0++
  5886  0142  1903               	btfsc	3,2
  5887  0143  2974               	goto	i1l113
  5888                           
  5889                           ;lin_master.c: 88: LIN_packet.length = tempSchedule->length;
  5890  0144  0846               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5891  0145  00F8               	movwf	??i1_LIN_queuePacket+1
  5892  0146  0845               	movf	i1LIN_queuePacket@tempSchedule,w
  5893  0147  00F7               	movwf	??i1_LIN_queuePacket
  5894  0148  3002               	movlw	2
  5895  0149  0777               	addwf	??i1_LIN_queuePacket,w
  5896  014A  0084               	movwf	4
  5897  014B  0878               	movf	??i1_LIN_queuePacket+1,w
  5898  014C  1803               	skipnc
  5899  014D  0A78               	incf	??i1_LIN_queuePacket+1,w
  5900  014E  0085               	movwf	5
  5901  014F  0800               	movf	0,w	;code access
  5902  0150  00F9               	movwf	??i1_LIN_queuePacket+2
  5903  0151  0879               	movf	??i1_LIN_queuePacket+2,w
  5904  0152  00C0               	movwf	_LIN_packet+10
  5905                           
  5906                           ;lin_master.c: 89: __builtin_memcpy(LIN_packet.data,data,tempSchedule->length);
  5907  0153  3001               	movlw	1
  5908  0154  3E36               	addlw	(low (_LIN_packet| 0))& (0+255)
  5909  0155  0086               	movwf	6
  5910  0156  0187               	clrf	7
  5911  0157  0020               	movlb	0	; select bank0
  5912  0158  0846               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5913  0159  00F8               	movwf	??i1_LIN_queuePacket+1
  5914  015A  0845               	movf	i1LIN_queuePacket@tempSchedule,w
  5915  015B  00F7               	movwf	??i1_LIN_queuePacket
  5916  015C  3002               	movlw	2
  5917  015D  0777               	addwf	??i1_LIN_queuePacket,w
  5918  015E  0084               	movwf	4
  5919  015F  0878               	movf	??i1_LIN_queuePacket+1,w
  5920  0160  1803               	skipnc
  5921  0161  0A78               	incf	??i1_LIN_queuePacket+1,w
  5922  0162  0085               	movwf	5
  5923  0163  0800               	movf	0,w	;code access
  5924  0164  00F9               	movwf	??i1_LIN_queuePacket+2
  5925  0165  01FA               	clrf	??i1_LIN_queuePacket+3
  5926  0166  0876               	movf	i1LIN_queuePacket@data,w
  5927  0167  0084               	movwf	4
  5928  0168  0185               	clrf	5
  5929  0169                     u198_2m0:	
  5930  0169  0012               	moviw fsr0++
  5931  016A  001E               	movwi fsr1++
  5932  016B  3001               	movlw	1
  5933  016C  02F9               	subwf	??i1_LIN_queuePacket+2,f
  5934  016D  3000               	movlw	0
  5935  016E  3BFA               	subwfb	??i1_LIN_queuePacket+3,f
  5936  016F  087A               	movf	??i1_LIN_queuePacket+3,w
  5937  0170  0479               	iorwf	??i1_LIN_queuePacket+2,w
  5938  0171  1D03               	btfss	3,2
  5939  0172  2969               	goto	u198_2m0
  5940  0173  297A               	goto	i1l1721
  5941  0174                     i1l113:	
  5942                           ;lin_master.c: 90: } else {
  5943                           
  5944                           
  5945                           ;lin_master.c: 91: LIN_packet.length = 1;
  5946  0174  01C0               	clrf	_LIN_packet+10
  5947  0175  0AC0               	incf	_LIN_packet+10,f
  5948                           
  5949                           ;lin_master.c: 92: LIN_packet.data[0] = 0xAA;
  5950  0176  30AA               	movlw	170
  5951  0177  00F7               	movwf	??i1_LIN_queuePacket
  5952  0178  0877               	movf	??i1_LIN_queuePacket,w
  5953  0179  00B7               	movwf	_LIN_packet+1
  5954  017A                     i1l1721:	
  5955                           
  5956                           ;lin_master.c: 93: }
  5957                           ;lin_master.c: 96: LIN_packet.checksum = LIN_getChecksum(LIN_packet.length, LIN_packet.d
      +                          ata);
  5958  017A  3037               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  5959  017B  00F7               	movwf	??i1_LIN_queuePacket
  5960  017C  0877               	movf	??i1_LIN_queuePacket,w
  5961  017D  00F0               	movwf	i1LIN_getChecksum@data
  5962  017E  0020               	movlb	0	; select bank0
  5963  017F  0840               	movf	_LIN_packet+10,w
  5964  0180  3185  2513  3181   	fcall	i1_LIN_getChecksum
  5965  0183  00F8               	movwf	??i1_LIN_queuePacket+1
  5966  0184  0878               	movf	??i1_LIN_queuePacket+1,w
  5967  0185  0020               	movlb	0	; select bank0
  5968  0186  00BF               	movwf	_LIN_packet+9
  5969                           
  5970                           ;lin_master.c: 98: } else {
  5971  0187  29B3               	goto	i1l1725
  5972  0188                     i1l1723:	
  5973                           
  5974                           ;lin_master.c: 99: LIN_rxPacket.rxLength = tempSchedule->length;
  5975  0188  0846               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5976  0189  00F8               	movwf	??i1_LIN_queuePacket+1
  5977  018A  0845               	movf	i1LIN_queuePacket@tempSchedule,w
  5978  018B  00F7               	movwf	??i1_LIN_queuePacket
  5979  018C  3002               	movlw	2
  5980  018D  0777               	addwf	??i1_LIN_queuePacket,w
  5981  018E  0084               	movwf	4
  5982  018F  0878               	movf	??i1_LIN_queuePacket+1,w
  5983  0190  1803               	skipnc
  5984  0191  0A78               	incf	??i1_LIN_queuePacket+1,w
  5985  0192  0085               	movwf	5
  5986  0193  0800               	movf	0,w	;code access
  5987  0194  00F9               	movwf	??i1_LIN_queuePacket+2
  5988  0195  0879               	movf	??i1_LIN_queuePacket+2,w
  5989  0196  0021               	movlb	1	; select bank1
  5990  0197  00B1               	movwf	(_LIN_rxPacket^(0+128)+1)
  5991                           
  5992                           ;lin_master.c: 100: LIN_rxPacket.cmd = tempSchedule->cmd;
  5993  0198  0020               	movlb	0	; select bank0
  5994  0199  0845               	movf	i1LIN_queuePacket@tempSchedule,w
  5995  019A  0084               	movwf	4
  5996  019B  0846               	movf	i1LIN_queuePacket@tempSchedule+1,w
  5997  019C  0085               	movwf	5
  5998  019D  0800               	movf	0,w	;code access
  5999  019E  00F7               	movwf	??i1_LIN_queuePacket
  6000  019F  0877               	movf	??i1_LIN_queuePacket,w
  6001  01A0  0021               	movlb	1	; select bank1
  6002  01A1  00B0               	movwf	_LIN_rxPacket^(0+128)
  6003                           
  6004                           ;lin_master.c: 101: LIN_rxPacket.timeout = tempSchedule->timeout;
  6005  01A2  0020               	movlb	0	; select bank0
  6006  01A3  0846               	movf	i1LIN_queuePacket@tempSchedule+1,w
  6007  01A4  00F8               	movwf	??i1_LIN_queuePacket+1
  6008  01A5  0845               	movf	i1LIN_queuePacket@tempSchedule,w
  6009  01A6  00F7               	movwf	??i1_LIN_queuePacket
  6010  01A7  3003               	movlw	3
  6011  01A8  0777               	addwf	??i1_LIN_queuePacket,w
  6012  01A9  0084               	movwf	4
  6013  01AA  0878               	movf	??i1_LIN_queuePacket+1,w
  6014  01AB  1803               	skipnc
  6015  01AC  0A78               	incf	??i1_LIN_queuePacket+1,w
  6016  01AD  0085               	movwf	5
  6017  01AE  0800               	movf	0,w	;code access
  6018  01AF  00F9               	movwf	??i1_LIN_queuePacket+2
  6019  01B0  0879               	movf	??i1_LIN_queuePacket+2,w
  6020  01B1  0021               	movlb	1	; select bank1
  6021  01B2  00BB               	movwf	(_LIN_rxPacket^(0+128)+11)
  6022  01B3                     i1l1725:	
  6023                           
  6024                           ;lin_master.c: 102: }
  6025                           ;lin_master.c: 104: LIN_txReady = 1;
  6026  01B3  0020               	movlb	0	; select bank0
  6027  01B4  01B5               	clrf	_LIN_txReady
  6028  01B5  0AB5               	incf	_LIN_txReady,f
  6029  01B6  0008               	return
  6030  01B7                     __end_ofi1_LIN_queuePacket:	
  6031                           
  6032                           	psect	text46
  6033  0513                     __ptext46:	
  6034 ;; *************** function i1_LIN_getChecksum *****************
  6035 ;; Defined at:
  6036 ;;		line 229 in file "mcc_generated_files/LINDrivers/lin_master.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  length          1    wreg     unsigned char 
  6039 ;;  data            1    0[COMMON] PTR unsigned char 
  6040 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  length          1    2[COMMON] unsigned char 
  6043 ;;  LIN_getCheck    2    4[COMMON] unsigned int 
  6044 ;;  LIN_getCheck    1    3[COMMON] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      unsigned char 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6054 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;Total ram usage:        6 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		i1_LIN_queuePacket
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function i1_LIN_getChecksum
  6069  0513                     i1_LIN_getChecksum:	
  6070                           
  6071                           ;incstack = 0
  6072                           ; Regs used in i1_LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  6073                           ;i1LIN_getChecksum@length stored from wreg
  6074  0513  00F2               	movwf	i1LIN_getChecksum@length
  6075                           
  6076                           ;lin_master.c: 230: uint16_t checksum = 0;
  6077  0514  01F4               	clrf	i1LIN_getChecksum@checksum
  6078  0515  01F5               	clrf	i1LIN_getChecksum@checksum+1
  6079                           
  6080                           ;lin_master.c: 232: for (uint8_t i = 0; i < length; i++){
  6081  0516  01F3               	clrf	i1LIN_getChecksum@i
  6082  0517                     i1l1665:	
  6083  0517  0872               	movf	i1LIN_getChecksum@length,w
  6084  0518  0273               	subwf	i1LIN_getChecksum@i,w
  6085  0519  1803               	btfsc	3,0
  6086  051A  2D39               	goto	i1l164
  6087                           
  6088                           ;lin_master.c: 233: checksum = checksum + *data++;
  6089  051B  0870               	movf	i1LIN_getChecksum@data,w
  6090  051C  0086               	movwf	6
  6091  051D  0187               	clrf	7
  6092  051E  0801               	movf	1,w
  6093  051F  0774               	addwf	i1LIN_getChecksum@checksum,w
  6094  0520  00F4               	movwf	i1LIN_getChecksum@checksum
  6095  0521  0875               	movf	i1LIN_getChecksum@checksum+1,w
  6096  0522  1803               	skipnc
  6097  0523  0A75               	incf	i1LIN_getChecksum@checksum+1,w
  6098  0524  00F5               	movwf	i1LIN_getChecksum@checksum+1
  6099  0525  3001               	movlw	1
  6100  0526  00F1               	movwf	??i1_LIN_getChecksum
  6101  0527  0871               	movf	??i1_LIN_getChecksum,w
  6102  0528  07F0               	addwf	i1LIN_getChecksum@data,f
  6103                           
  6104                           ;lin_master.c: 234: if(checksum > 0xFF)
  6105  0529  3001               	movlw	1
  6106  052A  0275               	subwf	i1LIN_getChecksum@checksum+1,w
  6107  052B  3000               	movlw	0
  6108  052C  1903               	skipnz
  6109  052D  0274               	subwf	i1LIN_getChecksum@checksum,w
  6110  052E  1C03               	skipc
  6111  052F  2D34               	goto	i1l1663
  6112                           
  6113                           ;lin_master.c: 235: checksum -= 0xFF;
  6114  0530  30FF               	movlw	255
  6115  0531  02F4               	subwf	i1LIN_getChecksum@checksum,f
  6116  0532  3000               	movlw	0
  6117  0533  3BF5               	subwfb	i1LIN_getChecksum@checksum+1,f
  6118  0534                     i1l1663:	
  6119  0534  3001               	movlw	1
  6120  0535  00F1               	movwf	??i1_LIN_getChecksum
  6121  0536  0871               	movf	??i1_LIN_getChecksum,w
  6122  0537  07F3               	addwf	i1LIN_getChecksum@i,f
  6123  0538  2D17               	goto	i1l1665
  6124  0539                     i1l164:	
  6125                           
  6126                           ;lin_master.c: 236: }
  6127                           ;lin_master.c: 237: checksum = ~checksum;
  6128  0539  09F4               	comf	i1LIN_getChecksum@checksum,f
  6129  053A  09F5               	comf	i1LIN_getChecksum@checksum+1,f
  6130                           
  6131                           ;lin_master.c: 239: return (uint8_t)checksum;
  6132  053B  0874               	movf	i1LIN_getChecksum@checksum,w
  6133  053C  0008               	return
  6134  053D                     __end_ofi1_LIN_getChecksum:	
  6135                           
  6136                           	psect	text47
  6137  032B                     __ptext47:	
  6138 ;; *************** function i1_LIN_calcParity *****************
  6139 ;; Defined at:
  6140 ;;		line 211 in file "mcc_generated_files/LINDrivers/lin_master.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  CMD             1    wreg     unsigned char 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  CMD             1    1[COMMON] unsigned char 
  6145 ;;  LIN_calcPari    1    2[COMMON] struct .
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      unsigned char 
  6148 ;; Registers used:
  6149 ;;		wreg, status,0
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;Total ram usage:        3 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; This function calls:
  6162 ;;		Nothing
  6163 ;; This function is called by:
  6164 ;;		i1_LIN_queuePacket
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           
  6169                           ;psect for function i1_LIN_calcParity
  6170  032B                     i1_LIN_calcParity:	
  6171                           
  6172                           ;incstack = 0
  6173                           ; Regs used in i1_LIN_calcParity: [wreg+status,0]
  6174                           ;i1LIN_calcParity@CMD stored from wreg
  6175  032B  00F1               	movwf	i1LIN_calcParity@CMD
  6176                           
  6177                           ;lin_master.c: 212: lin_pid_t PID;
  6178                           ;lin_master.c: 213: PID.rawPID = CMD;
  6179  032C  0871               	movf	i1LIN_calcParity@CMD,w
  6180  032D  00F0               	movwf	??i1_LIN_calcParity
  6181  032E  0870               	movf	??i1_LIN_calcParity,w
  6182  032F  00F2               	movwf	i1LIN_calcParity@PID
  6183                           
  6184                           ;lin_master.c: 218: PID.P0 = PID.ID0 ^ PID.ID1;
  6185  0330  1CF2               	btfss	i1LIN_calcParity@PID,1
  6186  0331  2B34               	goto	u161_20
  6187  0332  3001               	movlw	1
  6188  0333  2B35               	goto	u161_22
  6189  0334                     u161_20:	
  6190  0334  3000               	movlw	0
  6191  0335                     u161_22:	
  6192  0335  00F0               	movwf	??i1_LIN_calcParity
  6193  0336  1C72               	btfss	i1LIN_calcParity@PID,0
  6194  0337  2B3A               	goto	u162_20
  6195  0338  3001               	movlw	1
  6196  0339  2B3B               	goto	u162_22
  6197  033A                     u162_20:	
  6198  033A  3000               	movlw	0
  6199  033B                     u162_22:	
  6200  033B  0670               	xorwf	??i1_LIN_calcParity,w
  6201  033C  1903               	btfsc	3,2
  6202  033D  2B40               	goto	u163_20
  6203  033E  1772               	bsf	i1LIN_calcParity@PID,6
  6204  033F  2B41               	goto	u164_24
  6205  0340                     u163_20:	
  6206  0340  1372               	bcf	i1LIN_calcParity@PID,6
  6207  0341                     u164_24:	
  6208                           
  6209                           ;lin_master.c: 219: PID.P0 = PID.P0 ^ PID.ID2;
  6210  0341  1D72               	btfss	i1LIN_calcParity@PID,2
  6211  0342  2B45               	goto	u165_20
  6212  0343  3001               	movlw	1
  6213  0344  2B46               	goto	u165_22
  6214  0345                     u165_20:	
  6215  0345  3000               	movlw	0
  6216  0346                     u165_22:	
  6217  0346  00F0               	movwf	??i1_LIN_calcParity
  6218  0347  1F72               	btfss	i1LIN_calcParity@PID,6
  6219  0348  2B4B               	goto	u166_20
  6220  0349  3001               	movlw	1
  6221  034A  2B4C               	goto	u166_22
  6222  034B                     u166_20:	
  6223  034B  3000               	movlw	0
  6224  034C                     u166_22:	
  6225  034C  0670               	xorwf	??i1_LIN_calcParity,w
  6226  034D  1903               	btfsc	3,2
  6227  034E  2B51               	goto	u167_20
  6228  034F  1772               	bsf	i1LIN_calcParity@PID,6
  6229  0350  2B52               	goto	u168_24
  6230  0351                     u167_20:	
  6231  0351  1372               	bcf	i1LIN_calcParity@PID,6
  6232  0352                     u168_24:	
  6233                           
  6234                           ;lin_master.c: 220: PID.P0 = PID.P0 ^ PID.ID4;
  6235  0352  1E72               	btfss	i1LIN_calcParity@PID,4
  6236  0353  2B56               	goto	u169_20
  6237  0354  3001               	movlw	1
  6238  0355  2B57               	goto	u169_22
  6239  0356                     u169_20:	
  6240  0356  3000               	movlw	0
  6241  0357                     u169_22:	
  6242  0357  00F0               	movwf	??i1_LIN_calcParity
  6243  0358  1F72               	btfss	i1LIN_calcParity@PID,6
  6244  0359  2B5C               	goto	u170_20
  6245  035A  3001               	movlw	1
  6246  035B  2B5D               	goto	u170_22
  6247  035C                     u170_20:	
  6248  035C  3000               	movlw	0
  6249  035D                     u170_22:	
  6250  035D  0670               	xorwf	??i1_LIN_calcParity,w
  6251  035E  1903               	btfsc	3,2
  6252  035F  2B62               	goto	u171_20
  6253  0360  1772               	bsf	i1LIN_calcParity@PID,6
  6254  0361  2B63               	goto	u172_24
  6255  0362                     u171_20:	
  6256  0362  1372               	bcf	i1LIN_calcParity@PID,6
  6257  0363                     u172_24:	
  6258                           
  6259                           ;lin_master.c: 221: PID.P1 = PID.ID1 ^ PID.ID3;
  6260  0363  1DF2               	btfss	i1LIN_calcParity@PID,3
  6261  0364  2B67               	goto	u173_20
  6262  0365  3001               	movlw	1
  6263  0366  2B68               	goto	u173_22
  6264  0367                     u173_20:	
  6265  0367  3000               	movlw	0
  6266  0368                     u173_22:	
  6267  0368  00F0               	movwf	??i1_LIN_calcParity
  6268  0369  1CF2               	btfss	i1LIN_calcParity@PID,1
  6269  036A  2B6D               	goto	u174_20
  6270  036B  3001               	movlw	1
  6271  036C  2B6E               	goto	u174_22
  6272  036D                     u174_20:	
  6273  036D  3000               	movlw	0
  6274  036E                     u174_22:	
  6275  036E  0670               	xorwf	??i1_LIN_calcParity,w
  6276  036F  1903               	btfsc	3,2
  6277  0370  2B73               	goto	u175_20
  6278  0371  17F2               	bsf	i1LIN_calcParity@PID,7
  6279  0372  2B74               	goto	u176_24
  6280  0373                     u175_20:	
  6281  0373  13F2               	bcf	i1LIN_calcParity@PID,7
  6282  0374                     u176_24:	
  6283                           
  6284                           ;lin_master.c: 222: PID.P1 = PID.P1 ^ PID.ID4;
  6285  0374  1E72               	btfss	i1LIN_calcParity@PID,4
  6286  0375  2B78               	goto	u177_20
  6287  0376  3001               	movlw	1
  6288  0377  2B79               	goto	u177_22
  6289  0378                     u177_20:	
  6290  0378  3000               	movlw	0
  6291  0379                     u177_22:	
  6292  0379  00F0               	movwf	??i1_LIN_calcParity
  6293  037A  1FF2               	btfss	i1LIN_calcParity@PID,7
  6294  037B  2B7E               	goto	u178_20
  6295  037C  3001               	movlw	1
  6296  037D  2B7F               	goto	u178_22
  6297  037E                     u178_20:	
  6298  037E  3000               	movlw	0
  6299  037F                     u178_22:	
  6300  037F  0670               	xorwf	??i1_LIN_calcParity,w
  6301  0380  1903               	btfsc	3,2
  6302  0381  2B84               	goto	u179_20
  6303  0382  17F2               	bsf	i1LIN_calcParity@PID,7
  6304  0383  2B85               	goto	u180_24
  6305  0384                     u179_20:	
  6306  0384  13F2               	bcf	i1LIN_calcParity@PID,7
  6307  0385                     u180_24:	
  6308                           
  6309                           ;lin_master.c: 223: PID.P1 = PID.P1 ^ PID.ID5;
  6310  0385  1EF2               	btfss	i1LIN_calcParity@PID,5
  6311  0386  2B89               	goto	u181_20
  6312  0387  3001               	movlw	1
  6313  0388  2B8A               	goto	u181_22
  6314  0389                     u181_20:	
  6315  0389  3000               	movlw	0
  6316  038A                     u181_22:	
  6317  038A  00F0               	movwf	??i1_LIN_calcParity
  6318  038B  1FF2               	btfss	i1LIN_calcParity@PID,7
  6319  038C  2B8F               	goto	u182_20
  6320  038D  3001               	movlw	1
  6321  038E  2B90               	goto	u182_22
  6322  038F                     u182_20:	
  6323  038F  3000               	movlw	0
  6324  0390                     u182_22:	
  6325  0390  0670               	xorwf	??i1_LIN_calcParity,w
  6326  0391  1903               	btfsc	3,2
  6327  0392  2B95               	goto	u183_20
  6328  0393  17F2               	bsf	i1LIN_calcParity@PID,7
  6329  0394  2B96               	goto	i1l1647
  6330  0395                     u183_20:	
  6331  0395  13F2               	bcf	i1LIN_calcParity@PID,7
  6332  0396                     i1l1647:	
  6333                           
  6334                           ;lin_master.c: 224: PID.P1 = ~PID.P1;
  6335  0396  1003               	clrc
  6336  0397  1FF2               	btfss	i1LIN_calcParity@PID,7
  6337  0398  1403               	setc
  6338  0399  1C03               	btfss	3,0
  6339  039A  2B9D               	goto	u185_20
  6340  039B  17F2               	bsf	i1LIN_calcParity@PID,7
  6341  039C  2B9E               	goto	i1l1649
  6342  039D                     u185_20:	
  6343  039D  13F2               	bcf	i1LIN_calcParity@PID,7
  6344  039E                     i1l1649:	
  6345                           
  6346                           ;lin_master.c: 226: return PID.rawPID;
  6347  039E  0872               	movf	i1LIN_calcParity@PID,w
  6348  039F  0008               	return
  6349  03A0                     __end_ofi1_LIN_calcParity:	
  6350                           
  6351                           	psect	text48
  6352  0611                     __ptext48:	
  6353 ;; *************** function _EUSART_Transmit_ISR *****************
  6354 ;; Defined at:
  6355 ;;		line 194 in file "mcc_generated_files/eusart.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;Total ram usage:        1 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_EUSART_Initialize
  6379 ;;		_INTERRUPT_InterruptManager
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           
  6384                           ;psect for function _EUSART_Transmit_ISR
  6385  0611                     _EUSART_Transmit_ISR:	
  6386                           
  6387                           ;eusart.c: 198: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  6388                           
  6389                           ;incstack = 0
  6390                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6391  0611  3008               	movlw	8
  6392  0612  0020               	movlb	0	; select bank0
  6393  0613  0263               	subwf	_eusartTxBufferRemaining,w	;volatile
  6394  0614  1803               	skipnc
  6395  0615  2E2B               	goto	i1l447
  6396                           
  6397                           ;eusart.c: 199: {
  6398                           ;eusart.c: 200: TXREG = eusartTxBuffer[eusartTxTail++];
  6399  0616  082C               	movf	_eusartTxTail,w
  6400  0617  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6401  0618  0086               	movwf	6
  6402  0619  0187               	clrf	7
  6403  061A  0801               	movf	1,w
  6404  061B  0023               	movlb	3	; select bank3
  6405  061C  009A               	movwf	26	;volatile
  6406  061D  3001               	movlw	1
  6407  061E  00F0               	movwf	??_EUSART_Transmit_ISR
  6408  061F  0870               	movf	??_EUSART_Transmit_ISR,w
  6409  0620  0020               	movlb	0	; select bank0
  6410  0621  07AC               	addwf	_eusartTxTail,f	;volatile
  6411                           
  6412                           ;eusart.c: 201: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6413  0622  3008               	movlw	8
  6414  0623  022C               	subwf	_eusartTxTail,w	;volatile
  6415  0624  1803               	btfsc	3,0
  6416                           
  6417                           ;eusart.c: 202: {
  6418                           ;eusart.c: 203: eusartTxTail = 0;
  6419  0625  01AC               	clrf	_eusartTxTail	;volatile
  6420                           
  6421                           ;eusart.c: 204: }
  6422                           ;eusart.c: 205: eusartTxBufferRemaining++;
  6423  0626  3001               	movlw	1
  6424  0627  00F0               	movwf	??_EUSART_Transmit_ISR
  6425  0628  0870               	movf	??_EUSART_Transmit_ISR,w
  6426  0629  07E3               	addwf	_eusartTxBufferRemaining,f	;volatile
  6427                           
  6428                           ;eusart.c: 206: }
  6429  062A  0008               	return
  6430  062B                     i1l447:	
  6431                           
  6432                           ;eusart.c: 207: else
  6433                           ;eusart.c: 208: {
  6434                           ;eusart.c: 209: PIE1bits.TXIE = 0;
  6435  062B  0021               	movlb	1	; select bank1
  6436  062C  1211               	bcf	17,4	;volatile
  6437  062D  0008               	return
  6438  062E                     __end_of_EUSART_Transmit_ISR:	
  6439                           
  6440                           	psect	text49
  6441  0455                     __ptext49:	
  6442 ;; *************** function _EUSART_Receive_ISR *****************
  6443 ;; Defined at:
  6444 ;;		line 213 in file "mcc_generated_files/eusart.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;Total ram usage:        0 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    2
  6465 ;; This function calls:
  6466 ;;		Absolute function
  6467 ;;		_EUSART_DefaultErrorHandler
  6468 ;;		_EUSART_DefaultFramingErrorHandler
  6469 ;;		_EUSART_DefaultOverrunErrorHandler
  6470 ;;		_EUSART_RxDataHandler
  6471 ;; This function is called by:
  6472 ;;		_EUSART_Initialize
  6473 ;;		_INTERRUPT_InterruptManager
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           
  6478                           ;psect for function _EUSART_Receive_ISR
  6479  0455                     _EUSART_Receive_ISR:	
  6480                           
  6481                           ;eusart.c: 216: eusartRxStatusBuffer[eusartRxHead].status = 0;
  6482                           
  6483                           ;incstack = 0
  6484                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6485  0455  0020               	movlb	0	; select bank0
  6486  0456  082B               	movf	_eusartRxHead,w	;volatile
  6487  0457  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6488  0458  0086               	movwf	6
  6489  0459  0187               	clrf	7
  6490  045A  0181               	clrf	1
  6491                           
  6492                           ;eusart.c: 218: if(RCSTAbits.FERR){
  6493  045B  0023               	movlb	3	; select bank3
  6494  045C  1D1D               	btfss	29,2	;volatile
  6495  045D  2C6A               	goto	i1l2781
  6496                           
  6497                           ;eusart.c: 219: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6498  045E  0020               	movlb	0	; select bank0
  6499  045F  082B               	movf	_eusartRxHead,w	;volatile
  6500  0460  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6501  0461  0086               	movwf	6
  6502  0462  0187               	clrf	7
  6503  0463  1481               	bsf	1,1
  6504                           
  6505                           ;eusart.c: 220: EUSART_FramingErrorHandler();
  6506  0464  0021               	movlb	1	; select bank1
  6507  0465  0849               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  6508  0466  008A               	movwf	10
  6509  0467  0848               	movf	_EUSART_FramingErrorHandler^(0+128),w
  6510  0468  000A               	callw
  6511  0469  3184               	pagesel	$
  6512  046A                     i1l2781:	
  6513                           
  6514                           ;eusart.c: 221: }
  6515                           ;eusart.c: 223: if(RCSTAbits.OERR){
  6516  046A  0023               	movlb	3	; select bank3
  6517  046B  1C9D               	btfss	29,1	;volatile
  6518  046C  2C79               	goto	i1l2787
  6519                           
  6520                           ;eusart.c: 224: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6521  046D  0020               	movlb	0	; select bank0
  6522  046E  082B               	movf	_eusartRxHead,w	;volatile
  6523  046F  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6524  0470  0086               	movwf	6
  6525  0471  0187               	clrf	7
  6526  0472  1501               	bsf	1,2
  6527                           
  6528                           ;eusart.c: 225: EUSART_OverrunErrorHandler();
  6529  0473  0021               	movlb	1	; select bank1
  6530  0474  0847               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  6531  0475  008A               	movwf	10
  6532  0476  0846               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  6533  0477  000A               	callw
  6534  0478  3184               	pagesel	$
  6535  0479                     i1l2787:	
  6536                           
  6537                           ;eusart.c: 226: }
  6538                           ;eusart.c: 228: if(eusartRxStatusBuffer[eusartRxHead].status){
  6539  0479  0020               	movlb	0	; select bank0
  6540  047A  082B               	movf	_eusartRxHead,w	;volatile
  6541  047B  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6542  047C  0086               	movwf	6
  6543  047D  0187               	clrf	7
  6544  047E  0801               	movf	1,w
  6545  047F  1903               	btfsc	3,2
  6546  0480  2C88               	goto	i1l2791
  6547                           
  6548                           ;eusart.c: 229: EUSART_ErrorHandler();
  6549  0481  0021               	movlb	1	; select bank1
  6550  0482  0845               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  6551  0483  008A               	movwf	10
  6552  0484  0844               	movf	_EUSART_ErrorHandler^(0+128),w
  6553  0485  000A               	callw
  6554  0486  3184               	pagesel	$
  6555                           
  6556                           ;eusart.c: 230: } else {
  6557  0487  0008               	return
  6558  0488                     i1l2791:	
  6559                           
  6560                           ;eusart.c: 231: EUSART_RxDataHandler();
  6561  0488  3186  2680         	fcall	_EUSART_RxDataHandler
  6562  048A  0008               	return
  6563  048B                     __end_of_EUSART_Receive_ISR:	
  6564                           
  6565                           	psect	text50
  6566  079F                     __ptext50:	
  6567 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6568 ;; Defined at:
  6569 ;;		line 249 in file "mcc_generated_files/eusart.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;		None
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		None
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;Total ram usage:        0 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_EUSART_Initialize
  6593 ;;		_EUSART_Receive_ISR
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           
  6598                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6599  079F                     _EUSART_DefaultOverrunErrorHandler:	
  6600                           
  6601                           ;eusart.c: 252: RCSTAbits.CREN = 0;
  6602                           
  6603                           ;incstack = 0
  6604                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6605  079F  0023               	movlb	3	; select bank3
  6606  07A0  121D               	bcf	29,4	;volatile
  6607                           
  6608                           ;eusart.c: 253: RCSTAbits.CREN = 1;
  6609  07A1  161D               	bsf	29,4	;volatile
  6610  07A2  0008               	return
  6611  07A3                     __end_of_EUSART_DefaultOverrunErrorHandler:	
  6612                           
  6613                           	psect	text51
  6614  07AE                     __ptext51:	
  6615 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6616 ;; Defined at:
  6617 ;;		line 247 in file "mcc_generated_files/eusart.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;		None
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		None
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;Total ram usage:        0 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_EUSART_Initialize
  6641 ;;		_EUSART_Receive_ISR
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           
  6646                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6647  07AE                     _EUSART_DefaultFramingErrorHandler:	
  6648                           
  6649                           ;incstack = 0
  6650                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6651  07AE  0008               	return
  6652  07AF                     __end_of_EUSART_DefaultFramingErrorHandler:	
  6653                           
  6654                           	psect	text52
  6655  07A9                     __ptext52:	
  6656 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6657 ;; Defined at:
  6658 ;;		line 257 in file "mcc_generated_files/eusart.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;		None
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;		None
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      void 
  6665 ;; Registers used:
  6666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;Total ram usage:        0 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:    1
  6679 ;; This function calls:
  6680 ;;		_EUSART_RxDataHandler
  6681 ;; This function is called by:
  6682 ;;		_EUSART_Initialize
  6683 ;;		_EUSART_Receive_ISR
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           
  6688                           ;psect for function _EUSART_DefaultErrorHandler
  6689  07A9                     _EUSART_DefaultErrorHandler:	
  6690                           
  6691                           ;eusart.c: 258: EUSART_RxDataHandler();
  6692                           
  6693                           ;incstack = 0
  6694                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6695  07A9  3186  2680         	fcall	_EUSART_RxDataHandler
  6696  07AB  0008               	return
  6697  07AC                     __end_of_EUSART_DefaultErrorHandler:	
  6698                           
  6699                           	psect	text53
  6700  0680                     __ptext53:	
  6701 ;; *************** function _EUSART_RxDataHandler *****************
  6702 ;; Defined at:
  6703 ;;		line 237 in file "mcc_generated_files/eusart.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;		None
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  1    wreg      void 
  6710 ;; Registers used:
  6711 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6721 ;;Total ram usage:        1 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_EUSART_Receive_ISR
  6727 ;;		_EUSART_DefaultErrorHandler
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           
  6732                           ;psect for function _EUSART_RxDataHandler
  6733  0680                     _EUSART_RxDataHandler:	
  6734                           
  6735                           ;eusart.c: 239: eusartRxBuffer[eusartRxHead++] = RCREG;
  6736                           
  6737                           ;incstack = 0
  6738                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6739  0680  0023               	movlb	3	; select bank3
  6740  0681  0819               	movf	25,w	;volatile
  6741  0682  00F0               	movwf	??_EUSART_RxDataHandler
  6742  0683  0020               	movlb	0	; select bank0
  6743  0684  082B               	movf	_eusartRxHead,w
  6744  0685  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6745  0686  0086               	movwf	6
  6746  0687  0187               	clrf	7
  6747  0688  0870               	movf	??_EUSART_RxDataHandler,w
  6748  0689  0081               	movwf	1
  6749  068A  3001               	movlw	1
  6750  068B  00F0               	movwf	??_EUSART_RxDataHandler
  6751  068C  0870               	movf	??_EUSART_RxDataHandler,w
  6752  068D  07AB               	addwf	_eusartRxHead,f	;volatile
  6753                           
  6754                           ;eusart.c: 240: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6755  068E  3008               	movlw	8
  6756  068F  022B               	subwf	_eusartRxHead,w	;volatile
  6757  0690  1803               	btfsc	3,0
  6758                           
  6759                           ;eusart.c: 241: {
  6760                           ;eusart.c: 242: eusartRxHead = 0;
  6761  0691  01AB               	clrf	_eusartRxHead	;volatile
  6762                           
  6763                           ;eusart.c: 243: }
  6764                           ;eusart.c: 244: eusartRxCount++;
  6765  0692  3001               	movlw	1
  6766  0693  00F0               	movwf	??_EUSART_RxDataHandler
  6767  0694  0870               	movf	??_EUSART_RxDataHandler,w
  6768  0695  07A9               	addwf	_eusartRxCount,f	;volatile
  6769  0696  0008               	return
  6770  0697                     __end_of_EUSART_RxDataHandler:	
  6771  007E                     btemp	set	126	;btemp
  6772  007E                     int$flags	set	126
  6773  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    18
    Data        1
    BSS         71
    Persistent  20
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      72
    BANK1            80      8      56
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 12
		 -> LIN_rxPacket.data(BANK1[8]), LIN_rxPacket(BANK1[12]), LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), 
		 -> UNLOCK_Data(BANK0[1]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 11
		 -> LIN_packet(BANK0[11]), processLIN@tempRxData(BANK0[8]), 

    memset@p1	PTR void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    memset@p	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), LIN_timerHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), LIN_timerHandler(), 

    LIN_sendPeriodicTx@periodicTx.data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_sendPeriodicTx@periodicTx	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[18]), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK0[8]), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_packet(BANK0[11]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    LIN_queuePacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule.data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[18]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), processLIN(), 

    LIN_init@table	const PTR const struct . size(2) Largest target is 21
		 -> scheduleTable(CODE[18]), 

    schedule	PTR const struct . size(2) Largest target is 8192
		 -> ROM(CODE[8192]), scheduleTable(CODE[18]), 

    S22$data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 

    scheduleTable.data	PTR unsigned char  size(1) Largest target is 8
		 -> LFRX_Data(BANK1[8]), RSSI_Data(BANK0[1]), UNLOCK_Data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_LIN_timerHandler->i1_LIN_sendPeriodicTx
    i1_LIN_sendPeriodicTx->i1_LIN_queuePacket
    i1_LIN_queuePacket->i1_LIN_getChecksum
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_timerHandler->_LIN_sendPeriodicTx
    _LIN_sendPeriodicTx->_LIN_queuePacket
    _LIN_queuePacket->_LIN_getChecksum
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LIN_handler->_processLIN
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memset
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_sendPacket->_EUSART_Write
    _LIN_receivePacket->_LIN_getChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_ISR->i1_LIN_timerHandler
    i1_LIN_timerHandler->i1_LIN_sendPeriodicTx
    i1_LIN_sendPeriodicTx->i1_LIN_queuePacket

Critical Paths under _main in BANK1

    _LIN_Master_Initialize->_LIN_init
    _LIN_init->_LIN_timerHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4804
                                              7 BANK1      1     1      0
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2994
                  _EUSART_Initialize
              _LIN_Master_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     185
                                             10 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Master_Initialize                                0     0      0    2379
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             6     2      4    2379
                                              1 BANK1      6     2      4
                _LIN_setTimerHandler
                    _LIN_startPeriod
                      _LIN_stopTimer
                   _LIN_timerHandler
 ---------------------------------------------------------------------------------
 (4) _LIN_timerHandler                                     1     1      0    1947
                                              0 BANK1      1     1      0
                 _LIN_sendPeriodicTx
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (5) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LIN_sendPeriodicTx                                   5     5      0    1947
                                             23 BANK0      5     5      0
                    _LIN_queuePacket
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     444
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _LIN_queuePacket                                      9     8      1    1342
                                             14 BANK0      9     8      1
                     _LIN_calcParity
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (7) _LIN_calcParity                                       3     3      0     489
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _LIN_startPeriod                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     185
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     185
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     430
                                             10 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      86
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          1     1      0    1810
                                              0 BANK1      1     1      0
                   Absolute function *
                 _EUSART_is_rx_ready
                      _LIN_disableRx
                       _LIN_enableRx
                  _LIN_receivePacket
                     _LIN_sendPacket
                     _LIN_startTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                          10    10      0     690
                                             18 BANK0     10    10      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        3     3      0     645
                                             15 BANK0      3     3      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     570
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       2     2      0      44
                                              9 BANK0      2     2      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      1     1      0      22
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LIN_sendPacket                                       2     2      0      90
                                             10 BANK0      2     2      0
                       _EUSART_Write
                      _LIN_sendBreak
 ---------------------------------------------------------------------------------
 (3) _LIN_sendBreak                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_receivePacket                                    2     2      0     416
                                             14 BANK0      2     2      0
                        _EUSART_Read
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (7) _LIN_getChecksum                                      6     5      1     392
                                              8 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      24
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           1     1      0    1127
                                              7 BANK0      1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0    1127
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                 i1_LIN_timerHandler *
 ---------------------------------------------------------------------------------
 (10) i1_LIN_timerHandler                                  1     1      0    1127
                                              6 BANK0      1     1      0
               i1_LIN_sendPeriodicTx
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (11) i1_LIN_stopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_LIN_sendPeriodicTx                                5     5      0    1127
                                             11 COMMON     3     3      0
                                              4 BANK0      2     2      0
                  i1_LIN_queuePacket
                           i1___wmul
 ---------------------------------------------------------------------------------
 (12) i1___wmul                                            6     2      4     196
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (12) i1_LIN_queuePacket                                   9     8      1     819
                                              6 COMMON     5     4      1
                                              0 BANK0      4     4      0
                   i1_LIN_calcParity
                  i1_LIN_getChecksum
 ---------------------------------------------------------------------------------
 (13) i1_LIN_getChecksum                                   6     5      1     187
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (13) i1_LIN_calcParity                                    3     3      0     338
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_handler
     Absolute function(Fake) *
     _EUSART_is_rx_ready *
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_receivePacket *
       _EUSART_Read
       _LIN_getChecksum
     _LIN_sendPacket *
       _EUSART_Write
       _LIN_sendBreak
     _LIN_startTimer *
       _TMR0_WriteTimer
     _memset *
     _processLIN *
       _LIN_getPacket
         _memset
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _LIN_Master_Initialize
       _LIN_init
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_startPeriod
         _LIN_stopTimer
         _LIN_timerHandler
           _LIN_sendPeriodicTx
             _LIN_queuePacket
               _LIN_calcParity
               _LIN_getChecksum
             ___wmul
           _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     i1_LIN_timerHandler *
       i1_LIN_sendPeriodicTx
         i1_LIN_queuePacket
           i1_LIN_calcParity
           i1_LIN_getChecksum
         i1___wmul
       i1_LIN_stopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      8      38       7       70.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 14 20:58:04 2018

                ?_EUSART_SetRxInterruptHandler 004B                          __end_of_LIN_getPacket 05AF  
                        ??_LIN_setTimerHandler 004D                          __end_of_LIN_disableRx 078F  
                               _scheduleLength 0066                                    __CFG_CP$OFF 0000  
                                           l26 06EA                            ___wmul@multiplicand 004D  
                             i1___wmul@product 0074                                _timer0ReloadVal 0064  
                              ?_LIN_calcParity 0070                                    __CFG_LVP$ON 0000  
                                          l113 00BD                                            l126 03BB  
                                          l137 0411                                            l164 050F  
                                          l441 05BC                                            l593 0637  
                                 __CFG_CPD$OFF 0000                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 004B                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                        __end_of_scheduleTable 06FD                                   ?_EUSART_Read 0070  
                                         l2113 022F                                           l2131 04ED  
                                         l2115 0239                                           l2151 0065  
                                         l2215 0579                                           l2129 050A  
                                         l2209 0568                                           l2163 00C3  
                                         l2171 0631                                           l2165 00D1  
                                         l2149 0050                                           l2247 04B9  
                                         l2239 04A3                                           l2167 00FC  
                                         l2193 0277                                           l1761 053F  
                                         l1693 0650                                           l2717 03A1  
                                         l1871 04E4                                           l1785 05B1  
                                         l2753 03F9                                           l2745 03E4  
                                         l2737 03D2                                           l2739 03D5  
                                         l1869 04D1                                           l1799 05D0  
                                         l2759 0402                                           _LATA 010C  
                                         _LATC 010E                                           u2410 01C1  
                                         u2500 01ED                                           u2420 01C7  
                                         u2412 01C2                                           u2510 01F4  
                                         u2502 01EE                                           u2430 01CE  
                                         u2422 01C8                                           u2610 0220  
                                         u2530 01FA                                           u2450 01D4  
                                         u2620 0226                                           u2612 0221  
                                         u2604 021C                                           u2540 0200  
                                         u2532 01FB                                           u2524 01F6  
                                         u2460 01DA                                           u2452 01D5  
                                         u2444 01D0                                           u2630 022D  
                                         u2622 0227                                           u2550 0207  
                                         u2542 0201                                           u2470 01E1  
                                         u2462 01DB                                           u2650 0237  
                                         u2570 020D                                           u2490 01E7  
                                         u2580 0213                                           u2572 020E  
                                         u2564 0209                                           u2492 01E8  
                                         u2484 01E3                                           u2590 021A  
                                         u2582 0214                                           u2755 0638  
                                         u2765 063D                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUC 020E  
                               _LIN_sendPacket 04BB                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                          __end_of_LIN_sendBreak 07A6  
                                         _main 06AD                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0030  
                                processLIN@cmd 005E                                  __CFG_MCLRE$ON 0000  
                     LIN_receivePacket@rxIndex 002F                        __end_of_TMR0_Initialize 06D7  
                __size_ofi1_LIN_sendPeriodicTx 0078                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0774                                          ?_main 0070  
                                __CFG_WDTE$OFF 0000                                          i1l113 0174  
                                        i1l164 0539                                          i1l341 002B  
                                        i1l333 0010                                          i1l336 001F  
                                        i1l447 062B                                _TMR0_WriteTimer 0780  
                                        i1l593 066D                                          u203m0 059D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        u273m0 00B2                                          _TRISA 008C  
                                        _TRISC 008E                                          _TXREG 019A  
                             __end_of_LIN_init 05F3                          __end_of_LIN_stopTimer 0797  
                                        _TXSTA 019E              __size_of_TMR0_SetInterruptHandler 0006  
                    ?_TMR0_SetInterruptHandler 004B                               __end_of_TMR0_ISR 072B  
                               _WDT_Initialize 078F                         __end_of_LIN_sendPacket 04E8  
                i1LIN_queuePacket@tempSchedule 0045                                          pclath 000A  
                             __end_ofi1___wmul 0680                                 _LIN_startTimer 070F  
                                        status 0003                            i1___wmul@multiplier 0070  
                                        wtemp0 007E                         ?_LIN_Master_Initialize 0070  
                             ?_LIN_getChecksum 004B                    LIN_queuePacket@tempSchedule 0058  
                              __initialization 0032                      __size_of_LIN_timerHandler 0026  
                                 ?_LIN_handler 0070                                   __end_of_main 06C2  
                               ??_EUSART_Write 004B                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 004D                                         ??_main 00D7  
                               __CFG_PLLEN$OFF 0000                         __end_of_WDT_Initialize 0793  
                           i1LIN_queuePacket@i 0044      __end_of_EUSART_DefaultFramingErrorHandler 07AF  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 07AE  
                   _EUSART_OverrunErrorHandler 00C6                         __end_of_LIN_startTimer 071D  
                              ?_LIN_sendPacket 0070                                         _ANSELA 018C  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 07A9  
                                       _BORCON 0116                                         u200_25 066E  
                                       i1l1721 017A                                         i1l1723 0188  
                                       i1l1707 0107                                         i1l1725 01B3  
                                       i1l1709 011C                                         u201_25 0673  
                                       i1l1647 0396                                         i1l1663 0534  
                                       i1l1649 039E                                         i1l1665 0517  
                                       i1l1729 0667                                         i1l1833 02EF  
                                       i1l2781 046A                                         i1l1981 0602  
                                       i1l2791 0488                                         i1l1975 05F3  
                                       i1l2787 0479                                         u161_20 0334  
                                       u161_22 0335                                         u170_20 035C  
                                       u162_20 033A                                         u170_22 035D  
                                       u162_22 033B                                         u171_20 0362  
                                       u163_20 0340                                         u180_24 0385  
                                       u172_24 0363                                         u164_24 0341  
                                       u181_20 0389                                         u173_20 0367  
                                       u165_20 0345                                         u181_22 038A  
                                       u173_22 0368                                         u165_22 0346  
                                       u182_20 038F                                         u174_20 036D  
                                       u166_20 034B                                         u182_22 0390  
                                       u174_22 036E                                         u166_22 034C  
                                       u183_20 0395                                         u175_20 0373  
                                       u167_20 0351                                         u176_24 0374  
                                       u168_24 0352                                         u185_20 039D  
                                       u177_20 0378                                         u169_20 0356  
                                       u177_22 0379                                         u169_22 0357  
                                       u178_20 037E                                         u178_22 037F  
                                       u179_20 0384                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                _LIN_processData 00CA  
                             i1_LIN_calcParity 032B                                 __CFG_PWRTE$OFF 0000  
                  __size_of_LIN_sendPeriodicTx 0078                                         ___wmul 062E  
                               __CFG_STVREN$ON 0000                                _LIN_queuePacket 0049  
                      __end_of_TMR0_WriteTimer 0785                        i1LIN_getChecksum@length 0072  
                          _EUSART_Transmit_ISR 0611                               ?_TMR0_Initialize 0070  
                                       _memset 064A                             _LIN_enablePeriodTx 0065  
                   __end_ofi1_LIN_timerHandler 0611                                _LIN_startPeriod 0797  
                              ?_WDT_Initialize 0070       TMR0_SetInterruptHandler@InterruptHandler 004B  
                              ?_LIN_startTimer 0070                           ?_EUSART_Transmit_ISR 0070  
                         __size_of_EUSART_Read 0027                              _SYSTEM_Initialize 06FD  
                      __end_of__initialization 0045                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0741          __size_of_EUSART_SetTxInterruptHandler 0009  
                 _EUSART_SetTxInterruptHandler 0738                                      ?_LIN_init 00D1  
                               __pcstackCOMMON 0070                                  ?_LIN_enableRx 0070  
                             ??_LIN_calcParity 004B                                LIN_sendPacket@i 004E  
                                 __pidataBANK0 07AC                            ??_SYSTEM_Initialize 005F  
                            _LIN_receivePacket 048B                                  LIN_init@table 00D1  
                                    ?_TMR0_ISR 0070                             ?_LIN_receivePacket 0070  
                                    ?i1___wmul 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                            ??_LIN_receivePacket 0051  
              ??_EUSART_SetOverrunErrorHandler 004D                      __end_of_SYSTEM_Initialize 070F  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 05D3  
                     __size_ofi1_LIN_stopTimer 0004                    __end_of_LIN_setTimerHandler 076D  
                  __size_of_EUSART_Receive_ISR 0036                        __end_of_LIN_queuePacket 0100  
                         LIN_handler@LIN_state 0030                      __end_of_LIN_receivePacket 04BB  
                               ??_LIN_enableRx 004B                                     __pmaintext 06AD  
                             _LIN_timerHandler 0564                                     ??_LIN_init 00D5  
                          LIN_getChecksum@data 004B                  ?_EUSART_SetTxInterruptHandler 004B  
             _EUSART_TxDefaultInterruptHandler 00CE               __end_of_TMR0_SetInterruptHandler 0780  
                                      ?___wmul 004B                                     ??_TMR0_ISR 007E  
                                   __pintentry 0004                               ?_TMR0_WriteTimer 0070  
                         __size_of_LIN_handler 0072                        __end_of_LIN_startPeriod 079B  
                                      _BAUDCON 019F                                        ?_memset 004B  
                                      _APFCON0 011D                                        _APFCON1 011E  
                 ??_EUSART_DefaultErrorHandler 0071                          LIN_getChecksum@length 004D  
                                   ??i1___wmul 0074                               _LIN_timerRunning 0033  
                                _eusartRxCount 0029                                        u198_2m0 0169  
                __size_of_EUSART_RxDataHandler 0017                          i1LIN_queuePacket@data 0076  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 004D  
                       __size_of_LIN_getPacket 0025                   __end_ofi1_LIN_sendPeriodicTx 032B  
                       __size_of_LIN_disableRx 0005                        ??_LIN_Master_Initialize 005F  
                      LIN_getChecksum@checksum 004F            __size_of_EUSART_DefaultErrorHandler 0003  
                              __size_of___wmul 001C                      i1LIN_getChecksum@checksum 0074  
                              __size_of_memset 001B                                        __ptext1 06FD  
                                      __ptext2 078F                                        __ptext3 06C2  
                                      __ptext4 0697                                        __ptext5 076D  
                                      __ptext6 072B                                        __ptext7 05D3  
                                      __ptext8 0564                                        __ptext9 0793  
                     __end_ofi1_LIN_calcParity 03A0                         __size_of_LIN_sendBreak 0003  
                        _OSCILLATOR_Initialize 076D                               ??_LIN_sendPacket 004D  
                     ??_PIN_MANAGER_Initialize 004B                     __size_of_SYSTEM_Initialize 0012  
                                      clrloop0 0775                           end_of_initialization 0045  
        __end_of_EUSART_SetOverrunErrorHandler 0753         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 074A                                        memset@c 004B  
                                      memset@n 004D                                        memset@p 0050  
                                    _LFRX_Data 00BC                              _EUSART_Initialize 0412  
                             ?_LIN_queuePacket 0051                     __size_of_LIN_receivePacket 0030  
                           ?_EUSART_Initialize 0070                         __size_of_LIN_stopTimer 0004  
                            i1_LIN_getChecksum 0513                                      _RCSTAbits 019D  
                            ??i1_LIN_stopTimer 0070                             _EUSART_is_rx_ready 07A6  
                                _LIN_getPacket 058A                                   __pstringtext 06EB  
                           ?i1_LIN_getChecksum 0070                                  _LIN_disableRx 078A  
                        i1___wmul@multiplicand 0072                               ?_LIN_startPeriod 0070  
                     __size_of_LIN_getChecksum 002B                            ??_EUSART_Initialize 004D  
                             ??_WDT_Initialize 004B                 ??_EUSART_SetTxInterruptHandler 004D  
                            LIN_getPacket@data 0054                       _TMR0_SetInterruptHandler 077A  
                          ?_EUSART_is_rx_ready 0070                                     _processLIN 06D7  
                          ??i1_LIN_getChecksum 0071                            LIN_init@tableLength 00D6  
                             ??_LIN_startTimer 004C                               __CFG_FOSC$INTOSC 0000  
                        __size_of_EUSART_Write 0024                                      _RSSI_Data 0041  
                         __end_of_LIN_enableRx 078A                                  _scheduleTable 06EB  
              __size_of_EUSART_SetErrorHandler 0009                   LIN_sendPeriodicTx@periodicTx 005D  
                           i1_LIN_timerHandler 05F3                      __end_of_EUSART_Initialize 0455  
                         ??_EUSART_is_rx_ready 004B                     __end_of_LIN_sendPeriodicTx 02B3  
                                _LIN_sendBreak 07A3                                      _TXSTAbits 019E  
                    __end_ofi1_LIN_getChecksum 053D                            ?i1_LIN_timerHandler 0070  
                               ?_LIN_getPacket 0070                                 ?_LIN_disableRx 0070  
                            __size_of_LIN_init 0020             __end_of_EUSART_DefaultErrorHandler 07AC  
                   _EUSART_DefaultErrorHandler 07A9                                 __end_of___wmul 064A  
                         i1_LIN_sendPeriodicTx 02B3                                   _EUSART_Write 05AF  
                            __size_of_TMR0_ISR 000E                         ?_OSCILLATOR_Initialize 0070  
              LIN_sendPeriodicTx@scheduleIndex 002E                                 __end_of_memset 0665  
                          start_initialization 0032                              __size_ofi1___wmul 001B  
                         ??i1_LIN_timerHandler 0049                                  _LIN_stopTimer 0793  
                     __size_of_TMR0_Initialize 0015                __size_of_PIN_MANAGER_Initialize 0016  
                     __end_of_LIN_timerHandler 058A                                  ??_EUSART_Read 004B  
 EUSART_SetRxInterruptHandler@interruptHandler 004B   EUSART_SetTxInterruptHandler@interruptHandler 004B  
                   _LIN_timerHandler$intlevel0 0568                          LIN_startTimer@timeout 004D  
                               ?_LIN_sendBreak 0070                              LIN_calcParity@CMD 004C  
               ?_EUSART_SetOverrunErrorHandler 004B                              LIN_calcParity@PID 004D  
                   _EUSART_FramingErrorHandler 00C8                                       ??___wmul 004F  
                       _EUSART_SetErrorHandler 075C                                    __pdataBANK0 0067  
                        ?i1_LIN_sendPeriodicTx 0070                                       ??_memset 004F  
                         processLIN@tempRxData 0056                                    ?_processLIN 0070  
                          LIN_init@processData 00D3                    __end_of_EUSART_Transmit_ISR 062E  
                               ?_LIN_stopTimer 0070                                      ___latbits 0002  
                                __pcstackBANK0 0043                                  __pcstackBANK1 00D0  
                            ??_LIN_getChecksum 004C                     __end_of_EUSART_Receive_ISR 048B  
                   __size_of_EUSART_Initialize 0043                              _LIN_timerCallBack 0032  
             _EUSART_RxDefaultInterruptHandler 00CC                 __size_of_LIN_Master_Initialize 000D  
                          __end_of_EUSART_Read 0564                  __end_of_LIN_Master_Initialize 0738  
                        _TMR0_InterruptHandler 005F                                      __pnvBANK0 005F  
                                    __pnvBANK1 00C4                     __size_ofi1_LIN_getChecksum 002A  
                 __end_of_EUSART_RxDataHandler 0697                                ??_LIN_getPacket 0052  
                       _PIN_MANAGER_Initialize 0697                                  ??_LIN_handler 00D0  
                             LIN_getChecksum@i 004E                                ??_LIN_disableRx 004B  
                         EUSART_Read@readValue 004C                   __size_of_LIN_setTimerHandler 0008  
                                 _eusartRxHead 002B                                   _eusartTxHead 002D  
                                 _eusartRxTail 002A                                   _eusartTxTail 002C  
                 ??_INTERRUPT_InterruptManager 004A                           i1LIN_queuePacket@cmd 0043  
                        __size_of_LIN_enableRx 0005                        _eusartTxBufferRemaining 0063  
                            ?i1_LIN_calcParity 0070                        __size_of_LIN_calcParity 0084  
                     __size_of_TMR0_WriteTimer 0005                             ??i1_LIN_calcParity 0070  
                              ??_LIN_sendBreak 004B                                i1_LIN_stopTimer 079B  
                               _eusartRxBuffer 00A0                              ??_TMR0_Initialize 004D  
                               _eusartTxBuffer 00A8                                 ___wmul@product 004F  
       EUSART_SetErrorHandler@interruptHandler 004B                                      clear_ram0 0774  
                          __size_of_processLIN 0014                                       _PIE1bits 0091  
                            _eusartRxLastError 0028            __size_of_INTERRUPT_InterruptManager 002C  
                   ??_TMR0_SetInterruptHandler 004D                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 004D                                       _LIN_init 05D3  
                                 _LIN_enableRx 0785                         ??i1_LIN_sendPeriodicTx 007B  
                                     _TMR0_ISR 071D      __end_of_EUSART_DefaultOverrunErrorHandler 07A3  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 079F  
                             LIN_getPacket@cmd 0053                            __end_of_LIN_handler 0412  
                            ___wmul@multiplier 004B                                       i1___wmul 0665  
                              ??_LIN_stopTimer 004B                                   _LIN_rxPacket 00B0  
                                  _EUSART_Read 053D                             _LIN_periodCallBack 0031  
                            i1_LIN_queuePacket 0100                          i1LIN_getChecksum@data 0070  
                           ?i1_LIN_queuePacket 0076                        ??_OSCILLATOR_Initialize 004B  
                          _EUSART_ErrorHandler 00C4                       __size_of_LIN_queuePacket 00B7  
                  ?_EUSART_DefaultErrorHandler 0070                             _LIN_sendPeriodicTx 023B  
                          ??i1_LIN_queuePacket 0077                        __end_ofi1_LIN_stopTimer 079F  
                          ?_LIN_sendPeriodicTx 0070                       __size_of_LIN_startPeriod 0004  
                         _EUSART_RxDataHandler 0680                                       __ptext10 023B  
                                     __ptext11 062E                                       __ptext20 074A  
                                     __ptext12 0049                                       __ptext21 0753  
                                     __ptext13 01B7                                       __ptext30 07A3  
                                     __ptext22 075C                                       __ptext14 0797  
                                     __ptext31 05AF                                       __ptext23 03A0  
                                     __ptext15 0765                                       __ptext40 07AD  
                                     __ptext32 048B                                       __ptext24 06D7  
                                     __ptext16 077A                                       __ptext41 05F3  
                                     __ptext33 04E8                                       __ptext25 058A  
                                     __ptext17 0412                                       __ptext50 079F  
                                     __ptext42 079B                                       __ptext34 053D  
                                     __ptext26 064A                                       __ptext18 0738  
                                     __ptext51 07AE                                       __ptext43 02B3  
                                     __ptext35 0785                                       __ptext27 070F  
                                     __ptext19 0741                                       __ptext52 07A9  
                                     __ptext44 0665                                       __ptext36 078A  
                                     __ptext28 0780                                       __ptext53 0680  
                                     __ptext45 0100                                       __ptext37 07A6  
                                     __ptext29 04BB                                       __ptext46 0513  
                                     __ptext47 032B                                       __ptext39 071D  
                                     __ptext48 0611                                       __ptext49 0455  
                            ?_LIN_timerHandler 0070                        TMR0_WriteTimer@timerVal 004B  
                           ??_LIN_timerHandler 00D0                              ??_TMR0_WriteTimer 004B  
                           i1LIN_getChecksum@i 0073                        __size_of_LIN_sendPacket 002D  
                  __size_of_EUSART_is_rx_ready 0003                                  __size_of_main 0015  
                    __end_ofi1_LIN_queuePacket 01B7           __end_of_TMR0_DefaultInterruptHandler 07AE  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 07AD  
                                     _schedule 0061                        ?_EUSART_SetErrorHandler 004B  
                         ??_LIN_sendPeriodicTx 005A  EUSART_SetOverrunErrorHandler@interruptHandler 004B  
                                  _LIN_handler 03A0                                       int$flags 007E  
                              _LIN_getChecksum 04E8             __end_of_INTERRUPT_InterruptManager 0030  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 075C  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0753  
               i1LIN_sendPeriodicTx@periodicTx 0047                                   ??_processLIN 0055  
                                  _LIN_txReady 0035                                    _LIN_timeout 0067  
                               _LIN_calcParity 01B7                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                    __size_ofi1_LIN_timerHandler 001E  
                          LIN_queuePacket@data 0051                                       memset@p1 0051  
                      __size_of_WDT_Initialize 0004                            _LIN_setTimerHandler 0765  
                                     intlevel1 0000                        __size_of_LIN_startTimer 000E  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0765  
                            __CFG_CLKOUTEN$OFF 0000                             __end_of_processLIN 06EB  
         __end_of_EUSART_SetRxInterruptHandler 074A          __size_of_EUSART_SetRxInterruptHandler 0009  
                 _EUSART_SetRxInterruptHandler 0741                  ?_TMR0_DefaultInterruptHandler 0070  
                                   _LIN_packet 0036                             _EUSART_Receive_ISR 0455  
                         ?_LIN_setTimerHandler 0070                                     _LIN_period 0034  
EUSART_SetFramingErrorHandler@interruptHandler 004B                         __end_of_LIN_calcParity 023B  
                           LIN_queuePacket@cmd 0056                                     _OPTION_REG 0095  
                          ?_EUSART_Receive_ISR 0070                                _TMR0_Initialize 06C2  
                                  _UNLOCK_Data 0042                            i1LIN_calcParity@CMD 0071  
                            ??_LIN_queuePacket 0052                            i1LIN_calcParity@PID 0072  
                             ?i1_LIN_stopTimer 0070                             EUSART_Write@txData 004C  
                 __size_of_EUSART_Transmit_ISR 001D                 __end_of_PIN_MANAGER_Initialize 06AD  
                            ??_LIN_startPeriod 004B                               LIN_queuePacket@i 0057  
                         ??_EUSART_Receive_ISR 0071                      __size_ofi1_LIN_calcParity 0075  
                   __size_ofi1_LIN_queuePacket 00B7                        __end_of_LIN_getChecksum 0513  
                        _LIN_Master_Initialize 072B  
